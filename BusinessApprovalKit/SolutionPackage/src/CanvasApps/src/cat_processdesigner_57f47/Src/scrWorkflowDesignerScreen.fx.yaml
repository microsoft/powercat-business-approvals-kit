"scrWorkflowDesignerScreen As screen.'autoLayout_HeaderFooter_ver1.0'":
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
    OnVisible: |-
        =// We open & close the panel to know the container dimensions upfront 
        
        UpdateContext(
                {
                    busyMessage: "Loading...",
                    isPanelOpen: true,
                    isPanelVisible: true
                });
        If(
                IsBlankOrError(_selectedProcess),
                Set(
                    _selectedProcess,
                    Patch(
                        'Business Approval Processes',
                        Defaults('Business Approval Processes'),
                        {Name: txtInputProcessName.Value}
                    )
                )
        );
            
        /*******Publish Process starts*******/
        //check last published version
        With({ 
            publishedVersions: 
                SortByColumns(
                    Filter('Business Approval Versions', Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'),
                    "cat_version", SortOrder.Descending
                )
            },
            UpdateContext({ isPublishReady: false, lastPublished: First(publishedVersions) })
        );
        
        //validate process stages
        Clear(_emptyNodes);
        If(IsEmpty(_validationChecks),
            ClearCollect(_validationChecks,
                { Id: 1, Check: "First approval stage must not have any condition", Status: Blank(), Details: ""},
                { Id: 2, Check: "First node in first stage must not have any condition", Status: Blank(), Details: ""},
                { Id: 3, Check: "Approval stage must have at least one Node", Status: Blank(), Details: ""},
                { Id: 4, Check: "No stage is inaccessible", Status: true, Details: "" }
            )
        );
        
        UpdateContext({ firstStage: 
            First(SortByColumns(
                Filter('Business Approval Stages', Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'),
                "cat_order", SortOrder.Ascending
            ))}
        );
        
        //check condition 1
        UpdateIf(_validationChecks, Id = 1, 
            { Status: CountRows(Filter('Business Approval Conditions', Stage.'Business Approval Stage' = firstStage.'Business Approval Stage')) = 0 }
        );
        
        //check condition 2
        With({ firstNode: 
            First(
                SortByColumns(
                    Filter('Business Approval Nodes', Stage.'Business Approval Stage' = firstStage.'Business Approval Stage'),
                    "cat_rowindex", SortOrder.Ascending)
            )},
            UpdateIf(_validationChecks, Id = 2, 
                With({ firstNodeId: firstNode.'Business Approval Node'},
                { 
                    Status: CountRows(Filter('Business Approval Conditions', Node.'Business Approval Node' = firstNodeId)) = 0             
                })
            )
        );
        
        //check condition 3
        ForAll(_selectedProcess.'Business Approval Stages' As valStages, 
            Collect(_emptyNodes, 
                CountRows(Filter('Business Approval Nodes', Stage.'Business Approval Stage' = valStages.'Business Approval Stage')) > 0
            )
        );
        UpdateIf(_validationChecks, Id = 3, { Status: CountIf(_emptyNodes, Value = false) = 0 });
        UpdateContext({ isPublishReady: true });
        
        /*******Publish Process ends*******/
        UpdateContext(
                {
                    isPanelOpen: false,
                    isPanelVisible: false
                });
        Set(_isBusy,false);

    MainContainer As groupContainer.verticalAutoLayoutContainer:
        DropShadow: =DropShadow.Light
        Fill: =RGBA(245, 245, 245, 1)
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =16
        LayoutMode: =LayoutMode.Auto
        PaddingBottom: =16
        PaddingLeft: =16
        PaddingRight: =16
        PaddingTop: =16
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Width: =Parent.Width
        ZIndex: =1

        HeaderContainer1 As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =RGBA(255, 255, 255, 1)
            FillPortions: =0
            Height: =50
            LayoutAlignItems: =LayoutAlignItems.End
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =5
            PaddingLeft: =20
            PaddingRight: =20
            PaddingTop: =5
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            ZIndex: =2

            HeaderContainerLeft As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Center
                Fill: =RGBA(255, 255, 255, 1)
                FillPortions: =0
                Height: =50
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutGap: =2
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =8
                RadiusBottomRight: =8
                RadiusTopLeft: =8
                RadiusTopRight: =8
                ZIndex: =1

                "iconCKBack As 'Fluent Icon (1.0.22)'":
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =0
                    Height: =35
                    IconName: ="Back"
                    IconSize: =0
                    LayoutMinHeight: =200
                    LayoutMinWidth: =200
                    OnChange: =Back()
                    TextAlignment: ='PowerCAT.Icon.TextAlignment'.Center
                    Theme: =AppThemeJson
                    Tooltip: ="Go back"
                    Width: =35
                    X: =0
                    Y: =0
                    ZIndex: =8

                "txtInputProcessName As 'Text input'":
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =0
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    ValidationState: ="None"
                    Value: =If(IsBlankOrError(_selectedProcess.Name),"Untitled",_selectedProcess.Name)
                    Width: =320
                    X: =iconCKBack.Width + 2
                    Y: =0
                    ZIndex: =9

            HeaderContainerRight As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Center
                Fill: =RGBA(255, 255, 255, 1)
                Height: =50
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutJustifyContent: =LayoutJustifyContent.End
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =8
                RadiusBottomRight: =8
                RadiusTopLeft: =8
                RadiusTopRight: =8
                ZIndex: =3

                HeaderSubContainer As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =50
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutJustifyContent: =LayoutJustifyContent.End
                    LayoutMinHeight: =100
                    LayoutMinWidth: =40
                    LayoutMode: =LayoutMode.Auto
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    ZIndex: =8

                    ActionContainer As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        DropShadow: =DropShadow.Light
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        RadiusBottomLeft: =4
                        RadiusBottomRight: =4
                        RadiusTopLeft: =4
                        RadiusTopRight: =4
                        Width: =Parent.Width
                        ZIndex: =8

                        "ckMainCommandBar_2 As 'Fluent Command Bar (1.0.22)'.pcfdataset":
                            DisplayMode: =DisplayMode.Edit
                            Height: =50
                            Items: |-
                                =Table({
                                        ItemKey: "refresh",
                                        ItemDisplayName: "Refresh",
                                        ItemIconName: "Refresh",
                                        ItemVisible: ApprovalDesignerEdit_2.TotalStages > 1
                                    },{
                                        ItemKey: "variables",
                                        ItemDisplayName: "Variables",
                                        ItemIconName: "VariableGroup"
                                    },
                                    {
                                        ItemKey: "versions",
                                        ItemDisplayName: "Versions",
                                        ItemIconName: "DependencyAdd"
                                    },
                                    {
                                        ItemKey: "save",
                                        ItemDisplayName: "Save",
                                        ItemIconName: "Save"
                                    },
                                    {
                                        ItemKey: "publish",
                                        ItemDisplayName: "Publish",
                                        ItemIconName: "PublishContent",
                                        ItemEnabled: If(ApprovalDesignerEdit_2.TotalStages = 0, false, true)
                                    }
                                )
                            OnSelect: |-
                                =If(
                                    Self.Selected.ItemKey <> "save",
                                    UpdateContext(
                                        {
                                            isPanelOpen: false,
                                            isPanelVisible: true
                                        }
                                    )
                                );
                                If(
                                    IsBlankOrError(_selectedProcess),
                                    Set(
                                        _selectedProcess,
                                        Patch(
                                            'Business Approval Processes',
                                            Defaults('Business Approval Processes'),
                                            {Name: txtInputProcessName.Value}
                                        )
                                    ),
                                    Patch(
                                        'Business Approval Processes',
                                        _selectedProcess,
                                        {Name: txtInputProcessName.Value}
                                    )
                                );
                                Switch(
                                    Self.Selected.ItemKey,
                                    "refresh",
                                    Reset(ApprovalDesignerEdit_2);
                                    Refresh('Business Approval Stages');
                                    Refresh('Business Approval Nodes');
                                    Refresh('Business Approval Conditions');
                                    UpdateContext({isPanelVisible: false});
                                    If(ToggleModernDesigner.Checked,Set(varRefreshDesigner,"Refresh"&Rand()));
                                    ,
                                    "variables",
                                    UpdateContext(
                                        {
                                            isPanelOpen: true,
                                            panelHeaderText: "Set Variables",
                                            showVariableContainer: true
                                        }
                                    );
                                    SetFocus(txtAppDataName_2),
                                    "save",
                                    If(
                                        !IsBlankOrError(_selectedProcess),
                                        Notify(
                                            "Process saved successfully",
                                            NotificationType.Success
                                        )
                                    ),
                                    "versions",
                                    Refresh('Business Approval Versions');
                                    UpdateContext(
                                        {
                                            isPanelOpen: true,
                                            showProcessVersionContainer: true,
                                            panelHeaderText: "Versions"
                                        }
                                    );
                                    ClearCollect(
                                        _colPublishedVersions,
                                        Filter(
                                            Filter(
                                                'Business Approval Versions',
                                                'Business Approval Versions (Views)'.'All Versions'
                                            ),
                                            Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                                        )
                                    );
                                    ,
                                    "publish",
                                    //check last published version
                                    With(
                                        {
                                            publishedVersions: SortByColumns(
                                                Filter(
                                                    'Business Approval Versions',
                                                    Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                                                ),
                                                "cat_version",
                                                SortOrder.Descending
                                            )
                                        },
                                        UpdateContext(
                                            {
                                                isPublishReady: false,
                                                lastPublished: First(publishedVersions)
                                            }
                                        )
                                    );
                                    
                                //Open Panel & Specific Container
                                UpdateContext(
                                        {
                                            isPanelOpen: true,
                                            panelHeaderText: "Publish",
                                            showPublishProcessContainer: true,
                                            isPublishReady: false
                                        }
                                    );
                                    
                                //validate process stages
                                Clear(_emptyNodes);
                                    //If(
                                //IsEmpty(_validationChecks),
                                ClearCollect(
                                        _validationChecks,
                                        {
                                            Id: 1,
                                            Check: "First approval stage must not have any condition",
                                            Status: Blank(),
                                            Details: ""
                                        },
                                        {
                                            Id: 2,
                                            Check: "First node in first stage must not have any condition",
                                            Status: Blank(),
                                            Details: ""
                                        },
                                        {
                                            Id: 3,
                                            Check: "Approval stage must have at least one Node",
                                            Status: Blank(),
                                            Details: ""
                                        },
                                        {
                                            Id: 4,
                                            Check: "No stage is inaccessible",
                                            Status: true,
                                            Details: ""
                                        }
                                    );
                                    //);
                                UpdateContext(
                                        {
                                            firstStage: First(
                                                SortByColumns(
                                                    Filter(
                                                        'Business Approval Stages',
                                                        Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                                                    ),
                                                    "cat_order",
                                                    SortOrder.Ascending
                                                )
                                            )
                                        }
                                    );
                                    
                                //check condition 1
                                UpdateIf(
                                        _validationChecks,
                                        Id = 1,
                                        {
                                            Status: CountRows(
                                                Filter(
                                                    'Business Approval Conditions',
                                                    Stage.'Business Approval Stage' = firstStage.'Business Approval Stage'
                                                )
                                            ) = 0
                                        }
                                    );
                                    
                                //check condition 2
                                With(
                                        {
                                            firstNode: First(
                                                SortByColumns(
                                                    Filter(
                                                        'Business Approval Nodes',
                                                        Stage.'Business Approval Stage' = firstStage.'Business Approval Stage'
                                                    ),
                                                    "cat_rowindex",
                                                    SortOrder.Ascending
                                                )
                                            )
                                        },
                                        UpdateIf(
                                            _validationChecks,
                                            Id = 2,
                                            With(
                                                {firstNodeId: firstNode.'Business Approval Node'},
                                                {
                                                    Status: CountRows(
                                                        Filter(
                                                            'Business Approval Conditions',
                                                            Node.'Business Approval Node' = firstNodeId
                                                        )
                                                    ) = 0
                                                }
                                            )
                                        )
                                    );
                                    
                                //check condition 3
                                ForAll(
                                        _selectedProcess.'Business Approval Stages' As valStages,
                                        Collect(
                                            _emptyNodes,
                                            CountRows(
                                                Filter(
                                                    'Business Approval Nodes',
                                                    Stage.'Business Approval Stage' = valStages.'Business Approval Stage'
                                                )
                                            ) > 0
                                        )
                                    );
                                    UpdateIf(
                                        _validationChecks,
                                        Id = 3,
                                        {
                                            Status: CountIf(
                                                _emptyNodes,
                                                Value = false
                                            ) = 0
                                        }
                                    );
                                    UpdateContext({isPublishReady: true});
                                    
                                )
                            Theme: =AppThemeJson
                            Visible: =true
                            Width: =777
                            X: =Parent.Y + Parent.Width - If(ApprovalDesignerEdit_2.TotalStages > 1,445,360)
                            Y: =0
                            ZIndex: =1

        DesignerContainer As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderStyle: =BorderStyle.None
            Fill: =If(!ToggleModernDesigner.Checked,RGBA(245, 245, 245, 1),ColorValue(AppTheme.palette.white))
            Height: =Parent.Height
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingTop: =5
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            ZIndex: =3

            lblNoStage_1 As label:
                Align: =Align.Center
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="No Approval Stage defined. Click (+) to configure your first Approval stage."
                Visible: =!ToggleModernDesigner.Checked
                Width: =Parent.Width 
                Wrap: =false
                Y: =30
                ZIndex: =1

            ApprovalDesignerEdit_2 As ApprovalDesigner:
                AddNode: |-
                    =UpdateContext(
                            {
                                isPanelOpen: false,
                                isPanelVisible: true
                            }
                        );
                    Clear(_nodeApprovers);    
                    Set(_selectedNode, Blank());
                    Set(_selectedStage, LookUp('Business Approval Stages', 'Business Approval Stage' = GUID(StageId)));
                    Set(_currentStageIndex, StageIndex);
                    Set(_currentNodeIndex, Row);
                    Set(_currentPathIndex, Path);
                    UpdateContext({isPanelOpen:true,panelHeaderText:"Create Node", showNodeContainer:true});
                    Reset(radNodeType_4);
                AddStage: |+
                    =//Save the process   
                    Concurrent(
                        If(
                            IsBlankOrError(_selectedProcess),
                            Set(
                                _selectedProcess,
                                Patch(
                                    'Business Approval Processes',
                                    Defaults('Business Approval Processes'),
                                    {Name: txtInputProcessName.Value}
                                )
                            )
                        ),
                        UpdateContext(
                            {
                                isPanelOpen: false,
                                isPanelVisible: true,
                                showStageContainer: false
                            }
                        )
                    );
                    Set(
                        _selectedStage,
                        Blank()
                    );
                    Set(
                        _currentStageIndex,
                        ApprovalDesignerEdit_2.TotalStages + 1
                    );
                    Refresh('Business Approval Data');
                    UpdateContext(
                        {
                            isPanelOpen: true,
                            panelHeaderText: "Create Stage",
                            showStageContainer: true,
                            stageName: Blank(),
                            stageDesc: Blank()
                        }
                    );
                    
                AssignedHeight: =Parent.Height - 120
                EditNode: |-
                    =UpdateContext(
                            {
                                isPanelOpen: false,
                                isPanelVisible: true
                            }
                        );
                    
                    
                    Concurrent(
                        Set(_selectedNode, LookUp('Business Approval Nodes', 'Business Approval Node' = GUID(NodeId))),
                        Set(_selectedStage, LookUp('Business Approval Stages', 'Business Approval Stage' = GUID(StageId)))
                    );
                    Set(_currentNodeIndex, _selectedNode.'Row Index');
                    Set(_currentPathIndex, _selectedNode.'Path Index');
                    Set(_currentStageIndex, _selectedStage.Order);
                    
                    
                    //Node editor logic starts *************/
                    If(IsEmpty(_operands),
                        ClearCollect(_operands, 
                            { 
                                operands: [
                                    'Business Approval Condition Operand'.'Equals (=)', 'Business Approval Condition Operand'.'Not Equal (<>)',
                                    'Business Approval Condition Operand'.'Starts With', 'Business Approval Condition Operand'.'Ends With',
                                    'Business Approval Condition Operand'.Contains, 'Business Approval Condition Operand'.'Is Blank',
                                    'Business Approval Condition Operand'.'Is Not Blank'
                                ],
                                type: [ 'Business Approval Data Type'.Text, 'Business Approval Data Type'.'User (Email)' ]
                            },
                            { 
                                operands: [
                                    'Business Approval Condition Operand'.'Equals (=)', 'Business Approval Condition Operand'.'Less Than (<)',
                                    'Business Approval Condition Operand'.'Less Than or Equals (<=)', 'Business Approval Condition Operand'.'Greater Than (>)',
                                    'Business Approval Condition Operand'.'Greater Than or Equals (>=)', 'Business Approval Condition Operand'.'Not Equal (<>)',
                                    'Business Approval Condition Operand'.'Is Blank', 'Business Approval Condition Operand'.'Is Not Blank'
                                ],
                                type: [ 'Business Approval Data Type'.Number, 'Business Approval Data Type'.Date ]
                            },
                            { 
                                operands: [
                                    'Business Approval Condition Operand'.'Equals (=)', 'Business Approval Condition Operand'.'Not Equal (<>)',
                                    'Business Approval Condition Operand'.'Is Blank', 'Business Approval Condition Operand'.'Is Not Blank'
                                ],
                                type: [ 'Business Approval Data Type'.Boolean ]
                            }
                        )
                    );
                    
                    //load approvers for Node edit
                    If(!IsBlank(_selectedNode),
                        ClearCollect(_nodeApprovers, SortByColumns(_selectedNode.'Business Approvers', "cat_name", SortOrder.Ascending))
                    );
                    
                    //check if this is on a parallel path, disable conditional nodes if it is
                    UpdateContext({ isParallelPath:
                        !IsBlank(
                            LookUp('Business Approval Conditions', Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage' && 
                            'Is Parallel' = 'Is Parallel (Business Approval Conditions)'.Yes && 'Path Index' = _currentPathIndex)
                        )
                    });
                    
                    SetFocus(txtNodeName_4);
                    //Node editor logic ends*************/
                    If(_selectedNode.'Node Condition' = 'Business Approval Stage Condition'.None && IsBlank(_selectedNode.'Go To Stage'),
                        UpdateContext({isPanelOpen:true, isPanelVisible:true, panelHeaderText: "Edit Node",showNodeContainer:true}),
                        UpdateContext({isPanelOpen:true, isPanelVisible:true, panelHeaderText: "Edit Node",showNodeRuleEditorContainer:true});
                    );
                EditStage: |
                    =Set(
                        _selectedStage,
                        LookUp(
                            'Business Approval Stages',
                            'Business Approval Stage' = GUID(StageId)
                        )
                    );
                    UpdateContext(
                            {
                                isPanelOpen: false,
                                isPanelVisible: true,
                                showStageContainer: false
                            }
                        );
                    Concurrent(
                        Set(
                            _currentStageIndex,
                            _selectedStage.Order
                        );
                        ,
                        UpdateContext(
                            {
                                stageName: _selectedStage.Name,
                                stageDesc: _selectedStage.Description
                            }
                        )
                    );
                    // Onscreen stage editor visible logic starts
                    //cache operands if not already available
                    If(
                        IsEmpty(_operands),
                        ClearCollect(
                            _operands,
                            {
                                operands: [
                                    'Business Approval Condition Operand'.'Equals (=)',
                                    'Business Approval Condition Operand'.'Not Equal (<>)',
                                    'Business Approval Condition Operand'.'Starts With',
                                    'Business Approval Condition Operand'.'Ends With',
                                    'Business Approval Condition Operand'.Contains,
                                    'Business Approval Condition Operand'.'Is Blank',
                                    'Business Approval Condition Operand'.'Is Not Blank'
                                ],
                                type: [
                                    'Business Approval Data Type'.Text,
                                    'Business Approval Data Type'.'User (Email)'
                                ]
                            },
                            {
                                operands: [
                                    'Business Approval Condition Operand'.'Equals (=)',
                                    'Business Approval Condition Operand'.'Less Than (<)',
                                    'Business Approval Condition Operand'.'Less Than or Equals (<=)',
                                    'Business Approval Condition Operand'.'Greater Than (>)',
                                    'Business Approval Condition Operand'.'Greater Than or Equals (>=)',
                                    'Business Approval Condition Operand'.'Not Equal (<>)',
                                    'Business Approval Condition Operand'.'Is Blank',
                                    'Business Approval Condition Operand'.'Is Not Blank'
                                ],
                                type: [
                                    'Business Approval Data Type'.Number,
                                    'Business Approval Data Type'.Date
                                ]
                            },
                            {
                                operands: [
                                    'Business Approval Condition Operand'.'Equals (=)',
                                    'Business Approval Condition Operand'.'Not Equal (<>)',
                                    'Business Approval Condition Operand'.'Is Blank',
                                    'Business Approval Condition Operand'.'Is Not Blank'
                                ],
                                type: ['Business Approval Data Type'.Boolean]
                            }
                        )
                    );
                    //load conditions if exists
                    Clear(_conditions);
                    ForAll(
                        Filter(
                            Filter(
                                'Business Approval Conditions',
                                'Business Approval Conditions (Views)'.'Active Stage Conditions'
                            ),
                            Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage'
                        ),
                        Collect(
                            _conditions,
                            {
                                ConditionId: ThisRecord.'Business Approval Condition',
                                Path: ThisRecord.'Path Index',
                                Target: ThisRecord.'Condition Data Type',
                                TargetData: ThisRecord.'Condition Data',
                                StaticValue: ThisRecord.'Condition Value',
                                IsDefault: ThisRecord.'Is Default' = 'Is Default (Business Approval Conditions)'.Yes,
                                IsParallel: ThisRecord.'Is Parallel' = 'Is Parallel (Business Approval Conditions)'.Yes
                            }
                        )
                    );
                    //allow change of condition type if there are no existing conditions defined
                    //isCleared - tracks if the user clicked on "Clear" (may not yet proceed to change condition, as they can undo it)
                    UpdateContext(
                        {
                            allowUpdateConditionType: CountRows(_conditions) = 0,
                            isCleared: false
                        }
                    );
                    // Onscreen stage editor visible logic ends
                    UpdateContext(
                        {
                            isPanelOpen: true,
                            isPanelVisible: true,
                            panelHeaderText: "Edit Stage",
                            showStageContainer: true
                        }
                    );
                Fill: =ColorFade(RGBA(245, 245, 245, 1),50%)
                Height: =Parent.Height - 80 //ApprovalDesignerEdit_2.TotalStages * 240
                LayoutMinHeight: =640
                LayoutMinWidth: =640
                MoveStage: |-
                    =With({ currentStage: LookUp('Business Approval Stages', 'Business Approval Stage' = GUID(StageId))},
                        UpdateContext({ swapOrder: If(IsMoveUp, currentStage.Order - 1, currentStage.Order + 1)});
                        UpdateIf('Business Approval Stages', 
                            Order = swapOrder && Process.'Business Approval Process' = currentStage.Process.'Business Approval Process', 
                            { Order: currentStage.Order }
                        );
                        Patch('Business Approval Stages', currentStage, { Order: If(IsMoveUp, currentStage.Order - 1, currentStage.Order + 1) }) 
                    )
                Visible: =Self.TotalStages > 0 && !ToggleModernDesigner.Checked
                Width: =Parent.Width - 10
                Y: =70
                ZIndex: =2

            "icoAddStage As 'Fluent Icon (1.0.22)'":
                DisplayMode: =DisplayMode.Edit
                FontSize: =30
                Height: =45
                IconName: ="CircleAdditionSolid"
                IconSize: =35
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                OnChange: |
                    =//Save the process   
                    Concurrent(
                        If(
                            IsBlankOrError(_selectedProcess),
                            Set(
                                _selectedProcess,
                                Patch(
                                    'Business Approval Processes',
                                    Defaults('Business Approval Processes'),
                                    {Name: txtInputProcessName.Value}
                                )
                            )
                        ),
                        UpdateContext(
                            {
                                isPanelOpen: false,
                                isPanelVisible: true,
                                showStageContainer: false
                            }
                        )
                    );
                    // Onscreen stage editor visible logic starts
                    //cache operands if not already available
                    If(
                        IsEmpty(_operands),
                        ClearCollect(
                            _operands,
                            {
                                operands: [
                                    'Business Approval Condition Operand'.'Equals (=)',
                                    'Business Approval Condition Operand'.'Not Equal (<>)',
                                    'Business Approval Condition Operand'.'Starts With',
                                    'Business Approval Condition Operand'.'Ends With',
                                    'Business Approval Condition Operand'.Contains,
                                    'Business Approval Condition Operand'.'Is Blank',
                                    'Business Approval Condition Operand'.'Is Not Blank'
                                ],
                                type: [
                                    'Business Approval Data Type'.Text,
                                    'Business Approval Data Type'.'User (Email)'
                                ]
                            },
                            {
                                operands: [
                                    'Business Approval Condition Operand'.'Equals (=)',
                                    'Business Approval Condition Operand'.'Less Than (<)',
                                    'Business Approval Condition Operand'.'Less Than or Equals (<=)',
                                    'Business Approval Condition Operand'.'Greater Than (>)',
                                    'Business Approval Condition Operand'.'Greater Than or Equals (>=)',
                                    'Business Approval Condition Operand'.'Not Equal (<>)',
                                    'Business Approval Condition Operand'.'Is Blank',
                                    'Business Approval Condition Operand'.'Is Not Blank'
                                ],
                                type: [
                                    'Business Approval Data Type'.Number,
                                    'Business Approval Data Type'.Date
                                ]
                            },
                            {
                                operands: [
                                    'Business Approval Condition Operand'.'Equals (=)',
                                    'Business Approval Condition Operand'.'Not Equal (<>)',
                                    'Business Approval Condition Operand'.'Is Blank',
                                    'Business Approval Condition Operand'.'Is Not Blank'
                                ],
                                type: ['Business Approval Data Type'.Boolean]
                            }
                        )
                    );
                    //load conditions if exists
                    Clear(_conditions);
                    ForAll(
                        Filter(
                            Filter(
                                'Business Approval Conditions',
                                'Business Approval Conditions (Views)'.'Active Stage Conditions'
                            ),
                            Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage'
                        ),
                        Collect(
                            _conditions,
                            {
                                ConditionId: ThisRecord.'Business Approval Condition',
                                Path: ThisRecord.'Path Index',
                                Target: ThisRecord.'Condition Data Type',
                                TargetData: ThisRecord.'Condition Data',
                                StaticValue: ThisRecord.'Condition Value',
                                IsDefault: ThisRecord.'Is Default' = 'Is Default (Business Approval Conditions)'.Yes,
                                IsParallel: ThisRecord.'Is Parallel' = 'Is Parallel (Business Approval Conditions)'.Yes
                            }
                        )
                    );
                    //allow change of condition type if there are no existing conditions defined
                    //isCleared - tracks if the user clicked on "Clear" (may not yet proceed to change condition, as they can undo it)
                    UpdateContext(
                        {
                            allowUpdateConditionType: CountRows(_conditions) = 0,
                            isCleared: false
                        }
                    );
                    // Onscreen stage editor visible logic ends
                    
                    Set(
                        _selectedStage,
                        Blank()
                    );
                    Set(
                        _currentStageIndex,
                        ApprovalDesignerEdit_2.TotalStages + 1
                    );
                    Refresh('Business Approval Data');
                    UpdateContext(
                        {
                            isPanelOpen: true,
                            panelHeaderText: "Create Stage",
                            showStageContainer: true,
                            stageName: Blank(),
                            stageDesc: Blank()
                        }
                    );
                    // Add Stage 
                TextAlignment: ='PowerCAT.Icon.TextAlignment'.Center
                Theme: =AppThemeJson
                Tooltip: ="Add Stage"
                Visible: =!ToggleModernDesigner.Checked
                Width: =30
                X: =Parent.Width / 2 - Self.Width / 2
                Y: =
                ZIndex: =3

            "ProcessDesignerCanvas1 As 'Process Designer'":
                AlignInContainer: =AlignInContainer.Stretch
                DisplayMode: =DisplayMode.Edit
                FillPortions: =1
                Height: =Parent.Height
                LayoutMinHeight: =480
                LayoutMinWidth: =640
                OnAddNode: |-
                    =UpdateContext(
                            {
                                isPanelOpen: false,
                                isPanelVisible: true
                            }
                        );
                    Clear(_nodeApprovers);    
                    Set(_selectedNode, Blank());
                    Set(_selectedStage, LookUp('Business Approval Stages', 'Business Approval Stage' = GUID(Self.StageID)));
                    Set(_currentStageIndex,_selectedStage.Order);
                    Set(_currentNodeIndex, Self.RowIndex);
                    Set(_currentPathIndex, Self.PathIndex);
                    UpdateContext({isPanelOpen:true,panelHeaderText:"Create Node", showNodeContainer:true});
                    Reset(radNodeType_4);
                OnAddStage: |+
                    =//Save the process   
                    Concurrent(
                        If(
                            IsBlankOrError(_selectedProcess),
                            Set(
                                _selectedProcess,
                                Patch(
                                    'Business Approval Processes',
                                    Defaults('Business Approval Processes'),
                                    {Name: txtInputProcessName.Value}
                                )
                            )
                        ),
                        UpdateContext(
                            {
                                isPanelOpen: false,
                                isPanelVisible: true,
                                showStageContainer: false
                            }
                        )
                    );
                    Set(
                        _selectedStage,
                        Blank()
                    );
                    Set(
                        _currentStageIndex,
                        Self.TotalStages + 1
                    );
                    UpdateContext(
                        {
                            isPanelOpen: true,
                            panelHeaderText: "Create Stage",
                            showStageContainer: true,
                            stageName: Blank(),
                            stageDesc: Blank()
                        }
                    );
                    
                OnEditNode: |-
                    =UpdateContext(
                            {
                                isPanelOpen: false,
                                isPanelVisible: true
                            }
                        );
                    
                    Concurrent(
                        Set(_selectedNode, LookUp('Business Approval Nodes', 'Business Approval Node' = GUID(Self.NodeID))),
                        Set(_selectedStage, LookUp('Business Approval Stages', 'Business Approval Stage' = GUID(Self.StageID)))
                    );
                    Concurrent(
                    Set(_currentNodeIndex, _selectedNode.'Row Index'),
                    Set(_currentPathIndex, _selectedNode.'Path Index'),
                    Set(_currentStageIndex, _selectedStage.Order));
                    
                    
                    //load approvers for Node edit
                    If(!IsBlank(_selectedNode),
                        ClearCollect(_nodeApprovers, SortByColumns(_selectedNode.'Business Approvers', "cat_name", SortOrder.Ascending))
                    );
                    
                    //check if this is on a parallel path, disable conditional nodes if it is
                    UpdateContext({ isParallelPath:
                        !IsBlank(
                            LookUp('Business Approval Conditions', Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage' && 
                            'Is Parallel' = 'Is Parallel (Business Approval Conditions)'.Yes && 'Path Index' = _currentPathIndex)
                        )
                    });
                    
                    
                    If(_selectedNode.'Node Condition' = 'Business Approval Stage Condition'.None && IsBlank(_selectedNode.'Go To Stage'),
                        UpdateContext({isPanelOpen:true, isPanelVisible:true, panelHeaderText: "Edit Node",showNodeContainer:true}),
                        UpdateContext({isPanelOpen:true, isPanelVisible:true, panelHeaderText: "Edit Node",showNodeRuleEditorContainer:true});
                    );
                OnEditStage: |
                    =Set(
                        _selectedStage,
                        LookUp(
                            'Business Approval Stages',
                            'Business Approval Stage' = GUID(Self.StageID)
                        )
                    );
                    UpdateContext(
                            {
                                isPanelOpen: false,
                                isPanelVisible: true,
                                showStageContainer: false
                            }
                        );
                    Concurrent(
                        Set(
                            _currentStageIndex,
                            _selectedStage.Order
                        );
                        ,
                        UpdateContext(
                            {
                                stageName: _selectedStage.Name,
                                stageDesc: _selectedStage.Description
                            }
                        )
                    );
                    UpdateContext(
                        {
                            isPanelOpen: true,
                            isPanelVisible: true,
                            panelHeaderText: "Edit Stage",
                            showStageContainer: true
                        }
                    );
                ProcessID: =_selectedProcess.'Business Approval Process'
                RefreshDesigner: =varRefreshDesigner
                Visible: =ToggleModernDesigner.Checked && !IsBlank(_selectedProcess.'Business Approval Process')
                Width: =Parent.Width
                X: =40
                Y: =40
                ZIndex: =4

    "FluentPanel As 'Fluent Panel'":
        DisplayMode: =DisplayMode.Edit
        HasCloseButton: =true
        HeaderText: =panelHeaderText
        Height: =Parent.Height
        IsOpen: =isPanelOpen
        OnChange: =
        OnDismiss: |-
            =If(//Refresh Datasource incase of Add Stage, Nodes and Reset fields
                showNodeContainer || showNodeRuleEditorContainer,
                Refresh('Business Approval Stages');
                Refresh('Business Approval Nodes');
                Refresh('Business Approval Conditions'),
                If(
                    showStageContainer,
                    Refresh('Business Approval Stages');
                    Refresh('Business Approval Nodes');
                    Refresh('Business Approval Conditions');
                    //Reset all fields
                    Reset(txtStageName_2);
                    Reset(txtStageDesc_2);
                    Reset(ddlStageCondition_2);
                    Reset(ddlStageConditionSource_2);
                    Reset(ddlRequestDataCondition_2);
                    Reset(ddlStageOperand_2);
                    Reset(radSwitchPaths_2);
                    Reset(galConditions_1);
                )
            );
            UpdateContext(
                {
                    isPanelOpen: false,
                    showStageContainer: false,
                    showNodeContainer: false,
                    showNodeRuleEditorContainer: false,
                    showProcessVersionContainer: false,
                    showPublishProcessContainer: false,
                    showVariableContainer: false,
                    isPanelVisible: false
                }
            );
        OnDismissed: =false
        OnLightDismissClick: =false
        OnOpen: =
        OnOpened: =
        OnOuterClick: =false
        PanelType: ='PowerCAT.Panel.PanelType'.ExtraLarge
        ShowBorder: =false
        TrapPanel: =true
        Visible: =isPanelVisible
        Width: =Parent.Width
        X: =0
        Y: =0
        ZIndex: =2

    PanelContainer As groupContainer.manualLayoutContainer:
        Height: =FluentPanel.ContentHeight + 40
        PaddingBottom: =10
        PaddingLeft: =20
        PaddingRight: =10
        PaddingTop: =10
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Visible: |-
            =If(isPanelOpen,
                true,
                false
            )
        Width: =FluentPanel.ContentWidth - Self.PaddingLeft * 2                                                     
        X: =FluentPanel.Width - FluentPanel.ContentWidth + Self.PaddingLeft 
        Y: =55
        ZIndex: =3

        StageContainer As groupContainer:
            Height: =Parent.Height 
            Visible: =showStageContainer
            Width: =Parent.Width
            Y: =
            ZIndex: =1

            PanelFooter As groupContainer.horizontalAutoLayoutContainer:
                Height: =35
                LayoutGap: =8
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =10
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Width: =Parent.Width
                X: =Parent.X
                Y: =Parent.Height - Self.Height
                ZIndex: =1

                btnSaveStage As Button:
                    BasePaletteColor: =
                    DisplayMode: =If(lblRequestDataIsEmpty_2.Visible,DisplayMode.Disabled,DisplayMode.Edit)
                    FontSize: =0
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |-
                        =//save stage configuration
                        UpdateContext({busyMessage: "Saving Stage - " & txtStageName_2.Value});
                        Set(
                            _isBusy,
                            true
                        );
                        Set(
                            _selectedStage,
                            Patch(
                                'Business Approval Stages',
                                If(
                                    IsBlank(_selectedStage),
                                    Defaults('Business Approval Stages'),
                                    _selectedStage
                                ),
                                {
                                    Name: txtStageName_2.Value,
                                    Description: txtStageDesc_2.Value,
                                    'Stage Condition': ddlStageCondition_2.Selected.Value,
                                    'Source Data Type': If(
                                        ddlStageConditionSource_2.Visible,
                                        ddlStageConditionSource_2.Selected.Value,
                                        Blank()
                                    ),
                                    'Source Data': If(
                                        ddlRequestDataCondition_2.Visible,
                                        ddlRequestDataCondition_2.Selected,
                                        Blank()
                                    ),
                                    Operand: If(
                                        ddlStageOperand_2.Visible,
                                        ddlStageOperand_2.Selected.Value,
                                        Blank()
                                    ),
                                    Order: _currentStageIndex,
                                    Paths: Switch(
                                        ddlStageCondition_2.Selected.Value,
                                        'Business Approval Stage Condition'.None,
                                        1,
                                        'Business Approval Stage Condition'.'If/Else',
                                        2,
                                        radSwitchPaths_2.Selected.Value
                                    ),
                                    Process: _selectedProcess
                                }
                            )
                        );
                                //remove any conditions that has been removed and clear the stack
                        RemoveIf(
                            'Business Approval Conditions',
                            'Business Approval Condition' in _removedConditions.ConditionId
                        );
                                //remove any nodes that are in the removed condition paths
                        RemoveIf(
                            'Business Approval Nodes',
                            Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage' && 'Path Index' in _removedConditions.Path
                        );
                                //save conditions
                        Clear(_addedConditions);
                        If(
                            CountRows(_conditions) > 0,
                            UpdateContext({busyMessage: "Updating Conditions..."})
                        );
                        ForAll(
                            _conditions As conds,
                            With(
                                {conditionId: GUID(conds.ConditionId)},
                                With(
                                    {
                                        condition: LookUp(
                                            'Business Approval Conditions',
                                            'Business Approval Condition' = conditionId
                                        )
                                    },
                                    With(
                                        {
                                            addedCondition: Patch(
                                                'Business Approval Conditions',
                                                Coalesce(
                                                    condition,
                                                    Defaults('Business Approval Conditions')
                                                ),
                                                {
                                                    'Path Index': conds.Path,
                                                    'Condition Data Type': If(
                                                        conds.IsDefault,
                                                        'Business Approval Condition Target Data'.'Static value',
                                                        conds.Target
                                                    ),
                                                    Process: _selectedProcess,
                                                    'Condition Data': If(
                                                        conds.Target = 'Business Approval Condition Target Data'.'Request Data' && !conds.IsDefault,
                                                        conds.TargetData,
                                                        Blank()
                                                    ),
                                                    Stage: _selectedStage,
                                                    'Condition Value': If(
                                                        conds.Target = 'Business Approval Condition Target Data'.'Static value',
                                                        conds.StaticValue,
                                                        Blank()
                                                    ),
                                                    'Is Parallel': !IsBlank(
                                                        LookUp(
                                                            _conditions,
                                                            Path <> conds.Path && Target = conds.Target && IsDefault = false && If(
                                                                conds.Target = 'Business Approval Condition Target Data'.'Static value',
                                                                StaticValue = conds.StaticValue,
                                                                TargetData.'Business Approval Data' = conds.TargetData.'Business Approval Data'
                                                            )
                                                        )
                                                    ) && !conds.IsDefault,
                                                    'Is Default': If(
                                                        conds.IsDefault,
                                                        'Is Default (Business Approval Conditions)'.Yes,
                                                        'Is Default (Business Approval Conditions)'.No
                                                    )
                                                }
                                            )
                                        },
                                        If(
                                            IsBlank(condition),
                                                    //track newly added condition
                                            Collect(
                                                _addedConditions,
                                                {
                                                    Id: addedCondition.'Business Approval Condition',
                                                    Path: addedCondition.'Path Index'
                                                }
                                            )
                                        );
                                    )
                                )
                            )
                        );
                                //update in memory Condition for any newly added Condition Guids
                        ForAll(
                            _addedConditions As added,
                            UpdateIf(
                                _conditions,
                                Path = added.Path,
                                {ConditionId: added.Id}
                            )
                        );
                        Set(
                            _isBusy,
                            false
                        );
                        UpdateContext(
                            {
                                isPanelOpen: false,
                                showStageContainer: false,
                                isPanelVisible: false
                            }
                        );
                        Refresh('Business Approval Stages');
                        Refresh('Business Approval Nodes');
                        Refresh('Business Approval Conditions');
                        If(ToggleModernDesigner.Checked,Set(varRefreshDesigner,"Refresh"&Rand()));
                        //Reset all fields
                        Reset(txtStageName_2);
                        Reset(txtStageDesc_2);
                        Reset(ddlStageCondition_2);
                        Reset(ddlStageConditionSource_2);
                        Reset(ddlRequestDataCondition_2);
                        Reset(ddlStageOperand_2);
                        Reset(radSwitchPaths_2);
                        Reset(galConditions_1);
                    Text: ="Save"
                    Width: =96
                    X: =0
                    Y: =669
                    ZIndex: =1

                btnCancelStage As Button:
                    Appearance: ='ButtonCanvas.Appearance'.Secondary
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =0
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |
                        =UpdateContext(
                            {
                                isPanelOpen: false,
                                showStageContainer: false,
                                isPanelVisible:false
                            }
                        );
                        //Reset all fields
                        Reset(txtStageName_2);
                        Reset(txtStageDesc_2);
                        Reset(ddlStageCondition_2);
                        Reset(ddlStageConditionSource_2);
                        Reset(ddlRequestDataCondition_2);
                        Reset(ddlStageOperand_2);
                        Reset(radSwitchPaths_2);
                        Reset(galConditions_1);
                    Text: ="Cancel"
                    Width: =96
                    X: =113
                    Y: =669
                    ZIndex: =2

                textInfo As Text:
                    DisplayMode: =DisplayMode.Edit
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Saving stages with condition may take about a minute. Once saved, click the refresh button at the top to view the updated conditions."
                    Visible: =ApprovalDesignerEdit_2.TotalStages > 1
                    Width: =Parent.Width - (btnSaveStage.Width + btnCancelStage.Width+ Parent.PaddingLeft + Parent.PaddingRight)
                    X: =0
                    Y: =666
                    ZIndex: =3

            "CommandBar2_12 As 'Fluent Command Bar (1.0.22)'.pcfdataset":
                DisplayMode: =DisplayMode.Edit
                Height: =40
                Items: |-
                    =Table(
                        {
                            ItemKey: "back",
                            ItemDisplayName: "Back",
                            ItemIconName: "NavigateBack"
                        },{
                            ItemKey: "save",
                            ItemDisplayName: "Save",
                            ItemIconName: "Save"
                        },{
                            ItemKey: "saveback",
                            ItemDisplayName: "Save & Back",
                            ItemIconName: "SaveAndClose"
                        },{
                            ItemKey: "delete",
                            ItemDisplayName: "Delete",
                            ItemIconName: "Delete"
                        }
                    )
                OnSelect: |-
                    =If(Self.Selected.ItemKey = "back",Back(),
                        If(Self.Selected.ItemKey = "delete", 
                            Set(_showConfirm, true),
                    
                            //save stage configuration
                            UpdateContext({ busyMessage: "Saving Stage - " & txtStageName_2.Value });
                            Set(_isBusy, true);
                    
                            Set(_selectedStage, 
                                Patch('Business Approval Stages', 
                                    If(IsBlank(_selectedStage), Defaults('Business Approval Stages'), _selectedStage),
                                    {
                                        Name: txtStageName_2.Value, Description: txtStageDesc_2.Value, 'Stage Condition': ddlStageCondition_2.Selected.Value, 
                                        'Source Data Type': If(ddlStageConditionSource_2.Visible, ddlStageConditionSource_2.Selected.Value, Blank()), 
                                        'Source Data': If(ddlRequestDataCondition_2.Visible, ddlRequestDataCondition_2.Selected, Blank()),
                                        Operand: If(ddlStageOperand_2.Visible, ddlStageOperand_2.Selected.Value, Blank()), 
                                        Order: _currentStageIndex,
                                        Paths:
                                            Switch(ddlStageCondition_2.Selected.Value, 'Business Approval Stage Condition'.None, 1,
                                                'Business Approval Stage Condition'.'If/Else', 2, radSwitchPaths_2.Selected.Value
                                            ),
                                        Process: _selectedProcess
                                    }
                                )
                            );
                    
                            //remove any conditions that has been removed and clear the stack
                            RemoveIf('Business Approval Conditions', 'Business Approval Condition' in _removedConditions.ConditionId);
                    
                            //remove any nodes that are in the removed condition paths
                            RemoveIf('Business Approval Nodes', 
                                Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage' && 'Path Index' in _removedConditions.Path
                            );
                    
                            //save conditions
                            Clear(_addedConditions);
                            If(CountRows(_conditions) > 0, UpdateContext({ busyMessage: "Updating Conditions..." }));
                            ForAll(_conditions As conds,        
                                With({ conditionId: GUID(conds.ConditionId)},
                                    With({ condition:  LookUp('Business Approval Conditions', 'Business Approval Condition' = conditionId) },
                                        With({ addedCondition: 
                                            Patch('Business Approval Conditions', 
                                                Coalesce(condition, Defaults('Business Approval Conditions')),
                                                {
                                                    'Path Index': conds.Path,                         
                                                    'Condition Data Type': If(conds.IsDefault, 'Business Approval Condition Target Data'.'Static value', conds.Target), 
                                                    Process: _selectedProcess,
                                                    'Condition Data': 
                                                        If(conds.Target = 'Business Approval Condition Target Data'.'Request Data' && !conds.IsDefault, 
                                                            conds.TargetData, Blank()),
                                                    Stage: _selectedStage, 
                                                    'Condition Value': 
                                                        If(conds.Target = 'Business Approval Condition Target Data'.'Static value', conds.StaticValue, Blank()),
                                                    'Is Parallel': 
                                                        !IsBlank(LookUp(_conditions, Path <> conds.Path && Target = conds.Target && IsDefault = false &&
                                                            If(conds.Target = 'Business Approval Condition Target Data'.'Static value',
                                                                StaticValue = conds.StaticValue, 
                                                                TargetData.'Business Approval Data' = conds.TargetData.'Business Approval Data'
                                                            )
                                                        )) && !conds.IsDefault,
                                                    'Is Default': 
                                                        If(conds.IsDefault, 'Is Default (Business Approval Conditions)'.Yes, 'Is Default (Business Approval Conditions)'.No)
                                                }
                                            )},
                                            If(IsBlank(condition), 
                                                //track newly added condition
                                                Collect(_addedConditions, { Id: addedCondition.'Business Approval Condition', Path: addedCondition.'Path Index'})
                                            );
                                        )
                                    )
                                )
                            );
                    
                            //update in memory Condition for any newly added Condition Guids
                            ForAll(_addedConditions As added, UpdateIf(_conditions, Path = added.Path, { ConditionId: added.Id }));
                            Set(_isBusy, false);
                    
                            If(Self.Selected.ItemKey = "saveback", Back())
                        )
                    );
                Theme: =AppThemeJson
                Visible: =false
                Width: =Parent.Width
                X: =0
                Y: =0
                ZIndex: =2

            bcProcessStage_6 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =30
                PaddingLeft: =0
                Size: =10
                Text: =_selectedProcess.Name & " > " & Coalesce(_selectedStage.Name, "(New Stage)")
                Visible: =false
                Width: =Parent.Width - Self.X - 20
                Wrap: =false
                X: =20
                Y: =CommandBar2_12.Y + CommandBar2_12.Height
                ZIndex: =3

            lblStageName_4 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Name"
                Width: =120
                X: =20
                Y: =20
                ZIndex: =4

            lblStageDesc_6 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Description"
                Width: =120
                X: =lblStageName_4.X
                Y: =lblStageName_4.Y + lblStageName_4.Height + 10
                ZIndex: =5

            lblStageConditionHeader_2 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Conditions"
                Underline: =true
                Width: =txtStageName_2.X - Self.X
                Wrap: =false
                X: =lblStageName_4.X
                Y: =txtStageDesc_2.Y + txtStageDesc_2.Height 
                ZIndex: =6

            lblStageCondition_2 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Condition"
                Width: =120
                X: =lblStageName_4.X
                Y: =lblStageConditionHeader_2.Y + txtLabelInfo.Height+ 5
                ZIndex: =7

            imgWorkflowDiagram_4 As image:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderThickness: =4
                Height: =If(Self.Visible, 70, 0)
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: |
                    ="data:image/svg+xml;utf8, " & 
                    Switch(radSwitchPaths_2.Selected.Value,
                        3, EncodeUrl("<svg width='657' height='382'
                        xmlns='http://www.w3.org/2000/svg'
                        xmlns:xlink='http://www.w3.org/1999/xlink' overflow='hidden'>
                        <defs>
                            <clipPath id='clip0'>
                                <rect x='1718' y='254' width='657' height='382'/>
                            </clipPath>
                        </defs>
                        <g clip-path='url(#clip0)' transform='translate(-1718 -254)'>
                            <path d='M1911.5 324 2048.5 257.5 2185.5 324 2048.5 390.5Z' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/>
                            <rect x='1720.5' y='516.5' width='191' height='117' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                            <rect x='1950.5' y='514.5' width='192' height='118' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                            <path d='M2048.52 390 2048.52 452.736 1816 452.736 1816 515.471' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/>
                            <path d='M2048.01 390 2048.01 451.787 2046 451.787 2046 513.575' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/>
                            <rect x='2181.5' y='514.5' width='191' height='118' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                            <path d='M0 0 61.7874 0 61.7874 228.498 123.575 228.498' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 2048 390)'/>
                        </g>
                    </svg>"),
                        4, EncodeUrl("<svg width='907' height='384'
                    xmlns='http://www.w3.org/2000/svg'
                    xmlns:xlink='http://www.w3.org/1999/xlink' overflow='hidden'>
                    <defs>
                        <clipPath id='clip0'>
                            <rect x='551' y='760' width='907' height='384'/>
                        </clipPath>
                    </defs>
                    <g clip-path='url(#clip0)' transform='translate(-551 -760)'>
                        <path d='M870.5 830 1007.5 763.5 1144.5 830 1007.5 896.5Z' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/>
                        <rect x='553.5' y='1024.5' width='192' height='117' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                        <rect x='790.5' y='1024.5' width='192' height='117' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                        <path d='M1006.71 896 1006.71 959.73 649 959.73 649 1023.46' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/>
                        <path d='M1006.89 896 1006.89 959.729 886 959.729 886 1023.46' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/>
                        <rect x='1027.5' y='1024.5' width='192' height='117' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                        <rect x='1264.5' y='1024.5' width='191' height='117' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                        <path d='M0 0 63.7293 0 63.7293 352.731 127.459 352.731' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 1007 896)'/>
                        <path d='M0 0 63.7293 0 63.7293 115.918 127.459 115.918' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 1007 896)'/>
                    </g>
                    </svg>"),
                        5, EncodeUrl("<svg width='1144' height='374'
                    xmlns='http://www.w3.org/2000/svg'
                    xmlns:xlink='http://www.w3.org/1999/xlink' overflow='hidden'>
                    <defs>
                    <clipPath id='clip0'>
                        <rect x='1589' y='770' width='1144' height='374'/>
                    </clipPath>
                    </defs>
                    <g clip-path='url(#clip0)' transform='translate(-1589 -770)'>
                    <path d='M2024.5 840 2161 773.5 2297.5 840 2161 906.5Z' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/>
                    <rect x='1591.5' y='1024.5' width='191' height='117' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                    <rect x='1828.5' y='1024.5' width='191' height='117' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                    <path d='M2160.14 906 2160.14 964.793 1686 964.793 1686 1023.59' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/>
                    <path d='M2160.07 906 2160.07 964.793 1923 964.793 1923 1023.59' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/>
                    <rect x='2065.5' y='1024.5' width='191' height='117' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                    <rect x='2302.5' y='1024.5' width='191' height='117' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                    <path d='M0 0 58.7933 0 58.7933 237.069 117.587 237.069' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 2161 906)'/>
                    <path d='M0 0 58.7933 0 58.7933 0.000360892 117.586 0.000360892' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 2161 906)'/>
                    <rect x='2539.5' y='1024.5' width='191' height='117' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                    <path d='M0 0 58.7934 0 58.7934 474.138 117.587 474.138' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 2161 906)'/>
                    </g>
                    </svg>"),
                        EncodeUrl("<svg width='522' height='386'
                    xmlns='http://www.w3.org/2000/svg'
                    xmlns:xlink='http://www.w3.org/1999/xlink' overflow='hidden'>
                    <defs>
                    <clipPath id='clip0'>
                    <rect x='752' y='250' width='522' height='386'/>
                    </clipPath>
                    </defs>
                    <g clip-path='url(#clip0)' transform='translate(-752 -250)'>
                    <path d='M870.5 320.5 1007.5 253.5 1144.5 320.5 1007.5 387.5Z' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/>
                    <rect x='754.5' y='516.5' width='191' height='117' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                    <rect x='1080.5' y='516.5' width='191' height='117' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/>
                    <path d='M1007.36 387 1007.36 451.678 850 451.678 850 516.356' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/>
                    <path d='M0 0 64.6777 0 64.6777 168.735 129.355 168.735' stroke='"&AppTheme.palette.themePrimary&"' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 1007 387)'/>
                    </g>
                    </svg>"))
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedFill: =RGBA(0, 0, 0, 0)
                Visible: =ddlStageCondition_2.Selected.Value <> 'Business Approval Stage Condition'.None
                Width: =300
                X: =radSwitchPaths_2.X
                Y: =radSwitchPaths_2.Y + radSwitchPaths_2.Height + 2
                ZIndex: =8

            radSwitchPaths_2 As radio:
                BorderColor: =RGBA(51, 51, 51, 1)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                Default: =If(Self.Visible, Max(_selectedStage.Paths,3))
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisplayMode: =ddlStageCondition_2.DisplayMode
                FocusedBorderThickness: =0
                Font: =Font.'Segoe UI'
                Height: =If(Self.Visible, 30, 0)
                HoverColor: =RGBA(51, 51, 51, 1)
                HoverFill: =RGBA(0, 0, 0, 0)
                Items: =[ 2, 3, 4, 5]
                Layout: =Layout.Horizontal
                OnChange: |
                    =With({ count: CountRows(_conditions), newCount: radSwitchPaths_2.Selected.Value },
                        If(count > newCount, 
                            //new paths is less than current - remove last n conditions
                            //push paths that are to be removed into temp stack then remove
                            Collect(_removedConditions, 
                                ShowColumns(Filter(_conditions, Path > newCount), "ConditionId", "Path", "Target", "TargetData", "StaticValue", "TargetStage")
                            );
                            RemoveIf(_conditions, Path > newCount),
                    
                            //new paths is more than current - add conditions
                            Collect(_conditions,
                                ForAll(Sequence(newCount - count, count + 1),                 
                                    Coalesce(
                                        LookUp(_removedConditions, Path = Value),
                                        { 
                                            ConditionId: Blank(), TargetData: Blank(), StaticValue: "", TargetStage: Blank(),
                                            Path: Value, Text: "Path " & Value, 
                                            Target: 'Business Approval Condition Target Data'.'Static value',
                                            IsDefault: false, IsParallel: false
                                        }
                                    )
                                )
                            );
                    
                            //pop from temp stack for any conditions that has been restored back
                            RemoveIf(_removedConditions, Path <= newCount);
                        );
                        //clear any condition from default, if exist
                        UpdateIf(_conditions, IsDefault, { IsDefault: false, StaticValue: ""});
                        //update last path to default
                        Patch(_conditions, Last(_conditions), { IsDefault: true, StaticValue: "Default (Other values)" })
                    );
                PaddingBottom: =0
                PaddingTop: =2
                PressedColor: =RGBA(51, 51, 51, 1)
                PressedFill: =RGBA(0, 0, 0, 0)
                RadioBorderColor: =RGBA(51, 51, 51, 1)
                RadioSelectionFill: =RGBA(0, 120, 212, 1)
                RadioSize: =25
                Size: =10
                Visible: =lblSwitchPaths_4.Visible
                Width: =ddlStageCondition_2.Width
                X: =txtStageName_2.X
                Y: =lblSwitchPaths_4.Y
                ZIndex: =9

            lblSwitchPaths_4 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Paths"
                Visible: =ddlStageCondition_2.Selected.Value = 'Business Approval Stage Condition'.Switch
                Width: =120
                X: =lblStageCondition_2.X
                Y: =lblStageCondition_2.Y + lblStageCondition_2.Height + 10
                ZIndex: =10

            lblFirstStageNoCondition_2 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="This is the first stage for the process. Conditional rules are not applicable."
                Visible: =_currentStageIndex < 2
                Width: =txtStageDesc_2.Width
                X: =txtStageDesc_2.X
                Y: =lblStageConditionHeader_2.Y 
                ZIndex: =11

            lblStageConditionSource_2 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Source"
                Visible: =ddlStageCondition_2.DisplayMode = DisplayMode.Edit && ddlStageCondition_2.Selected.Value <> 'Business Approval Stage Condition'.None
                Width: =120
                X: =lblStageName_4.X
                Y: =imgWorkflowDiagram_4.Y + imgWorkflowDiagram_4.Height + 10
                ZIndex: =12

            lblRequestDataCondition_4 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =If(Self.Visible, 30, 0)
                PaddingLeft: =12
                Size: =10
                Text: ="Request Data"
                Visible: =ddlStageConditionSource_2.Selected.Value = 'Business Approval Condition Source Data'.'Request Data' && ddlStageConditionSource_2.Visible
                Width: =120
                X: =lblStageName_4.X
                Y: =lblStageConditionSource_2.Y + lblStageConditionSource_2.Height + If(Self.Visible, 10, 0)
                ZIndex: =13

            lblRequestDataDetails_2 As label:
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                PaddingLeft: =12
                Size: =10
                Text: |-
                    ="Default value: " & Coalesce(ddlRequestDataCondition_2.Selected.'Default Value', "Not specified.")
                Visible: =ddlRequestDataCondition_2.Visible && !lblRequestDataIsEmpty_2.Visible
                Width: =Parent.Width - Self.X - 100
                X: =ddlRequestDataCondition_2.X + ddlRequestDataCondition_2.Width
                Y: =ddlRequestDataCondition_2.Y
                ZIndex: =14

            lblParallelConditions_2 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Switch conditions are parallel rules. You can have one or more paths with the same condition to create parallel paths."
                Visible: =galConditions_1.Visible && ddlStageCondition_2.Selected.Value = 'Business Approval Stage Condition'.Switch
                Width: =galConditions_1.Width
                X: =lblStageName_4.X
                Y: =galConditions_1.Y + galConditions_1.Height
                ZIndex: =15

            lblStageOperand_2 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Operand"
                Visible: =lblStageConditionSource_2.Visible
                Width: =120
                X: =lblStageName_4.X
                Y: =lblRequestDataCondition_4.Y + lblRequestDataCondition_4.Height + 10
                ZIndex: =17

            Dependencies_2 As groupContainer:
                Height: =Min(lblRequestDataDetails_2.Y - 20, 300)
                Visible: =CountRows(galStageDeps_2.AllItems) > 0
                Width: =Parent.Width - Self.X - 20
                X: =txtStageName_2.X + txtStageName_2.Width + 20
                Y: =txtStageName_2.Y
                ZIndex: =18

                galStageDeps_2 As gallery.galleryVertical:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    Height: =Min(Parent.Height - Self.Y, CountRows(Self.AllItems) * Self.TemplateHeight)
                    Items: =_selectedStage.'Business Approval Conditions (cat_BusinessApprovalCondition_GoToStage_c)'
                    Layout: =Layout.Vertical
                    TemplatePadding: =0
                    TemplateSize: =30
                    Width: =Parent.Width - Self.X - 10
                    X: =5
                    Y: =tblStageDeps_2.Y + tblStageDeps_2.Height
                    ZIndex: =1

                    lblStageDepStageName_2 As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =RGBA(51, 51, 51, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        FocusedBorderThickness: =4
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Lighter
                        Height: =30
                        OnSelect: =Select(Parent)
                        Size: =10
                        Text: =ThisItem.Node.'Stage Name Value'
                        Tooltip: =Self
                        Width: =Parent.Width / 4
                        Wrap: =false
                        ZIndex: =1

                    lblStageDepNodeName_2 As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =RGBA(51, 51, 51, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        FocusedBorderThickness: =4
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Lighter
                        Height: =30
                        OnSelect: =Select(Parent)
                        Size: =10
                        Text: =ThisItem.Node.Name
                        Tooltip: =Self.Text
                        Width: =Parent.Width / 4
                        Wrap: =false
                        X: =lblStageDepStageName_2.Width
                        ZIndex: =2

                    lblStageDepNodeCond_2 As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =RGBA(51, 51, 51, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        FocusedBorderThickness: =4
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Lighter
                        Height: =30
                        OnSelect: =Select(Parent)
                        Size: =10
                        Text: =ThisItem.Node.'Source Data Name Value' & " " & ThisItem.Node.Operand & " " & ThisItem.'Condition Value Display'
                        Tooltip: =Self.Text
                        Width: =Parent.Width / 2
                        Wrap: =false
                        X: =lblStageDepNodeName_2.X + lblStageDepNodeName_2.Width
                        ZIndex: =3

                tblStageDeps_2 As TableHeader:
                    ColumnOnClick: ="Text"
                    Columns: |-
                        =Table(
                            { Index: 1, Text: "Stage", Column: "Stage", Width: Self.Width / 4, Offset: 0, EnableSort: false },    
                            { Index: 2, Text: "Node", Column: "Name", Width: Self.Width / 4, Offset: -Self.Width / 4, EnableSort: false },
                            { Index: 3, Text: "Condition", Column: "Condition", Width: Self.Width / 2, Offset: -Self.Width / 2, EnableSort: false }
                        )
                    EnableSort: =false
                    Width: =galStageDeps_2.Width
                    X: =5
                    Y: =lblStageHasDeps_2.Height
                    ZIndex: =2

                lblStageHasDeps_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Lighter
                    Height: =30
                    Size: =10
                    Text: ="This stage has the following dependencies and cannot be deleted until the dependencies are removed."
                    Width: =Parent.Width
                    ZIndex: =3

            btnResetConditions_2 As Button:
                Appearance: ='ButtonCanvas.Appearance'.Secondary
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                FontSize: =0
                Height: =32
                OnSelect: |-
                    =If(!isCleared,
                        //saves current condition in memory
                        ClearCollect(_savedConditions, _conditions);
                        UpdateContext({ allowUpdateConditionType: true, isCleared: true }),
                    
                        //restore saved conditions back from memory
                        ClearCollect(_conditions, _savedConditions);
                        Clear(_savedConditions); Clear(_removedConditions);
                        Reset(ddlStageCondition_2);
                        UpdateContext({ allowUpdateConditionType: false, isCleared: false })
                    )
                Text: =If(isCleared, "Reset", "Edit")
                Visible: =(!allowUpdateConditionType || isCleared) && _currentStageIndex > 1
                Width: =96
                X: =490
                Y: =lblStageCondition_2.Y
                ZIndex: =19

            ddlStageCondition_2 As Combobox.pcfdataset:
                BasePaletteColor: =
                DefaultSelectedItems: |-
                    =[If(
                        !IsBlankOrError(_selectedStage.'Stage Condition'),
                        
                            LookUp(
                                Choices('Business Approval Stage Condition'),
                                Value = _selectedStage.'Stage Condition'
                            )
                        ,
                        First(Choices('Business Approval Stage Condition'))
                    )]
                DisplayMode: =If(_currentStageIndex < 2 || !allowUpdateConditionType, DisplayMode.Disabled, DisplayMode.Edit)
                FontSize: =0
                Height: =32
                InputTextPlaceholder: ="Choose condition"
                Items: =Choices('Business Approval Stage Condition')
                OnChange: |-
                    =UpdateContext({ conditionsCount: CountRows(_conditions)});
                    Switch(Self.Selected.Value,
                    
                        //--- Case = If/Else ---
                        'Business Approval Stage Condition'.'If/Else', 
                        //if there are existing conditions, remove all except the first condition
                        Collect(_removedConditions, 
                            ShowColumns(Filter(_conditions, Path > 1), "ConditionId", "Path", "Target", "TargetData", "StaticValue", "TargetStage")
                        );
                        RemoveIf(_conditions, Path > 1);
                        If(conditionsCount = 0, 
                            ClearCollect(_conditions,
                            { 
                                ConditionId: "", Path: 1, Target: 'Business Approval Condition Target Data'.'Static value', 
                                TargetData: Blank(), StaticValue: "", TargetStage: Blank(), IsDefault: false, IsParallel: false 
                            })
                        );
                        Reset(radSwitchPaths_2),
                        
                        //--- Case = Switch ---
                        'Business Approval Stage Condition'.Switch, 
                        Collect(_conditions, 
                            ForAll(Sequence(radSwitchPaths_2.Selected.Value - conditionsCount, conditionsCount + 1), 
                            { 
                                ConditionId: "", Path: Value, Target: 'Business Approval Condition Target Data'.'Static value',
                                TargetData: Blank(), StaticValue: "", TargetStage: Blank(), IsDefault: false, IsParallel: false
                            })
                        );
                        //set last condition as default for switch types
                        Patch(_conditions, Last(_conditions), { IsDefault: true, StaticValue: "Default (Other values)"}),
                    
                        //--- Case = None ---
                        'Business Approval Stage Condition'.None, 
                        //if there are any existing conditions, add them to the remove list
                        If(conditionsCount > 0, 
                            Collect(_removedConditions, ShowColumns(_conditions,  "ConditionId", "Path", "Target", "TargetData", "StaticValue", "TargetStage"));    
                            Clear(_conditions)
                        )
                    );
                    Reset(ddlStageOperand_2)
                ValidationState: ="None"
                Width: =320
                X: =140
                Y: =lblStageCondition_2.Y
                ZIndex: =20

                Value2 As pcfDataField.textualColumn:
                    FieldDisplayName: ="Value"
                    FieldName: ="Value"
                    FieldType: ="l"
                    FieldVariantName: ="textualColumn"
                    Order: =1
                    ZIndex: =35

            ddlStageConditionSource_2 As Combobox.pcfdataset:
                BasePaletteColor: =
                DefaultSelectedItems: =[If(!IsBlankOrError(_selectedStage.'Source Data Type'),LookUp(Choices('Business Approval Condition Source Data'),Value = _selectedStage.'Source Data Type'),LookUp(Choices('Business Approval Condition Source Data'),Value = 'Business Approval Condition Source Data'.'Request Data'))]
                DisplayMode: =DisplayMode.Edit
                FontSize: =0
                Height: =32
                InputTextPlaceholder: ="Choose source"
                Items: =Choices('Business Approval Condition Source Data')
                OnChange: =Reset(ddlStageOperand_2)
                ValidationState: ="None"
                Visible: =lblStageConditionSource_2.Visible
                Width: =320
                X: =140
                Y: =lblStageConditionSource_2.Y
                ZIndex: =21

                Value1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="Value"
                    FieldName: ="Value"
                    FieldType: ="l"
                    FieldVariantName: ="textualColumn"
                    Order: =1
                    ZIndex: =34

            ddlStageOperand_2 As Combobox.pcfdataset:
                BasePaletteColor: =
                DefaultSelectedItems: |-
                    =[With({ operand: _selectedStage.Operand}, 
                        If(IsBlank(operand) || ddlStageCondition.Selected.Value = 'Business Approval Stage Condition'.Switch, 
                            'Business Approval Condition Operand'.'Equals (=)', operand
                        )
                    )]
                    //If(!IsBlankOrError(_selectedStage.'Source Data Type'),[_selectedStage.'Source Data Type'])
                DisplayMode: |-
                    =If(
                        ddlStageCondition_2.Selected.Value = 'Business Approval Stage Condition'.Switch ||
                        ddlStageConditionSource_2.Selected.Value = 'Business Approval Condition Source Data'.'Previous Node Outcome' ||
                        lblRequestDataIsEmpty_2.Visible, 
                        DisplayMode.Disabled, DisplayMode.Edit
                    )
                FontSize: =0
                Height: =32
                InputTextPlaceholder: ="Choose operand"
                Items: |-
                    =If(
                        ddlStageConditionSource_2.Selected.Value = 'Business Approval Condition Source Data'.'Request Data',
                        LookUp(
                            _operands,
                            ddlRequestDataCondition_2.Selected.'Data Type' in type
                        ).operands,
                        ['Business Approval Condition Operand'.'Equals (=)']
                    )
                OnChange: |-
                    =If(Self.Selected.Value = 'Business Approval Condition Operand'.'Is Blank' || 
                    Self.Selected.Value = 'Business Approval Condition Operand'.'Is Not Blank', 
                        Patch(_conditions, First(_conditions), { StaticValue: ""})
                    )
                ValidationState: ="None"
                Visible: =lblStageConditionSource_2.Visible
                Width: =320
                X: =140
                Y: =lblStageOperand_2.Y
                ZIndex: =22

                Value1_1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="Value"
                    FieldName: ="Value"
                    FieldType: ="l"
                    FieldVariantName: ="textualColumn"
                    Order: =1
                    ZIndex: =34

            txtLabelInfo As Text:
                DisplayMode: =DisplayMode.Edit
                Height: =44
                Text: |-
                    ="Currently editing a stage with Conditions defined. Click 'Edit' to change and 'Reset' to undo. Warning: Removing conditions removes the corresponding paths and its nodes."
                Visible: =btnResetConditions_2.Visible
                Width: =615
                X: =140
                Y: =lblStageConditionHeader_2.Y
                ZIndex: =23

            "ddlRequestDataCondition_2 As 'Combo box'.pcfdataset":
                AccessibleLabel: ="Variables(Request Data)"
                DefaultSelectedItems: |-
                    =If(!IsBlankOrError(_selectedStage.'Source Data'),[LookUp(Filter(
                        Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                        Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                    ), "cat_name" = _selectedStage.'Source Data'.Name)])
                DisplayMode: =DisplayMode.Edit
                FillColor: =RGBA(245, 245, 245, 1)
                Height: =32
                Items: |-
                    =Filter(
                        Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                        Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                    )
                Visible: =lblRequestDataCondition_4.Visible
                Width: =320
                X: =140
                Y: =lblRequestDataCondition_4.Y
                ZIndex: =24

                Name1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="Name"
                    FieldName: ="cat_name"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =1
                    ZIndex: =36

                "'Data Type1' As pcfDataField.textualColumn":
                    FieldDisplayName: ="Data Type"
                    FieldName: ="cat_datatype"
                    FieldType: ="l"
                    FieldVariantName: ="textualColumn"
                    Order: =3
                    ZIndex: =37

                "'Created On1' As pcfDataField.textualColumn":
                    FieldDisplayName: ="Created On"
                    FieldName: ="createdon"
                    FieldType: ="d"
                    FieldVariantName: ="textualColumn"
                    Order: =4
                    ZIndex: =38

            "txtStageName_2 As 'Text box'":
                ColorBackground: =
                ColorText: =
                DisplayMode: =DisplayMode.Edit
                Height: =32
                OnChange: |-
                    =UpdateContext({stageName:Self.Value});
                Value: =stageName
                Width: =(Parent.Width - Self.X) / 2
                X: =140
                Y: =lblStageName_4.Y
                ZIndex: =25

            "txtStageDesc_2 As 'Text box'":
                ColorBackground: =
                ColorText: =
                DisplayMode: =DisplayMode.Edit
                Height: =60
                Mode: ='TextBox.Mode'.Multiline
                OnChange: |-
                    =UpdateContext({stageDesc:Self.Value});
                Value: =stageDesc
                Width: =(Parent.Width - Self.X) / 2
                X: =txtStageName_2.X
                Y: =lblStageDesc_6.Y
                ZIndex: =26

            lblRequestDataIsEmpty_2 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                Color: =RGBA(255, 0, 0, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Fill: =RGBA(255, 255, 255, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =ddlRequestDataCondition_2.Height
                Size: =10
                Text: ="No Variables (Business Data) available. Create new variable using the Variables option provide on the top of designer screen"
                Visible: |-
                    =With({ condData:
                         Filter(
                            Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                            Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                        )},
                        IsEmpty(condData) && ddlStageConditionSource_2.Visible && 
                        ddlStageConditionSource_2.Selected.Value = 'Business Approval Condition Source Data'.'Request Data'
                    )
                Width: =(Parent.Width - Self.X) / 1.3
                X: =ddlRequestDataCondition_2.X
                Y: =ddlRequestDataCondition_2.Y
                ZIndex: =27

            galConditions_1 As gallery.galleryVertical:
                BorderColor: =RGBA(166, 166, 166, 1)
                Height: =120
                Items: =SortByColumns(_conditions, "Path", SortOrder.Ascending)
                Layout: =Layout.Vertical
                TemplatePadding: =0
                TemplateSize: =118
                Visible: |-
                    =CountRows(Self.AllItems) > 0 && ddlStageCondition_2.Selected.Value <> 'Business Approval Stage Condition'.None && 
                    ddlStageOperand_2.Selected.Value <> 'Business Approval Condition Operand'.'Is Blank' &&
                    ddlStageOperand_2.Selected.Value <> 'Business Approval Condition Operand'.'Is Not Blank' && ddlStageOperand_2.Visible
                Width: |-
                    =If(ddlStageCondition_2.Selected.Value = 'Business Approval Stage Condition'.'If/Else',
                        txtStageName_2.Width,
                        Parent.Width - Self.X - 20
                    )
                WrapCount: =CountRows(Self.AllItems)
                X: =If(ddlStageCondition_2.Selected.Value = 'Business Approval Stage Condition'.'If/Else', txtStageName_2.X, lblStageName_4.X)
                Y: =lblStageOperand_2.Y + lblStageOperand_2.Height + 20
                ZIndex: =28

                Rectangle3_2 As rectangle:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =RGBA(230, 230, 230, 1)
                    FocusedBorderThickness: =4
                    Height: =Parent.TemplateHeight
                    HoverFill: =RGBA(105, 121, 126, 1)
                    OnSelect: =Select(Parent)
                    PressedFill: =RGBA(105, 121, 126, 1)
                    Width: =Parent.TemplateWidth - 2
                    ZIndex: =1

                lblConditionTarget_1 As label:
                    Align: =Align.Center
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =30
                    PaddingLeft: =12
                    Size: =9
                    Text: |-
                        =If(ThisItem.IsDefault, "Default", "If " & 
                            If(ddlRequestDataCondition.Visible, ddlRequestDataCondition.Selected.Name, ddlStageConditionSource.Selected.Value) & " " &
                            ddlStageOperand.Selected.Value
                        )
                    Width: =Parent.TemplateWidth
                    X: =Parent.TemplateWidth / 2 - Self.Width / 2
                    Y: =5
                    ZIndex: =2

                ddlConditionTarget_2 As dropdown:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =If(Self.DisplayMode = DisplayMode.Disabled, 'Business Approval Condition Target Data'.'Static value', ThisItem.Target)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    DisplayMode: =txtTargetStatic_2.DisplayMode
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =30
                    HoverBorderColor: =Self.BorderColor
                    HoverFill: =RGBA(243, 242, 241, 1)
                    Items: =Choices('Business Approval Condition Target Data')
                    OnChange: |-
                        =Patch(_conditions, ThisItem, { Target: Self.Selected.Value, TargetData: Blank() })
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =Self.HoverFill
                    SelectionColor: =Self.Color
                    SelectionFill: =RGBA(243, 242, 241, 1)
                    Size: =10
                    Width: =Min(txtStageName.Width, Parent.TemplateWidth - 20)
                    X: =Parent.TemplateWidth / 2 - Self.Width / 2
                    Y: =lblConditionTarget_1.Y + lblConditionTarget_1.Height
                    ZIndex: =3

                ddlTargetRequestData_1 As dropdown:
                    AllowEmptySelection: =true
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =ThisItem.TargetData.Name
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =If(Self.Visible, 30, 0)
                    HoverBorderColor: =Self.BorderColor
                    HoverFill: =RGBA(243, 242, 241, 1)
                    Items: |-
                        =Filter(
                            Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                            Process.'Business Approval Process' = _selectedProcess.'Business Approval Process' && 
                            'Business Approval Data' <> ddlRequestDataCondition.Selected.'Business Approval Data' &&
                            'Data Type' = ddlRequestDataCondition.Selected.'Data Type'
                        )
                    OnChange: |-
                        =Patch(_conditions, ThisItem, { TargetData: Self.Selected, StaticValue: Blank()})
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =Self.HoverFill
                    SelectionColor: =Self.Color
                    SelectionFill: =RGBA(243, 242, 241, 1)
                    Size: =10
                    Visible: =ddlConditionTarget_2.Selected.Value = 'Business Approval Condition Target Data'.'Request Data' && ThisItem.IsDefault = false
                    Width: =ddlConditionTarget_2.Width
                    X: =ddlConditionTarget_2.X
                    Y: =ddlConditionTarget_2.Y + ddlConditionTarget_2.Height + 10
                    ZIndex: =4

                txtTargetStatic_2 As text:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    Clear: =true
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =ThisItem.StaticValue
                    DelayOutput: =true
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    DisplayMode: =If(ThisItem.IsDefault, DisplayMode.Disabled, DisplayMode.Edit)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =30
                    HoverBorderColor: =Self.BorderColor
                    HoverColor: =RGBA(51, 51, 51, 1)
                    HoverFill: =RGBA(255, 255, 255, 1)
                    MaxLength: =100
                    OnChange: |-
                        =Patch(_conditions, ThisItem, { StaticValue: Self.Text, TargetData: Blank() })
                    PaddingLeft: =5
                    PressedBorderColor: =Self.BorderColor
                    PressedColor: =RGBA(51, 51, 51, 1)
                    PressedFill: =RGBA(255, 255, 255, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10
                    Visible: =!ddlTargetRequestData_1.Visible
                    Width: =ddlConditionTarget_2.Width
                    X: =ddlConditionTarget_2.X
                    Y: =ddlConditionTarget_2.Y + ddlConditionTarget_2.Height + 10
                    ZIndex: =5

                lblStageTargetRequestDataNotFound_1 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Fill: =RGBA(230, 230, 230, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =ddlTargetRequestData_1.Height
                    OnSelect: =Select(Parent)
                    Size: =10
                    Text: ="No other data field found of similar data type for " & ddlRequestDataCondition.Selected.Name & " (" & ddlRequestDataCondition.Selected.'Data Type' & ")"
                    Visible: |-
                        =With({ conditionData: Filter(
                            Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                            Process.'Business Approval Process' = _selectedProcess.'Business Approval Process' && 
                            'Business Approval Data' <> ddlRequestDataCondition.Selected.'Business Approval Data' &&
                            'Data Type' = ddlRequestDataCondition.Selected.'Data Type')},
                            ddlTargetRequestData_1.Visible && IsEmpty(conditionData)
                        )
                    Width: =ddlTargetRequestData_1.Width
                    X: =ddlTargetRequestData_1.X
                    Y: =ddlTargetRequestData_1.Y
                    ZIndex: =6

                lblIsParallel_1 As label:
                    Align: =Align.Center
                    BorderColor: =RGBA(73, 84, 88, 1)
                    BorderThickness: =1
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    Height: =lblConditionTarget_1.Height - 5
                    Size: =lblConditionTarget_1.Size
                    Text: ="="
                    Tooltip: ="Parallel paths"
                    Visible: |-
                        =!IsBlank(LookUp(_conditions, Path <> ThisItem.Path && Target = ThisItem.Target && IsDefault = false &&
                            If(ThisItem.Target = 'Business Approval Condition Target Data'.'Static value',
                                StaticValue = txtTargetStatic_2.Text,
                                TargetData.'Business Approval Data' = ddlTargetRequestData_1.Selected.'Business Approval Data')
                            )
                        ) && !ThisItem.IsDefault
                    Width: =Self.Height
                    X: =ddlConditionTarget_2.X
                    Y: =lblConditionTarget_1.Y
                    ZIndex: =7

        NodeContainer As groupContainer:
            Height: =Parent.Height - Self.Y
            Visible: =showNodeContainer
            Width: =Parent.Width - Self.X
            ZIndex: =2

            "CommandBar2_13 As 'Fluent Command Bar (1.0.22)'.pcfdataset":
                DisplayMode: =DisplayMode.Edit
                Height: =40
                Items: |-
                    =Table(
                        {
                            ItemKey: "back",
                            ItemDisplayName: "Back",
                            ItemIconName: "NavigateBack"
                        },{
                            ItemKey: "save",
                            ItemDisplayName: "Save",
                            ItemIconName: "Save"
                        },{
                            ItemKey: "saveback",
                            ItemDisplayName: "Save & Back",
                            ItemIconName: "SaveAndClose"
                        },{
                            ItemKey: "message",
                            ItemDisplayName: "Message",
                            ItemIconName: "TextDocument"
                        },{
                            ItemKey: "delete",
                            ItemDisplayName: "Delete",
                            ItemIconName: "Delete"
                        }
                    )
                OnSelect: |-
                    =If(Self.Selected.ItemKey = "back",Back(),
                        If(Self.Selected.ItemKey = "delete",
                            Set(_showConfirm, true),
                    
                            //if not Delete    
                            UpdateContext({ busyMessage: "Saving node - " & txtNodeName_4.Text });
                            Set(_isBusy, true);
                            Set(_selectedNode, Patch('Business Approval Nodes', Coalesce(_selectedNode, Defaults('Business Approval Nodes')),
                                {
                                    Name: txtNodeName_4.Text, Description: txtNodeDesc_4.Text, Stage: _selectedStage, Process: _selectedProcess,
                                    'Approval Type': ddlNodeApprovalType_2.Selected.Value, 'Notification Type': ddlNotificationType_2.Selected.Value,
                                    'Delegation Rule': ddlDelegationRule_2.Selected.Value, 'Time Out': If(txtTimeout_2.Visible, Value(txtTimeout_2.Text), Blank()), 
                                    'Time Out Mode': If(ddlTimeOutRule_2.Visible, ddlTimeOutRule_2.Selected.Value, Blank()), 'Node Type': radNodeType_4.Selected.Value,
                                    'Path Index': _currentPathIndex, 'Row Index': _currentNodeIndex, 
                                    'Custom Responses': If(txtCustomResponses_2.Visible, txtCustomResponses_2.Text, Blank()),
                                    Approvers: Concat(_nodeApprovers, Name, ", ")
                                })
                            );
                    
                            //increment node index for any nodes after this node in this path, if exists
                            UpdateIf('Business Approval Nodes', 
                                'Path Index' = _selectedNode.'Path Index' && 'Row Index' >= _selectedNode.'Row Index' &&
                                ThisRecord.'Business Approval Node' <> _selectedNode.'Business Approval Node' &&
                                Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage', 
                                { 'Row Index': ThisRecord.'Row Index' + 1 }
                            );
                    
                            If(CountRows(_nodeApprovers) > 0 || CountRows(_removedApprovers) > 0,
                                Concurrent(
                                    //unrelate removed approvers
                                    Trace("_removedApprovers count: " & CountRows(_removedApprovers), TraceSeverity.Information);
                                    ForAll(_removedApprovers As appr,
                                        Unrelate(_selectedNode.'Business Approvers', LookUp('Business Approvers', 'Business Approver' = appr.Value))
                                    );
                                    Clear(_removedApprovers),
                                    
                                    //add newly added approvers to approver table if does not exist, otherwise update and then relate to selected node
                                    With({ addedApprovers: Filter(_nodeApprovers, IsBlank('Business Approver'))},
                                        Trace("newly added approvers count: " & CountRows(addedApprovers), TraceSeverity.Information);
                                        ForAll(addedApprovers As appr, 
                                            Relate(_selectedNode.'Business Approvers',
                                                Patch('Business Approvers', 
                                                    Coalesce(LookUp('Business Approvers', 'Approver Id' = appr.'Approver Id'), Defaults('Business Approvers')),
                                                    { 
                                                        Name: 
                                                            If(
                                                                appr.'Dynamic Approver Type' = 
                                                                'Business Approval Dynamic Approver Type'.'Manager of [Request data field]', 
                                                                "Manager of " & appr.'Request Data'.Name,
                    
                                                                appr.'Dynamic Approver Type' =
                                                                'Business Approval Dynamic Approver Type'.'Use Request Data Field',
                                                                appr.'Request Data'.Name,
                    
                                                                appr.Name
                                                            ),
                                                        'Approver Id': appr.'Approver Id', 'Approver Type': appr.'Approver Type',
                                                        'Dynamic Approver Type': appr.'Dynamic Approver Type', 'Request Data': appr.'Request Data'
                                                    }
                                                )
                                            )
                                        )
                                    )
                                );
                    
                                //refresh selected node reference
                                Refresh('Business Approval Nodes');
                                Set(_selectedNode, LookUp('Business Approval Nodes', 'Business Approval Node' = _selectedNode.'Business Approval Node'))
                            );
                            Set(_isBusy, false);
                            If(Self.Selected.ItemKey = "saveback", Navigate(scrWorkflowEditor))
                        )
                    );
                Theme: =AppThemeJson
                Visible: =false
                Width: =Parent.Width
                X: =0
                Y: =0
                ZIndex: =1

            bcProcessStage_7 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =30
                PaddingLeft: =0
                Size: =10
                Text: =_selectedProcess.Name & " > " & _selectedStage.Name & " > " & Coalesce(_selectedNode.Name, "(New node)")
                Visible: =false
                Width: =Parent.Width - Self.X - 20
                Wrap: =false
                X: =20
                Y: =CommandBar2_13.Y + CommandBar2_13.Height
                ZIndex: =2

            lblNodeType_4 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Node Type"
                Width: =120
                X: =20
                Y: =20
                ZIndex: =3

            radNodeType_4 As radio:
                BorderColor: =RGBA(51, 51, 51, 1)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                Default: =If(IsBlank(_selectedNode.'Node Type'),"Approval",_selectedNode.'Node Type')
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisplayMode: =If(_currentNodeIndex > 0 && IsBlank(_selectedNode) && (_currentStageIndex + _currentNodeIndex > 2) && !isParallelPath, DisplayMode.Edit, DisplayMode.Disabled)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =38
                HoverColor: =RGBA(51, 51, 51, 1)
                HoverFill: =RGBA(0, 0, 0, 0)
                Items: =Choices('Business Approval Node Type')
                Layout: =Layout.Horizontal
                OnSelect: |-
                    =If(Self.Selected.Value = 'Business Approval Node Type'.'Go to Stage', UpdateContext(
                        {
                            showNodeContainer:false,
                            showNodeRuleEditorContainer: true
                        }
                    ))
                PaddingBottom: =5
                PaddingTop: =5
                PressedColor: =RGBA(51, 51, 51, 1)
                PressedFill: =RGBA(0, 0, 0, 0)
                RadioBorderColor: =RGBA(51, 51, 51, 1)
                RadioSelectionFill: =RGBA(0, 120, 212, 1)
                RadioSize: =25
                Size: =10
                Width: =500
                X: =204
                Y: =lblNodeType_4.Y
                ZIndex: =4

            lblStageName_5 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Name"
                Width: =120
                X: =bcProcessStage_7.X
                Y: =lblNodeType_4.Height + 30
                ZIndex: =5

            txtNodeName_4 As text:
                BorderColor: =RGBA(166, 166, 166, 1)
                Clear: =true
                Color: =RGBA(51, 51, 51, 1)
                Default: =_selectedNode.Name
                DelayOutput: =true
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =30
                HoverBorderColor: =Self.BorderColor
                HoverColor: =RGBA(51, 51, 51, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                MaxLength: =100
                OnChange: =
                PaddingLeft: =5
                PressedBorderColor: =Self.BorderColor
                PressedColor: =RGBA(51, 51, 51, 1)
                PressedFill: =RGBA(255, 255, 255, 1)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Width: =(Parent.Width - Self.X) / 2
                X: =radNodeType_4.X
                Y: =lblStageName_5.Y
                ZIndex: =6

            lblStageDesc_7 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Description"
                Width: =120
                X: =lblStageName_5.X
                Y: =lblStageName_5.Y + lblStageName_5.Height + 5
                ZIndex: =7

            txtNodeDesc_4 As text:
                BorderColor: =RGBA(166, 166, 166, 1)
                Clear: =true
                Color: =RGBA(51, 51, 51, 1)
                Default: =_selectedNode.Description
                DelayOutput: =true
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =60
                HoverBorderColor: =Self.BorderColor
                HoverColor: =RGBA(51, 51, 51, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                MaxLength: =100
                Mode: =TextMode.MultiLine
                OnChange: =
                PaddingLeft: =5
                PressedBorderColor: =Self.BorderColor
                PressedColor: =RGBA(51, 51, 51, 1)
                PressedFill: =RGBA(255, 255, 255, 1)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Width: =(Parent.Width - Self.X) / 2
                X: =txtNodeName_4.X
                Y: =lblStageDesc_7.Y
                ZIndex: =8

            conApprovalConfig_2 As groupContainer:
                Height: =Parent.Height - Self.Y
                Visible: =radNodeType_4.Selected.Value = 'Business Approval Node Type'.Approval
                Width: =Parent.Width
                Y: =txtNodeDesc_4.Y + txtNodeDesc_4.Height + 10
                ZIndex: =9

                lblApprovalConfiguration_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    PaddingLeft: =0
                    Size: =10
                    Text: ="Approval Configuration"
                    Width: =Parent.Width - Self.X - 20
                    Wrap: =false
                    X: =bcProcessStage_7.X
                    ZIndex: =1

                lblNodeApprovalType_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =30
                    PaddingLeft: =12
                    Size: =10
                    Text: ="Approval Type"
                    Width: =120
                    X: =lblNodeType_4.X
                    Y: =lblApprovalConfiguration_2.Y + lblApprovalConfiguration_2.Height + 5
                    ZIndex: =2

                ddlNodeApprovalType_2 As dropdown:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =_selectedNode.'Approval Type'
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =30
                    HoverBorderColor: =Self.BorderColor
                    HoverFill: =RGBA(243, 242, 241, 1)
                    Items: =Choices('Business Approval Type')
                    OnChange: =
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =Self.HoverFill
                    SelectionColor: =Self.Color
                    SelectionFill: =RGBA(243, 242, 241, 1)
                    Size: =10
                    Width: =txtNodeDesc_4.Width
                    X: =txtNodeName_4.X
                    Y: =lblNodeApprovalType_2.Y
                    ZIndex: =3

                txtCustomResponses_2 As text:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    Clear: =true
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =_selectedNode.'Custom Responses'
                    DelayOutput: =true
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =30
                    HintText: ="Enter list of custom responses, seperated by comma (Response1, Response2)"
                    HoverBorderColor: =Self.BorderColor
                    HoverColor: =RGBA(51, 51, 51, 1)
                    HoverFill: =RGBA(255, 255, 255, 1)
                    MaxLength: =100
                    OnChange: =
                    PaddingLeft: =5
                    PressedBorderColor: =Self.BorderColor
                    PressedColor: =RGBA(51, 51, 51, 1)
                    PressedFill: =RGBA(255, 255, 255, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10
                    Visible: =lblCustomResponses_2.Visible
                    Width: =(Parent.Width - Self.X) / 2
                    X: =radNodeType_4.X
                    Y: =lblCustomResponses_2.Y
                    ZIndex: =4

                lblCustomResponses_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =If(Self.Visible, 30, 0)
                    PaddingLeft: =12
                    Size: =10
                    Text: ="Responses"
                    Visible: =StartsWith(ddlNodeApprovalType_2.Selected.Value, "Custom Responses")
                    Width: =lblNodeApprovalType_2.Width
                    X: =lblNodeType_4.X
                    Y: =lblNodeApprovalType_2.Y + lblNodeApprovalType_2.Height + 4
                    ZIndex: =5

                lblNodeApprover_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =30
                    PaddingLeft: =12
                    Size: =10
                    Text: ="Approver"
                    Width: =lblNodeApprovalType_2.Width
                    X: =lblNodeType_4.X
                    Y: =lblCustomResponses_2.Y + lblCustomResponses_2.Height + 4
                    ZIndex: =6

                radApproverType_2 As radio:
                    BorderColor: =RGBA(51, 51, 51, 1)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    Default: ="User"
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =38
                    HoverColor: =RGBA(51, 51, 51, 1)
                    HoverFill: =RGBA(0, 0, 0, 0)
                    Items: =Choices('Business Approver Type')
                    Layout: =Layout.Horizontal
                    PaddingBottom: =5
                    PaddingTop: =5
                    PressedColor: =RGBA(51, 51, 51, 1)
                    PressedFill: =RGBA(0, 0, 0, 0)
                    RadioBorderColor: =RGBA(51, 51, 51, 1)
                    RadioSelectionFill: =RGBA(0, 120, 212, 1)
                    RadioSize: =25
                    Size: =10
                    Width: =300
                    X: =ddlNodeApprovalType_2.X + ddlNodeApprovalType_2.Width
                    Y: =ddlNodeApprovalType_2.Y
                    ZIndex: =7

                btnAddUser_2 As button:
                    BorderColor: =RGBA(128, 128, 128, 1)
                    BorderThickness: =1
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    DisplayMode: =If((cboApproverUsers_2.Visible && CountRows(cboApproverUsers_2.SelectedItems) > 0) || ddlApproverDynamic_2.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    Fill: =RGBA(255, 255, 255, 1)
                    FocusedBorderColor: =ColorFade(Self.Fill, -75%)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    HoverBorderColor: =Self.BorderColor
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(243, 242, 241, 1)
                    OnSelect: |-
                        =//TODO: Cloud flow to force sync user on a daily added new user in the approver table
                        
                        //add users into _nodeApprovers collection - we will use this to relate approvers to this node
                        If(radApproverType_2.Selected.Value = 'Business Approver Type'.User,
                            ForAll(cboApproverUsers_2.SelectedItems As Approver,
                                //for user type, check if approver id already exist in approver table
                                If(IsBlank(LookUp(_nodeApprovers, 'Approver Id' = Approver.UserPrincipalName)),
                                    //add user to collection if does not exist
                                    Patch(_nodeApprovers, Defaults(_nodeApprovers),
                                    {
                                        'Approver Id': Approver.UserPrincipalName,
                                        Name: Approver.DisplayName,
                                        'Approver Type': 'Business Approver Type'.User
                                    })
                                )
                            );
                            Reset(cboApproverUsers_2),
                            
                            //for dynamic type, check approver id and request data
                            With({ id: 
                                If(ddlRequestDataField_2.Visible, //request data is referenced
                                    ddlRequestDataField_2.Selected.'Business Approval Data' & "@") & ddlApproverDynamic_2.Selected.Value },
                                Patch(_nodeApprovers, Defaults(_nodeApprovers),
                                { 
                                    'Approver Id': id, 
                                    Name: 
                                        Switch(ddlApproverDynamic_2.Selected.Value,
                                            'Business Approval Dynamic Approver Type'.'Manager of [Request data field]',
                                            "Manager of " & ddlRequestDataField_2.Selected.Name,
                                            'Business Approval Dynamic Approver Type'.'Use Request Data Field',
                                            ddlRequestDataField_2.Selected.Name, ddlApproverDynamic_2.Selected.Value
                                        ), 
                                    'Approver Type': 'Business Approver Type'.Dynamic,
                                    'Request Data': If(ddlRequestDataField_2.Visible, ddlRequestDataField_2.Selected, Blank()),
                                    'Dynamic Approver Type': ddlApproverDynamic_2.Selected.Value
                                })    
                            )
                        )
                    PressedBorderColor: =Self.BorderColor
                    PressedColor: =Self.Color
                    PressedFill: =Self.HoverFill
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10
                    Text: ="Add"
                    Width: =105
                    X: =ddlNodeApprovalType_2.X
                    Y: =ddlRequestDataField_2.Y + ddlRequestDataField_2.Height + 10
                    ZIndex: =8

                cboApproverUsers_2 As combobox:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    DisplayFields: =["DisplayName","JobTitle"]
                    Font: =Font.'Segoe UI'
                    Height: =30
                    HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    HoverColor: =RGBA(51, 51, 51, 1)
                    HoverFill: =RGBA(212, 212, 212, 1)
                    InputTextPlaceholder: ="Find user(s)"
                    IsSearchable: =false
                    Items: |-
                        =Office365Users.SearchUser({ searchTerm: Self.SearchText })
                    PressedBorderColor: =Self.BorderColor
                    PressedColor: =RGBA(0, 0, 0, 1)
                    PressedFill: =RGBA(243, 242, 241, 1)
                    SearchFields: =["DisplayName"]
                    SearchItems: =[]
                    SelectionColor: =Self.HoverColor
                    SelectionFill: =Self.HoverFill
                    Size: =10
                    Template: =ListItemTemplate.Double
                    Visible: =radApproverType_2.Selected.Value = 'Business Approver Type'.User
                    Width: =ddlNodeApprovalType_2.Width
                    X: =ddlNodeApprovalType_2.X
                    Y: =lblNodeApprover_2.Y
                    ZIndex: =9

                ddlApproverDynamic_2 As dropdown:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =cboApproverUsers_2.Height
                    HoverBorderColor: =Self.BorderColor
                    HoverColor: =RGBA(51, 51, 51, 1)
                    HoverFill: =RGBA(243, 242, 241, 1)
                    Items: =Choices('Business Approval Dynamic Approver Type')
                    PaddingBottom: =5
                    PaddingLeft: =8
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =Self.HoverFill
                    SelectionColor: =RGBA(0, 0, 0, 1)
                    SelectionFill: =RGBA(243, 242, 241, 1)
                    Size: =10
                    Visible: =radApproverType_2.Selected.Value = 'Business Approver Type'.Dynamic
                    Width: =cboApproverUsers_2.Width
                    X: =cboApproverUsers_2.X
                    Y: =cboApproverUsers_2.Y
                    ZIndex: =10

                Container2_2 As groupContainer:
                    Height: =Parent.Height - Self.Y
                    Visible: =CountRows(galApprovers_2.AllItems) > 0
                    Width: =Parent.Width
                    Y: =galApprovers_2.Y + galApprovers_2.Height
                    ZIndex: =11

                    lblDelegationRule_2 As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =RGBA(51, 51, 51, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        FocusedBorderThickness: =4
                        Font: =Font.'Segoe UI'
                        Height: =30
                        PaddingLeft: =12
                        Size: =10
                        Text: ="Delegation Rule"
                        Width: =lblNodeApprovalType_2.Width
                        X: =lblNodeApprovalType_2.X
                        Y: =lblNotificationType_2.Y + lblNotificationType_2.Height + 5
                        ZIndex: =1

                    ddlDelegationRule_2 As dropdown:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        BorderThickness: =1
                        ChevronBackground: =RGBA(255, 255, 255, 1)
                        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                        ChevronFill: =RGBA(33, 33, 33, 1)
                        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                        ChevronHoverFill: =RGBA(33, 33, 33, 1)
                        Color: =RGBA(51, 51, 51, 1)
                        Default: =_selectedNode.'Delegation Rule'
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        DisabledFill: =RGBA(244, 244, 244, 1)
                        FocusedBorderThickness: =2
                        Font: =Font.'Segoe UI'
                        Height: =30
                        HoverBorderColor: =Self.BorderColor
                        HoverColor: =RGBA(51, 51, 51, 1)
                        HoverFill: =RGBA(212, 212, 212, 1)
                        Items: =Choices('Business Approval Delegation Rule')
                        PaddingBottom: =5
                        PaddingLeft: =5
                        PaddingRight: =5
                        PaddingTop: =5
                        PressedBorderColor: =Self.BorderColor
                        PressedFill: =Self.HoverFill
                        SelectionColor: =RGBA(0, 0, 0, 1)
                        SelectionFill: =RGBA(243, 242, 241, 1)
                        Size: =10
                        Width: =ddlNodeApprovalType_2.Width
                        X: =radNodeType_4.X
                        Y: =lblDelegationRule_2.Y
                        ZIndex: =2

                    lblTimeOut_2 As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =RGBA(51, 51, 51, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        FocusedBorderThickness: =4
                        Font: =Font.'Segoe UI'
                        Height: =30
                        PaddingLeft: =12
                        Size: =10
                        Text: ="Time Out Setting"
                        Visible: =StartsWith(ddlDelegationRule_2.Selected.Value, "Time-out")
                        Width: =lblNodeApprovalType_2.Width
                        X: =lblNodeApprovalType_2.X
                        Y: =lblDelegationRuleDescription_2.Y + lblDelegationRuleDescription_2.Height+ 10
                        ZIndex: =3

                    txtTimeout_2 As text:
                        Align: =Align.Right
                        BorderColor: =RGBA(166, 166, 166, 1)
                        Color: =RGBA(51, 51, 51, 1)
                        Default: =Coalesce(_selectedNode.'Time Out', 3)
                        DelayOutput: =true
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        DisabledFill: =RGBA(244, 244, 244, 1)
                        FocusedBorderThickness: =4
                        Font: =Font.'Segoe UI'
                        Format: =TextFormat.Number
                        Height: =30
                        HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        HoverColor: =RGBA(51, 51, 51, 1)
                        HoverFill: =RGBA(255, 255, 255, 1)
                        OnChange: =
                        PaddingLeft: =5
                        PressedBorderColor: =RGBA(0, 120, 212, 1)
                        PressedColor: =RGBA(51, 51, 51, 1)
                        PressedFill: =RGBA(255, 255, 255, 1)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10
                        Visible: =lblTimeOut_2.Visible
                        Width: =30
                        X: =ddlDelegationRule_2.X
                        Y: =lblTimeOut_2.Y
                        ZIndex: =4

                    ddlTimeOutRule_2 As dropdown:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        BorderThickness: =1
                        ChevronBackground: =RGBA(255, 255, 255, 1)
                        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                        ChevronFill: =RGBA(33, 33, 33, 1)
                        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                        ChevronHoverFill: =RGBA(33, 33, 33, 1)
                        Color: =RGBA(51, 51, 51, 1)
                        Default: =_selectedNode.'Time Out Mode'
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        DisabledFill: =RGBA(244, 244, 244, 1)
                        FocusedBorderThickness: =2
                        Font: =Font.'Segoe UI'
                        Height: =30
                        HoverBorderColor: =Self.BorderColor
                        HoverColor: =RGBA(51, 51, 51, 1)
                        HoverFill: =RGBA(212, 212, 212, 1)
                        Items: =Choices('Business Approval Time Out Mode')
                        PaddingBottom: =5
                        PaddingLeft: =5
                        PaddingRight: =5
                        PaddingTop: =5
                        PressedBorderColor: =Self.BorderColor
                        PressedFill: =Self.HoverFill
                        SelectionColor: =RGBA(0, 0, 0, 1)
                        SelectionFill: =RGBA(243, 242, 241, 1)
                        Size: =10
                        Visible: =lblTimeOut_2.Visible
                        Width: =ddlDelegationRule_2.Width - txtTimeout_2.Width - 5
                        X: =txtTimeout_2.X + txtTimeout_2.Width + 5
                        Y: =txtTimeout_2.Y
                        ZIndex: =5

                    lblDelegationRuleDescription_2 As label:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =RGBA(51, 51, 51, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        FocusedBorderThickness: =4
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Lighter
                        PaddingLeft: =12
                        Size: =10
                        Text: |-
                            ="Delegate is configured as an Approver setting. If no delegate is configured, delegation rules will be ignored for the approver. 
                            Time Out: Delegation will be triggered upon a specified time period. Out of office: Delegation will be triggered if the approver is out of office at the time the approval is received."
                        Width: =Parent.Width - Self.X - 10
                        X: =lblDelegationRule_2.X
                        Y: =lblDelegationRule_2.Y + lblDelegationRule_2.Height + 20
                        ZIndex: =6

                    lblTimeOutDescription_2 As label:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =RGBA(51, 51, 51, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        FocusedBorderThickness: =4
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Lighter
                        PaddingLeft: =12
                        Size: =10
                        Text: ="Business Days  will use the Approver's Work Profile and Holiday settings."
                        Visible: =lblTimeOut_2.Visible
                        Width: =Parent.Width - Self.X - 10
                        X: =lblTimeOut_2.X
                        Y: =lblTimeOut_2.Y + lblTimeOut_2.Height + 2
                        ZIndex: =7

                    lblNotificationType_2 As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =RGBA(51, 51, 51, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        FocusedBorderThickness: =4
                        Font: =Font.'Segoe UI'
                        Height: =30
                        PaddingLeft: =12
                        Size: =10
                        Text: ="Notification"
                        Width: =lblNodeApprovalType_2.Width
                        X: =lblNodeApprovalType_2.X
                        Y: =5
                        ZIndex: =8

                    ddlNotificationType_2 As dropdown:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        BorderThickness: =1
                        ChevronBackground: =RGBA(255, 255, 255, 1)
                        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                        ChevronFill: =RGBA(33, 33, 33, 1)
                        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                        ChevronHoverFill: =RGBA(33, 33, 33, 1)
                        Color: =RGBA(51, 51, 51, 1)
                        Default: =_selectedNode.'Notification Type'
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        DisabledFill: =RGBA(244, 244, 244, 1)
                        FocusedBorderThickness: =2
                        Font: =Font.'Segoe UI'
                        Height: =30
                        HoverBorderColor: =Self.BorderColor
                        HoverColor: =RGBA(51, 51, 51, 1)
                        HoverFill: =RGBA(212, 212, 212, 1)
                        Items: =Choices('Business Approval Notification Type')
                        PaddingBottom: =5
                        PaddingLeft: =5
                        PaddingRight: =5
                        PaddingTop: =5
                        PressedBorderColor: =Self.BorderColor
                        PressedFill: =Self.HoverFill
                        SelectionColor: =RGBA(0, 0, 0, 1)
                        SelectionFill: =RGBA(243, 242, 241, 1)
                        Size: =10
                        Width: =ddlNodeApprovalType_2.Width
                        X: =radNodeType_4.X
                        Y: =lblNotificationType_2.Y
                        ZIndex: =9

                ddlRequestDataField_2 As dropdown:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =If(Self.Visible, cboApproverUsers_2.Height, 0)
                    HoverBorderColor: =Self.BorderColor
                    HoverColor: =RGBA(51, 51, 51, 1)
                    HoverFill: =RGBA(243, 242, 241, 1)
                    Items: |-
                        =Filter(
                            Filter('Business Approval Data', 'Business Approval Data (Views)'.'Approval Data User Fields'),
                            Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                        )
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =Self.HoverFill
                    SelectionColor: =RGBA(0, 0, 0, 1)
                    SelectionFill: =RGBA(243, 242, 241, 1)
                    Size: =10
                    Visible: |-
                        =With({ selectedDynamicApprover: ddlApproverDynamic_2.Selected.Value}, 
                            If(selectedDynamicApprover in [
                                'Business Approval Dynamic Approver Type'.'Use Request Data Field',
                                'Business Approval Dynamic Approver Type'.'Manager of [Request data field]'
                            ], ddlApproverDynamic_2.Visible, false)
                        )
                    Width: =cboApproverUsers_2.Width
                    X: =cboApproverUsers_2.X
                    Y: =ddlApproverDynamic_2.Y + ddlApproverDynamic_2.Height + 5
                    ZIndex: =12

                lblNoRequestData_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Fill: =RGBA(255, 255, 255, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =ddlRequestDataField_2.Height
                    Size: =8
                    Text: ="No request data field of type Email is available for this process."
                    Visible: =!ddlRequestDataField_2.Visible
                    Width: =ddlRequestDataField_2.Width
                    X: =ddlRequestDataField_2.X
                    Y: =ddlRequestDataField_2.Y
                    ZIndex: =13

                galApprovers_2 As gallery.galleryHorizontal:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =0
                    Height: =50
                    Items: =_nodeApprovers
                    ShowNavigation: =true
                    ShowScrollbar: =false
                    TemplateSize: =150
                    Width: =Parent.Width - Self.X - 50
                    X: =btnAddUser_2.X
                    Y: =btnAddUser_2.Y + btnAddUser_2.Height + 10
                    ZIndex: =14

                    Rectangle2_4 As rectangle:
                        BorderColor: =RGBA(128, 128, 128, 1)
                        BorderThickness: =1
                        DisabledFill: =RGBA(166, 166, 166, 1)
                        DisplayMode: =DisplayMode.View
                        Fill: =RGBA(230, 230, 230, 1)
                        FocusedBorderThickness: =4
                        Height: =Parent.TemplateHeight - 2
                        OnSelect: =Select(Parent)
                        PressedFill: =RGBA(0, 120, 212, 1)
                        Width: =Parent.TemplateWidth
                        Y: =2
                        ZIndex: =1

                    Icon5_3 As icon.Person:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        Color: =RGBA(0, 120, 212, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(220, 220, 220, 1)
                        DisabledFill: =RGBA(0, 0, 0, 0)
                        FocusedBorderThickness: =4
                        Height: =Image4_4.Height
                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                        HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        HoverFill: =RGBA(0, 0, 0, 0)
                        Icon: =Icon.Person
                        OnSelect: =Select(Parent)
                        PaddingBottom: =5
                        PaddingLeft: =5
                        PaddingRight: =5
                        PaddingTop: =5
                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        PressedFill: =RGBA(0, 0, 0, 0)
                        Width: =Image4_4.Width
                        X: =Image4_4.X
                        Y: =Image4_4.Y
                        ZIndex: =2

                    Image4_4 As image:
                        BorderThickness: =1
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledFill: =RGBA(0, 0, 0, 0)
                        FocusedBorderThickness: =4
                        Height: =30
                        HoverBorderColor: =Self.BorderColor
                        HoverFill: =RGBA(0, 0, 0, 0)
                        Image: =If(!IsBlank(ThisItem.'Approver Id') && ThisItem.'Approver Type' = 'Business Approver Type'.User, Office365Users.UserPhotoV2(ThisItem.'Approver Id'))
                        OnSelect: =Select(Parent)
                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                        PressedFill: =RGBA(0, 0, 0, 0)
                        RadiusBottomLeft: =30
                        RadiusBottomRight: =30
                        RadiusTopLeft: =30
                        RadiusTopRight: =30
                        Width: =30
                        X: =2
                        Y: =Parent.TemplateHeight / 2 - Self.Height / 2 + 1
                        ZIndex: =3

                    Separator1_3 As rectangle:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        Fill: =RGBA(166, 166, 166, 1)
                        Height: =1
                        OnSelect: =Select(Parent)
                        Visible: =false
                        Width: =Parent.TemplateWidth
                        Y: =Parent.TemplateHeight - 1
                        ZIndex: =5

                    lblApproverName_2 As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =RGBA(51, 51, 51, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        FocusedBorderThickness: =4
                        Font: =Font.'Segoe UI'
                        Height: =Rectangle2_4.Height
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =9
                        Text: =ThisItem.Name
                        Tooltip: =ThisItem.'Approver Id'
                        Width: =icoRemoveApprover_2.X - Self.X
                        X: =Image4_4.X + Image4_4.Width + 5
                        Y: =2
                        ZIndex: =6

                    icoRemoveApprover_2 As icon.Cancel:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(220, 220, 220, 1)
                        DisabledFill: =RGBA(0, 0, 0, 0)
                        FocusedBorderThickness: =4
                        Height: =20
                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                        HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        HoverFill: =RGBA(0, 0, 0, 0)
                        Icon: =Icon.Cancel
                        OnSelect: |-
                            =If(!IsBlank(ThisItem.'Business Approver'), Collect(_removedApprovers, ThisItem.'Business Approver'));
                            Remove(_nodeApprovers, ThisItem)
                        PaddingBottom: =5
                        PaddingLeft: =5
                        PaddingRight: =5
                        PaddingTop: =5
                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        PressedFill: =RGBA(0, 0, 0, 0)
                        Width: =20
                        X: =Parent.TemplateWidth - Self.Width
                        Y: =5
                        ZIndex: =7

            PanelFooter_1 As groupContainer.horizontalAutoLayoutContainer:
                Height: =35
                LayoutGap: =8
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =10
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Width: =Parent.Width
                X: =Parent.X
                Y: =Parent.Height - Self.Height
                ZIndex: =10

                btnSaveNode As Button:
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =0
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |-
                        =//if not Delete    
                        UpdateContext({busyMessage: "Saving node - " & txtNodeName_4.Text});
                        Set(
                            _isBusy,
                            true
                        );
                        Set(
                            _selectedNode,
                            Patch(
                                'Business Approval Nodes',
                                Coalesce(
                                    _selectedNode,
                                    Defaults('Business Approval Nodes')
                                ),
                                {
                                    Name: txtNodeName_4.Text,
                                    Description: txtNodeDesc_4.Text,
                                    Stage: _selectedStage,
                                    Process: _selectedProcess,
                                    'Approval Type': ddlNodeApprovalType_2.Selected.Value,
                                    'Notification Type': ddlNotificationType_2.Selected.Value,
                                    'Delegation Rule': ddlDelegationRule_2.Selected.Value,
                                    'Time Out': If(
                                        txtTimeout_2.Visible,
                                        Value(txtTimeout_2.Text),
                                        Blank()
                                    ),
                                    'Time Out Mode': If(
                                        ddlTimeOutRule_2.Visible,
                                        ddlTimeOutRule_2.Selected.Value,
                                        Blank()
                                    ),
                                    'Node Type': radNodeType_4.Selected.Value,
                                    'Path Index': _currentPathIndex,
                                    'Row Index': _currentNodeIndex,
                                    'Custom Responses': If(
                                        txtCustomResponses_2.Visible,
                                        txtCustomResponses_2.Text,
                                        Blank()
                                    ),
                                    Approvers: Concat(
                                        _nodeApprovers,
                                        Name,
                                        ", "
                                    )
                                }
                            )
                        );
                                //increment node index for any nodes after this node in this path, if exists
                        UpdateIf(
                            'Business Approval Nodes',
                            'Path Index' = _selectedNode.'Path Index' && 'Row Index' >= _selectedNode.'Row Index' && ThisRecord.'Business Approval Node' <> _selectedNode.'Business Approval Node' && Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage',
                            {'Row Index': ThisRecord.'Row Index' + 1}
                        );
                        If(
                            CountRows(_nodeApprovers) > 0 || CountRows(_removedApprovers) > 0,
                            Concurrent(
                                        //unrelate removed approvers
                                Trace(
                                    "_removedApprovers count: " & CountRows(_removedApprovers),
                                    TraceSeverity.Information
                                );
                                ForAll(
                                    _removedApprovers As appr,
                                    Unrelate(
                                        _selectedNode.'Business Approvers',
                                        LookUp(
                                            'Business Approvers',
                                            'Business Approver' = appr.Value
                                        )
                                    )
                                );
                                Clear(_removedApprovers),
                                        //add newly added approvers to approver table if does not exist, otherwise update and then relate to selected node
                                With(
                                    {
                                        addedApprovers: Filter(
                                            _nodeApprovers,
                                            IsBlank('Business Approver')
                                        )
                                    },
                                    Trace(
                                        "newly added approvers count: " & CountRows(addedApprovers),
                                        TraceSeverity.Information
                                    );
                                    ForAll(
                                        addedApprovers As appr,
                                        Relate(
                                            _selectedNode.'Business Approvers',
                                            Patch(
                                                'Business Approvers',
                                                Coalesce(
                                                    LookUp(
                                                        'Business Approvers',
                                                        'Approver Id' = appr.'Approver Id'
                                                    ),
                                                    Defaults('Business Approvers')
                                                ),
                                                {
                                                    Name: If(
                                                        appr.'Dynamic Approver Type' = 'Business Approval Dynamic Approver Type'.'Manager of [Request data field]',
                                                        "Manager of " & appr.'Request Data'.Name,
                                                        appr.'Dynamic Approver Type' = 'Business Approval Dynamic Approver Type'.'Use Request Data Field',
                                                        appr.'Request Data'.Name,
                                                        appr.Name
                                                    ),
                                                    'Approver Id': appr.'Approver Id',
                                                    'Approver Type': appr.'Approver Type',
                                                    'Dynamic Approver Type': appr.'Dynamic Approver Type',
                                                    'Request Data': appr.'Request Data'
                                                }
                                            )
                                        )
                                    )
                                )
                            );
                                    //refresh selected node reference
                        Refresh('Business Approval Nodes');
                            Set(
                                _selectedNode,
                                LookUp(
                                    'Business Approval Nodes',
                                    'Business Approval Node' = _selectedNode.'Business Approval Node'
                                )
                            )
                        );
                        Set(
                            _isBusy,
                            false
                        );
                        UpdateContext(
                            {
                                isPanelOpen: false,
                                showNodeContainer: false,
                                isPanelVisible: false
                            }
                        );
                        If(ToggleModernDesigner.Checked,Set(varRefreshDesigner,"Refresh"&Rand()));
                        Reset(txtNodeName_4);
                        Reset(txtNodeDesc_4);
                        Reset(radNodeType_4);
                        Reset(ddlNotificationType_2);
                        Reset(ddlDelegationRule_2);
                        Reset(cboApproverUsers_2);
                        Reset(ddlNodeApprovalType_2);
                        Reset(galApprovers_2);
                        Refresh('Business Approval Stages');
                        Refresh('Business Approval Nodes');
                    Text: ="Save"
                    Width: =96
                    X: =0
                    Y: =669
                    ZIndex: =1

                btnCancelNode As Button:
                    Appearance: ='ButtonCanvas.Appearance'.Secondary
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =0
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |
                        =UpdateContext(
                            {
                                isPanelOpen: false,
                                showNodeContainer: false,
                                isPanelVisible:false
                            }
                        );
                        
                        Reset(txtNodeName_4);
                        Reset(txtNodeDesc_4);
                        Reset(radNodeType_4);
                        Reset(ddlNotificationType_2);
                        Reset(ddlDelegationRule_2);
                        Reset(cboApproverUsers_2);
                        Reset(ddlNodeApprovalType_2);
                        Reset(galApprovers_2);
                    Text: ="Cancel"
                    Width: =96
                    X: =113
                    Y: =669
                    ZIndex: =2

            ConfirmDialog_11 As ConfirmDialog:
                ConfirmText: ="Deleting node - " & _selectedNode.Name & ". This cannot be undone. Are you sure?"
                Height: =Parent.Height
                OnClick: |-
                    =If(IsConfirmed,
                        UpdateContext({ busyMessage: "Deleting node - " & _selectedNode.Name });
                        Set(_isBusy, true);
                    
                        Concurrent(
                            //update other nodes after this node on the same path to move up by 1 position
                            UpdateIf('Business Approval Nodes', 
                                    Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage' && 
                                    'Path Index' = _currentPathIndex && 'Row Index' > _currentNodeIndex,
                                    { 'Row Index': 'Row Index' - 1}            
                            );
                            //remove the node 
                            Remove('Business Approval Nodes', _selectedNode),
                    
                            //remove any conditions
                            RemoveIf('Business Approval Conditions', Node.'Business Approval Node' = _selectedNode.'Business Approval Node')
                        );
                    
                        Set(_selectedNode, Blank());
                        Set(_isBusy, false);
                        Set(_showConfirm, false);
                        Back(),
                        Set(_showConfirm, false)
                    )
                Visible: =false
                Width: =Parent.Width
                ZIndex: =11

            BusyScreen_11 As BusyScreen:
                BusyMessage: =busyMessage
                Fill: =RGBA(255, 255, 255, 0.8)
                Height: =Parent.Height
                Visible: =false
                Width: =Parent.Width
                ZIndex: =12

        NodeRuleEditorContainer As groupContainer:
            Height: =Parent.Height - Self.Y
            Visible: =showNodeRuleEditorContainer
            Width: =Parent.Width - Self.X
            ZIndex: =3

            "CommandBar2_14 As 'Fluent Command Bar (1.0.22)'.pcfdataset":
                DisplayMode: =DisplayMode.Edit
                Height: =40
                Items: |-
                    =Table(
                        {
                            ItemKey: "back",
                            ItemDisplayName: "Back",
                            ItemIconName: "NavigateBack"
                        },{
                            ItemKey: "save",
                            ItemDisplayName: "Save",
                            ItemIconName: "Save"
                        },{
                            ItemKey: "saveback",
                            ItemDisplayName: "Save & Back",
                            ItemIconName: "SaveAndClose"
                        },{
                            ItemKey: "message",
                            ItemDisplayName: "Message",
                            ItemIconName: "TextDocument"
                        },{
                            ItemKey: "delete",
                            ItemDisplayName: "Delete",
                            ItemIconName: "Delete"
                        }
                    )
                OnSelect: |-
                    =If(Self.Selected.ItemKey = "back",Back(),
                        If(Self.Selected.ItemKey = "delete",
                            Set(_showConfirm, true),
                            
                            UpdateContext({ busyMessage: "Saving node - " & txtNodeName_5.Text });
                            Set(_isBusy, true);
                    
                            //save rule-based node ("Go to Stage...")
                            Set(_selectedNode, Patch('Business Approval Nodes', Coalesce(_selectedNode, Defaults('Business Approval Nodes')),
                                {
                                    Name: txtNodeName_5.Text, Description: txtNodeDesc_5.Text, Stage: _selectedStage, Process: _selectedProcess,
                                    'Node Type': radNodeType_5.Selected.Value, 'Go To Stage': If(ddlGoToStageNone_2.Visible, ddlGoToStageNone_2.Selected, Blank()),
                                    'Node Condition': ddlNodeCondition_2.Selected.Value, 
                                    Operand: 
                                        If(ddlNodeOperand_2.Visible, ddlNodeOperand_2.Selected.Value, 
                                        ddlNodeCondition_2.Selected.Value = 'Business Approval Stage Condition'.Switch, 
                                        'Business Approval Condition Operand'.'Equals (=)',Blank()),
                                    'Source Data': If(ddlNodeSourceData_2.Visible && 
                                        ddlNodeConditionSource_2.Selected.Value = 'Business Approval Condition Source Data'.'Request Data', 
                                        ddlNodeSourceData_2.Selected, Blank()),
                                    'Source Data Type': If(ddlNodeConditionSource_2.Visible, ddlNodeConditionSource_2.Selected.Value, Blank()),
                                    'Go To Paths': radSwitchNodePaths_2.Selected.Value,
                                    'Path Index': _currentPathIndex, 'Row Index': _currentNodeIndex
                                })
                            );
                            
                            //remove any conditions that has been removed and clear the stack
                            RemoveIf('Business Approval Conditions', 'Business Approval Condition' in _removedConditions.ConditionId);
                    
                            //save conditions
                            Clear(_addedConditions);
                            If(CountRows(_conditions) > 0, UpdateContext({ busyMessage: "Updating Conditions..." }));
                            ForAll(_conditions As conds,
                                With({ conditionId: GUID(conds.ConditionId)},
                                    With({ condition:  LookUp('Business Approval Conditions', 'Business Approval Condition' = conditionId) },
                                        With({ addedCondition: 
                                            Patch('Business Approval Conditions', 
                                                Coalesce(condition, Defaults('Business Approval Conditions')),
                                                {
                                                    'Path Index': conds.Path, 'Condition Data Type': conds.Target, Process: _selectedProcess,
                                                    'Condition Data': 
                                                        If(conds.Target = 'Business Approval Condition Target Data'.'Request Data', conds.TargetData, Blank()),
                                                    'Condition Value': 
                                                        If(conds.Target = 'Business Approval Condition Target Data'.'Static value', conds.StaticValue, Blank()), 
                                                    Node: _selectedNode,
                                                    'Go To Stage': conds.TargetStage
                                                }
                                            )},
                                            If(IsBlank(condition), 
                                                //track newly added condition
                                                Collect(_addedConditions, { Id: addedCondition.'Business Approval Condition', Path: addedCondition.'Path Index'})
                                            )
                                        )
                                    )
                                )
                            );
                    
                            //update in memory Condition for any newly added Condition Guids
                            ForAll(_addedConditions As added, UpdateIf(_conditions, Path = added.Path, { ConditionId: added.Id }));
                    
                            //increment node index for any nodes after this node in this path, if exists
                            UpdateIf('Business Approval Nodes', 
                                'Path Index' = _selectedNode.'Path Index' && 'Row Index' >= _selectedNode.'Row Index' &&
                                ThisRecord.'Business Approval Node' <> _selectedNode.'Business Approval Node' &&
                                Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage', 
                                { 'Row Index': ThisRecord.'Row Index' + 1 }
                            );
                        
                            Set(_isBusy, false);
                            If(Self.Selected.ItemKey = "saveback", Navigate(scrWorkflowEditor))
                        )
                    );
                Theme: =AppThemeJson
                Visible: =false
                Width: =Parent.Width
                X: =0
                Y: =0
                ZIndex: =1

            bcProcessStage_8 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =30
                PaddingLeft: =0
                Size: =10
                Text: =_selectedProcess.Name & " > " & _selectedStage.Name & " > " & Coalesce(_selectedNode.Name, "(New node)")
                Visible: =false
                Width: =Parent.Width - Self.X - 20
                Wrap: =false
                X: =20
                Y: =CommandBar2_14.Y + CommandBar2_14.Height
                ZIndex: =2

            lblNodeType_5 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Node Type"
                Width: =120
                X: =bcProcessStage_8.X
                Y: =20
                ZIndex: =3

            radNodeType_5 As radio:
                BorderColor: =RGBA(51, 51, 51, 1)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                Default: =If(IsBlank(_selectedNode.'Node Type'),"Go to Stage",_selectedNode.'Node Type')
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisplayMode: =If(_currentNodeIndex > 0 && IsBlank(_selectedNode), DisplayMode.Edit, DisplayMode.Disabled)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =38
                HoverColor: =RGBA(51, 51, 51, 1)
                HoverFill: =RGBA(0, 0, 0, 0)
                Items: =Choices('Business Approval Node Type')
                Layout: =Layout.Horizontal
                OnChange: =
                OnSelect: |-
                    =If(Self.Selected.Value = 'Business Approval Node Type'.Approval, UpdateContext(
                        {
                            showNodeRuleEditorContainer: false,
                            showNodeContainer:true
                        }
                    ));
                PaddingBottom: =5
                PaddingTop: =5
                PressedColor: =RGBA(51, 51, 51, 1)
                PressedFill: =RGBA(0, 0, 0, 0)
                RadioBorderColor: =RGBA(51, 51, 51, 1)
                RadioSelectionFill: =RGBA(0, 120, 212, 1)
                RadioSize: =25
                Size: =10
                Width: =500
                X: =150
                Y: =lblNodeType_5.Y
                ZIndex: =4

            lblNodeNameCondition_2 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Name"
                Width: =120
                X: =bcProcessStage_8.X
                Y: =70
                ZIndex: =5

            txtNodeName_5 As text:
                BorderColor: =RGBA(166, 166, 166, 1)
                Clear: =true
                Color: =RGBA(51, 51, 51, 1)
                Default: =_selectedNode.Name
                DelayOutput: =true
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =30
                HoverBorderColor: =Self.BorderColor
                HoverColor: =RGBA(51, 51, 51, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                MaxLength: =100
                OnChange: =
                PaddingLeft: =5
                PressedBorderColor: =Self.BorderColor
                PressedColor: =RGBA(51, 51, 51, 1)
                PressedFill: =RGBA(255, 255, 255, 1)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Width: =(Parent.Width - Self.X) / 2
                X: =radNodeType_5.X
                Y: =lblNodeNameCondition_2.Y
                ZIndex: =6

            lblStageDesc_8 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Description"
                Width: =120
                X: =lblNodeNameCondition_2.X
                Y: =lblNodeNameCondition_2.Y + lblNodeNameCondition_2.Height + 5
                ZIndex: =7

            txtNodeDesc_5 As text:
                BorderColor: =RGBA(166, 166, 166, 1)
                Clear: =true
                Color: =RGBA(51, 51, 51, 1)
                Default: =_selectedNode.Description
                DelayOutput: =true
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =60
                HoverBorderColor: =Self.BorderColor
                HoverColor: =RGBA(51, 51, 51, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                MaxLength: =100
                Mode: =TextMode.MultiLine
                OnChange: =
                PaddingLeft: =5
                PressedBorderColor: =Self.BorderColor
                PressedColor: =RGBA(51, 51, 51, 1)
                PressedFill: =RGBA(255, 255, 255, 1)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Width: =(Parent.Width - Self.X) / 2
                X: =txtNodeName_5.X
                Y: =lblStageDesc_8.Y
                ZIndex: =8

            conNodeCondition_2 As groupContainer:
                Height: =Parent.Height - Self.Y
                Width: =Parent.Width
                Y: =txtNodeDesc_5.Y + txtNodeDesc_5.Height + 10
                ZIndex: =9

                lblNodeConditionHeader_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    PaddingLeft: =0
                    Size: =10
                    Text: ="Conditions"
                    Width: =txtNodeName_5.X - Self.X
                    Wrap: =false
                    X: =bcProcessStage_8.X
                    ZIndex: =1

                lblGoToStageNone_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =30
                    PaddingLeft: =12
                    Size: =10
                    Text: ="Go to Stage"
                    Visible: |-
                        =ddlNodeCondition_2.Selected.Value = 'Business Approval Stage Condition'.None || 
                        (
                            ddlNodeOperand_2.Visible && 
                            (
                                ddlNodeOperand_2.Selected.Value = 'Business Approval Condition Operand'.'Is Blank' || 
                                ddlNodeOperand_2.Selected.Value = 'Business Approval Condition Operand'.'Is Not Blank'
                            )
                        )
                    Width: =120
                    X: =lblNodeNameCondition_2.X
                    Y: =If(ddlNodeOperand_2.Visible, ddlNodeOperand_2.Y, lblNodeCondition_2.Y) + lblNodeCondition_2.Height + 10
                    ZIndex: =2

                ddlGoToStageNone_2 As dropdown:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =_selectedNode.'Go To Stage'.Name
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =30
                    HoverBorderColor: =Self.BorderColor
                    HoverFill: =RGBA(243, 242, 241, 1)
                    Items: =Filter('Business Approval Stages', Process.'Business Approval Process' = _selectedProcess.'Business Approval Process' && Order > _selectedStage.Order)
                    OnChange: =
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =Self.HoverFill
                    SelectionColor: =Self.Color
                    SelectionFill: =RGBA(243, 242, 241, 1)
                    Size: =10
                    Visible: =lblGoToStageNone_2.Visible
                    Width: =txtNodeName_5.Width
                    X: =txtNodeName_5.X
                    Y: =lblGoToStageNone_2.Y
                    ZIndex: =3

                lblNodeCondition_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =30
                    PaddingLeft: =12
                    Size: =10
                    Text: ="Condition"
                    Width: =120
                    X: =lblNodeNameCondition_2.X
                    Y: =lblNodeConditionHeader_2.Y + lblNodeConditionHeader_2.Height + 10
                    ZIndex: =4

                ddlNodeCondition_2 As dropdown:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =_selectedNode.'Node Condition'
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    DisplayMode: =If(allowUpdateConditionType, DisplayMode.Edit, DisplayMode.Disabled)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =30
                    HoverBorderColor: =Self.BorderColor
                    HoverFill: =RGBA(243, 242, 241, 1)
                    Items: =['Business Approval Stage Condition'.None, 'Business Approval Stage Condition'.'If/Else'] //Choices('Business Approval Stage Condition')
                    OnChange: |-
                        =UpdateContext({ conditionsCount: CountRows(_conditions)});
                        Switch(Self.Selected.Value,
                            'Business Approval Stage Condition'.'If/Else', 
                            //if there are existing conditions, remove all except the first condition
                            Collect(_removedConditions, 
                                ShowColumns(Filter(_conditions, Path > 1), "ConditionId", "Path", "Target", "TargetData", "StaticValue", "TargetStage")
                            );
                            RemoveIf(_conditions, Path > 1);
                            If(conditionsCount = 0, 
                                ClearCollect(_conditions,
                                { 
                                    ConditionId: "", Path: 1, Target: 'Business Approval Condition Target Data'.'Static value', 
                                    TargetData: Blank(), StaticValue: "", TargetStage: Defaults('Business Approval Stages')
                                })
                            );
                            Reset(radSwitchNodePaths_2),
                            
                            'Business Approval Stage Condition'.Switch, 
                            Collect(_conditions, 
                                ForAll(Sequence(radSwitchNodePaths_2.Selected.Value - conditionsCount, conditionsCount + 1), 
                                { 
                                    ConditionId: "", Path: Value, Target: 'Business Approval Condition Target Data'.'Static value', 
                                    TargetData: Blank(), StaticValue: "", TargetStage: Blank()
                                })
                            ),
                        
                            'Business Approval Stage Condition'.None, 
                            //if there are any existing conditions, add them to the remove list
                            If(conditionsCount > 0, 
                                Collect(_removedConditions, ShowColumns(_conditions,  "ConditionId", "Path", "Target", "TargetData", "StaticValue", "TargetStage"));    
                                Clear(_conditions)
                            )
                        );
                        Reset(ddlStageOperand)
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =Self.HoverFill
                    SelectionColor: =Self.Color
                    SelectionFill: =RGBA(243, 242, 241, 1)
                    Size: =10
                    Width: =txtNodeDesc_5.Width
                    X: =txtNodeName_5.X
                    Y: =lblNodeCondition_2.Y
                    ZIndex: =5

                imgWorkflowDiagram_5 As image:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =4
                    Height: =If(Self.Visible, 70, 0)
                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                    HoverFill: =RGBA(0, 0, 0, 0)
                    Image: |
                        ="data:image/svg+xml;utf8, " & 
                        Switch(radSwitchNodePaths_2.Selected.Value,
                            3, EncodeUrl("<svg width='657' height='382' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' overflow='hidden'><defs><clipPath id='clip0'><rect x='1718' y='254' width='657' height='382'/></clipPath></defs><g clip-path='url(#clip0)' transform='translate(-1718 -254)'><path d='M1911.5 324 2048.5 257.5 2185.5 324 2048.5 390.5Z' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='1720.5' y='516.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><rect x='1950.5' y='514.5' width='192' height='118' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M2048.52 390 2048.52 452.736 1816 452.736 1816 515.471' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><path d='M2048.01 390 2048.01 451.787 2046 451.787 2046 513.575' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='2181.5' y='514.5' width='191' height='118' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M0 0 61.7874 0 61.7874 228.498 123.575 228.498' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 2048 390)'/></g></svg>"),
                            4, EncodeUrl("<svg width='907' height='384' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' overflow='hidden'><defs><clipPath id='clip0'><rect x='551' y='760' width='907' height='384'/></clipPath></defs><g clip-path='url(#clip0)' transform='translate(-551 -760)'><path d='M870.5 830 1007.5 763.5 1144.5 830 1007.5 896.5Z' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='553.5' y='1024.5' width='192' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><rect x='790.5' y='1024.5' width='192' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M1006.71 896 1006.71 959.73 649 959.73 649 1023.46' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><path d='M1006.89 896 1006.89 959.729 886 959.729 886 1023.46' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='1027.5' y='1024.5' width='192' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><rect x='1264.5' y='1024.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M0 0 63.7293 0 63.7293 352.731 127.459 352.731' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 1007 896)'/><path d='M0 0 63.7293 0 63.7293 115.918 127.459 115.918' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 1007 896)'/></g></svg>"),
                            5, EncodeUrl("<svg width='1144' height='374' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' overflow='hidden'><defs><clipPath id='clip0'><rect x='1589' y='770' width='1144' height='374'/></clipPath></defs><g clip-path='url(#clip0)' transform='translate(-1589 -770)'><path d='M2024.5 840 2161 773.5 2297.5 840 2161 906.5Z' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='1591.5' y='1024.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><rect x='1828.5' y='1024.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M2160.14 906 2160.14 964.793 1686 964.793 1686 1023.59' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><path d='M2160.07 906 2160.07 964.793 1923 964.793 1923 1023.59' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='2065.5' y='1024.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><rect x='2302.5' y='1024.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M0 0 58.7933 0 58.7933 237.069 117.587 237.069' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 2161 906)'/><path d='M0 0 58.7933 0 58.7933 0.000360892 117.586 0.000360892' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 2161 906)'/><rect x='2539.5' y='1024.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M0 0 58.7934 0 58.7934 474.138 117.587 474.138' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 2161 906)'/></g></svg>"),
                            EncodeUrl("<svg width='522' height='386' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' overflow='hidden'><defs><clipPath id='clip0'><rect x='752' y='250' width='522' height='386'/></clipPath></defs><g clip-path='url(#clip0)' transform='translate(-752 -250)'><path d='M870.5 320.5 1007.5 253.5 1144.5 320.5 1007.5 387.5Z' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='754.5' y='516.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><rect x='1080.5' y='516.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M1007.36 387 1007.36 451.678 850 451.678 850 516.356' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><path d='M0 0 64.6777 0 64.6777 168.735 129.355 168.735' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 1007 387)'/></g></svg>"))
                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                    PressedFill: =RGBA(0, 0, 0, 0)
                    Visible: =ddlNodeCondition_2.Selected.Value <> 'Business Approval Stage Condition'.None
                    Width: =300
                    X: =radSwitchNodePaths_2.X
                    Y: =radSwitchNodePaths_2.Y + radSwitchNodePaths_2.Height + 2
                    ZIndex: =6

                radSwitchNodePaths_2 As radio:
                    BorderColor: =RGBA(51, 51, 51, 1)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =If(Self.Visible, _selectedNode.'Go To Paths')
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisplayMode: =ddlNodeCondition_2.DisplayMode
                    FocusedBorderThickness: =0
                    Font: =Font.'Segoe UI'
                    Height: =If(Self.Visible, 30, 0)
                    HoverColor: =RGBA(51, 51, 51, 1)
                    HoverFill: =RGBA(0, 0, 0, 0)
                    Items: =[ 2, 3, 4, 5]
                    Layout: =Layout.Horizontal
                    OnChange: |
                        =With({ count: CountRows(_conditions), newCount: radSwitchNodePaths_2.Selected.Value },
                            If(count > newCount, 
                                //new paths is less than current - remove last n conditions
                                //push paths that are to be removed into temp stack then remove
                                Collect(_removedConditions, 
                                    ShowColumns(Filter(_conditions, Path > newCount), "ConditionId", "Path", "Target", "TargetData", "StaticValue", "TargetStage")
                                );
                                RemoveIf(_conditions, Path > newCount),
                        
                                //new paths is more than current - add conditions
                                Collect(_conditions,
                                    ForAll(Sequence(newCount - count, count + 1),                 
                                        Coalesce(
                                            LookUp(_removedConditions, Path = Value),
                                            { 
                                                ConditionId: Blank(), TargetData: Blank(), StaticValue: "", TargetStage: Blank(),
                                                Path: Value, Text: "Path " & Value, Target: 'Business Approval Condition Target Data'.'Static value'
                                            }
                                        )
                                    )
                                );
                        
                                //pop from temp stack for any conditions that has been restored back
                                RemoveIf(_removedConditions, Path <= newCount);
                            )
                        );
                    PaddingBottom: =0
                    PaddingTop: =2
                    PressedColor: =RGBA(51, 51, 51, 1)
                    PressedFill: =RGBA(0, 0, 0, 0)
                    RadioBorderColor: =RGBA(51, 51, 51, 1)
                    RadioSelectionFill: =RGBA(0, 120, 212, 1)
                    RadioSize: =25
                    Size: =10
                    Visible: =lblSwitchPaths_5.Visible
                    Width: =ddlNodeCondition_2.Width - 200
                    X: =txtNodeName_5.X
                    Y: =lblSwitchPaths_5.Y
                    ZIndex: =7

                lblSwitchPaths_5 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =30
                    PaddingLeft: =12
                    Size: =10
                    Text: ="Paths"
                    Visible: =ddlNodeCondition_2.Selected.Value = 'Business Approval Stage Condition'.Switch
                    Width: =120
                    X: =lblNodeCondition_2.X
                    Y: =lblNodeCondition_2.Y + lblNodeCondition_2.Height + 10
                    ZIndex: =8

                lblNodeConditionSource_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =30
                    PaddingLeft: =12
                    Size: =10
                    Text: ="Source"
                    Visible: =ddlNodeCondition_2.Selected.Value <> 'Business Approval Stage Condition'.None && ddlNodeCondition_2.Visible
                    Width: =120
                    X: =lblNodeNameCondition_2.X
                    Y: =imgWorkflowDiagram_5.Y + imgWorkflowDiagram_5.Height + 10
                    ZIndex: =9

                ddlNodeConditionSource_2 As dropdown:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =_selectedNode.'Source Data Type'
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =30
                    HoverBorderColor: =Self.BorderColor
                    HoverFill: =RGBA(243, 242, 241, 1)
                    Items: =Choices('Business Approval Condition Source Data')
                    OnChange: =Reset(ddlNodeOperand_2)
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =Self.HoverFill
                    SelectionColor: =Self.Color
                    SelectionFill: =RGBA(243, 242, 241, 1)
                    Size: =10
                    Visible: =lblNodeConditionSource_2.Visible
                    Width: =txtNodeName_5.Width
                    X: =ddlNodeCondition_2.X
                    Y: =lblNodeConditionSource_2.Y
                    ZIndex: =10

                lblRequestDataCondition_5 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =If(Self.Visible, 30, 0)
                    PaddingLeft: =12
                    Size: =10
                    Text: ="Request Data"
                    Visible: =ddlNodeConditionSource_2.Selected.Value = 'Business Approval Condition Source Data'.'Request Data' && ddlNodeConditionSource_2.Visible
                    Width: =120
                    X: =lblNodeNameCondition_2.X
                    Y: =lblNodeConditionSource_2.Y + lblNodeConditionSource_2.Height + If(Self.Visible, 10, 0)
                    ZIndex: =11

                ddlNodeSourceData_2 As dropdown:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =_selectedNode.'Source Data'.Name
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =lblRequestDataCondition_5.Height
                    HoverBorderColor: =Self.BorderColor
                    HoverFill: =RGBA(243, 242, 241, 1)
                    Items: |-
                        =Filter(
                            Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                            Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                        )
                    OnChange: |-
                        =UpdateIf(_conditions, true, { TargetData: Blank() }) //clear all target data value if exists
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =Self.HoverFill
                    SelectionColor: =Self.Color
                    SelectionFill: =RGBA(243, 242, 241, 1)
                    Size: =10
                    Visible: =lblRequestDataCondition_5.Visible
                    Width: =txtNodeName_5.Width
                    X: =ddlNodeCondition_2.X
                    Y: =lblRequestDataCondition_5.Y
                    ZIndex: =12

                lblNodeRequestDataIsEmpty_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(255, 0, 0, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Fill: =RGBA(255, 255, 255, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =ddlNodeSourceData_2.Height
                    Size: =10
                    Text: ="No request data available. Create new request data in the process edit screen."
                    Visible: |-
                        =IsEmpty(
                            Filter(
                                Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                                Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                            )
                        ) && ddlNodeConditionSource_2.Visible && 
                        ddlNodeConditionSource_2.Selected.Value = 'Business Approval Condition Source Data'.'Request Data'
                    Width: =ddlNodeSourceData_2.Width
                    X: =ddlNodeSourceData_2.X
                    Y: =ddlNodeSourceData_2.Y
                    ZIndex: =13

                galNodeConditions_2 As gallery.galleryVertical:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    Height: =150
                    Items: =SortByColumns(_conditions, "Path", SortOrder.Ascending)
                    Layout: =Layout.Vertical
                    TemplatePadding: =0
                    TemplateSize: =150
                    Visible: =CountRows(Self.AllItems) > 0 && ddlNodeOperand_2.Selected.Value <> 'Business Approval Condition Operand'.'Is Blank' && ddlNodeOperand_2.Selected.Value <> 'Business Approval Condition Operand'.'Is Not Blank'
                    Width: |-
                        =If(ddlNodeCondition_2.Selected.Value = 'Business Approval Stage Condition'.'If/Else',
                            txtNodeName_5.Width,
                            Parent.Width - Self.X - 20
                        )
                    WrapCount: =CountRows(Self.AllItems)
                    X: =If(ddlNodeCondition_2.Selected.Value = 'Business Approval Stage Condition'.'If/Else', txtNodeName_5.X, lblNodeNameCondition_2.X)
                    Y: =lblNodeOperand_2.Y + lblNodeOperand_2.Height + 10
                    ZIndex: =14

                    Rectangle3_5 As rectangle:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        DisplayMode: =DisplayMode.Disabled
                        Fill: =RGBA(230, 230, 230, 1)
                        FocusedBorderThickness: =4
                        Height: =Parent.TemplateHeight
                        HoverFill: =RGBA(105, 121, 126, 1)
                        OnSelect: =Select(Parent)
                        PressedFill: =RGBA(105, 121, 126, 1)
                        Width: =Parent.TemplateWidth - 2
                        ZIndex: =1

                    lblGoToStage_2 As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =RGBA(51, 51, 51, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        FocusedBorderThickness: =4
                        Font: =Font.'Segoe UI'
                        Height: =30
                        Size: =9
                        Text: ="Go to Stage"
                        Visible: =!lblNodeTargetRequestDataNotFound_2.Visible
                        Width: =80
                        X: =txtTargetStatic_5.X
                        Y: =txtTargetStatic_5.Y + txtTargetStatic_5.Height + 5
                        ZIndex: =2

                    ddlTargetStage_2 As dropdown:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        BorderThickness: =1
                        ChevronBackground: =RGBA(255, 255, 255, 1)
                        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                        ChevronFill: =RGBA(33, 33, 33, 1)
                        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                        ChevronHoverFill: =RGBA(33, 33, 33, 1)
                        Color: =RGBA(51, 51, 51, 1)
                        Default: =ThisItem.TargetStage.Name
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        DisabledFill: =RGBA(244, 244, 244, 1)
                        FocusedBorderThickness: =1
                        Font: =Font.'Segoe UI'
                        Height: =30
                        HoverBorderColor: =Self.BorderColor
                        HoverFill: =RGBA(243, 242, 241, 1)
                        Items: =Filter('Business Approval Stages', Process.'Business Approval Process' = _selectedProcess.'Business Approval Process' && Order > _selectedStage.Order)
                        OnChange: |-
                            =Patch(_conditions, ThisItem, { TargetStage: ddlTargetStage_2.Selected })
                        PaddingBottom: =5
                        PaddingLeft: =5
                        PaddingRight: =5
                        PaddingTop: =5
                        PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        PressedFill: =Self.HoverFill
                        SelectionColor: =Self.Color
                        SelectionFill: =RGBA(243, 242, 241, 1)
                        Size: =10
                        Visible: =!lblNodeTargetRequestDataNotFound_2.Visible
                        Width: =ddlConditionTarget_5.Width - lblGoToStage_2.Width
                        X: =lblGoToStage_2.X + lblGoToStage_2.Width
                        Y: =lblGoToStage_2.Y
                        ZIndex: =3

                    lblConditionTarget_8 As label:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =RGBA(51, 51, 51, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        FocusedBorderThickness: =4
                        Font: =Font.'Segoe UI'
                        Height: =30
                        PaddingLeft: =12
                        Size: =9
                        Text: |-
                            ="If " & 
                                If(ddlNodeSourceData_2.Visible, ddlNodeSourceData_2.Selected.Name, ddlNodeConditionSource_2.Selected.Value) & " " &
                                ddlNodeOperand_2.Selected.Value
                        Width: =Parent.TemplateWidth
                        X: =Parent.TemplateWidth / 2 - Self.Width / 2
                        Y: =5
                        ZIndex: =4

                    ddlConditionTarget_5 As dropdown:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        BorderThickness: =1
                        ChevronBackground: =RGBA(255, 255, 255, 1)
                        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                        ChevronFill: =RGBA(33, 33, 33, 1)
                        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                        ChevronHoverFill: =RGBA(33, 33, 33, 1)
                        Color: =RGBA(51, 51, 51, 1)
                        Default: =ThisItem.Target
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        DisabledFill: =RGBA(244, 244, 244, 1)
                        FocusedBorderThickness: =1
                        Font: =Font.'Segoe UI'
                        Height: =30
                        HoverBorderColor: =Self.BorderColor
                        HoverFill: =RGBA(243, 242, 241, 1)
                        Items: =Choices('Business Approval Condition Target Data')
                        OnChange: |
                            =If(Self.Selected.Value = 'Business Approval Condition Target Data'.'Request Data',
                                Patch(_conditions, ThisItem, 
                                    { Target: Self.Selected.Value, TargetData: ddlNodeTargetRequestData_2.Selected, TargetStage: ddlTargetStage_2.Selected, StaticValue: Blank() }
                                ),
                                Patch(_conditions, ThisItem,
                                    { Target: Self.Selected.Value, TargetData: Blank(), TargetStage: ddlTargetStage_2.Selected }
                                )
                            )
                        PaddingBottom: =5
                        PaddingLeft: =5
                        PaddingRight: =5
                        PaddingTop: =5
                        PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        PressedFill: =Self.HoverFill
                        SelectionColor: =Self.Color
                        SelectionFill: =RGBA(243, 242, 241, 1)
                        Size: =10
                        Width: =Min(txtNodeName_5.Width, Parent.TemplateWidth - 20)
                        X: =Parent.TemplateWidth / 2 - Self.Width / 2
                        Y: =lblConditionTarget_8.Y + lblConditionTarget_8.Height
                        ZIndex: =5

                    ddlNodeTargetRequestData_2 As dropdown:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        BorderThickness: =1
                        ChevronBackground: =RGBA(255, 255, 255, 1)
                        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                        ChevronFill: =RGBA(33, 33, 33, 1)
                        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                        ChevronHoverFill: =RGBA(33, 33, 33, 1)
                        Color: =RGBA(51, 51, 51, 1)
                        Default: =ThisItem.TargetData.Name
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        DisabledFill: =RGBA(244, 244, 244, 1)
                        FocusedBorderThickness: =1
                        Font: =Font.'Segoe UI'
                        Height: =If(Self.Visible, 30, 0)
                        HoverBorderColor: =Self.BorderColor
                        HoverFill: =RGBA(243, 242, 241, 1)
                        Items: |-
                            =Filter(
                                Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                                Process.'Business Approval Process' = _selectedProcess.'Business Approval Process' && 
                                'Business Approval Data' <> ddlNodeSourceData_2.Selected.'Business Approval Data' &&
                                'Data Type' = ddlNodeSourceData_2.Selected.'Data Type'
                            )
                        OnChange: |-
                            =Patch(_conditions, ThisItem, { TargetData: Self.Selected, StaticValue: Blank(), TargetStage: ddlTargetStage_2.Selected })
                        PaddingBottom: =5
                        PaddingLeft: =5
                        PaddingRight: =5
                        PaddingTop: =5
                        PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        PressedFill: =Self.HoverFill
                        SelectionColor: =Self.Color
                        SelectionFill: =RGBA(243, 242, 241, 1)
                        Size: =10
                        Visible: =ddlConditionTarget_5.Selected.Value = 'Business Approval Condition Target Data'.'Request Data'
                        Width: =ddlConditionTarget_5.Width
                        X: =ddlConditionTarget_5.X
                        Y: =ddlConditionTarget_5.Y + ddlConditionTarget_5.Height + 10
                        ZIndex: =6

                    lblNodeTargetRequestDataNotFound_2 As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =RGBA(51, 51, 51, 1)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        Fill: =RGBA(230, 230, 230, 1)
                        FocusedBorderThickness: =4
                        Font: =Font.'Segoe UI'
                        Height: =ddlNodeTargetRequestData_2.Height
                        OnSelect: =Select(Parent)
                        Size: =10
                        Text: ="No other data field found of similar data type for " & ddlNodeSourceData_2.Selected.Name & " (" & ddlNodeSourceData_2.Selected.'Data Type' & ")"
                        Visible: |-
                            =With({ conditionData: Filter(
                                Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                                Process.'Business Approval Process' = _selectedProcess.'Business Approval Process' && 
                                'Business Approval Data' <> ddlNodeSourceData_2.Selected.'Business Approval Data' &&
                                'Data Type' = ddlNodeSourceData_2.Selected.'Data Type'
                            )},
                                ddlNodeTargetRequestData_2.Visible && IsEmpty(conditionData)
                            )
                        Width: =ddlNodeTargetRequestData_2.Width
                        X: =ddlNodeTargetRequestData_2.X
                        Y: =ddlNodeTargetRequestData_2.Y
                        ZIndex: =7

                    txtTargetStatic_5 As text:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        Clear: =true
                        Color: =RGBA(51, 51, 51, 1)
                        Default: =ThisItem.StaticValue
                        DelayOutput: =true
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        DisabledFill: =RGBA(244, 244, 244, 1)
                        FocusedBorderThickness: =1
                        Font: =Font.'Segoe UI'
                        Format: =If(ddlNodeSourceData_2.Selected.'Data Type' = 'Business Approval Data Type'.Number, TextFormat.Number, TextFormat.Text)
                        Height: =30
                        HoverBorderColor: =Self.BorderColor
                        HoverColor: =RGBA(51, 51, 51, 1)
                        HoverFill: =RGBA(255, 255, 255, 1)
                        MaxLength: =100
                        OnChange: |-
                            =Patch(_conditions, ThisItem, { StaticValue: Self.Text, TargetData: Blank(), TargetStage: ddlTargetStage_2.Selected })
                        PaddingLeft: =5
                        PressedBorderColor: =Self.BorderColor
                        PressedColor: =RGBA(51, 51, 51, 1)
                        PressedFill: =RGBA(255, 255, 255, 1)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10
                        Visible: =!ddlNodeTargetRequestData_2.Visible
                        Width: =ddlConditionTarget_5.Width
                        X: =ddlConditionTarget_5.X
                        Y: =ddlConditionTarget_5.Y + ddlConditionTarget_5.Height + 10
                        ZIndex: =8

                lblNodeOperand_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =If(Self.Visible, 30, 0)
                    PaddingLeft: =12
                    Size: =10
                    Text: ="Operand"
                    Visible: =lblNodeConditionSource_2.Visible && ddlNodeCondition_2.Selected.Value = 'Business Approval Stage Condition'.'If/Else'
                    Width: =120
                    X: =lblNodeNameCondition_2.X
                    Y: =lblRequestDataCondition_5.Y + lblRequestDataCondition_5.Height + 10
                    ZIndex: =15

                ddlNodeOperand_2 As dropdown:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    Default: |-
                        =If(IsBlank(_selectedNode.Operand) || ddlNodeCondition_2.Selected.Value = 'Business Approval Stage Condition'.Switch || ddlNodeConditionSource_2.Selected.Value = 'Business Approval Condition Source Data'.'Previous Node Outcome',
                            'Business Approval Condition Operand'.'Equals (=)', 
                            _selectedNode.Operand
                        )
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    DisplayMode: |-
                        =If(
                            ddlNodeCondition_2.Selected.Value = 'Business Approval Stage Condition'.Switch ||
                            ddlNodeConditionSource_2.Selected.Value = 'Business Approval Condition Source Data'.'Previous Node Outcome' ||
                            lblNodeRequestDataIsEmpty_2.Visible, 
                            DisplayMode.Disabled, DisplayMode.Edit
                        )
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =If(Self.Visible, 30, 0)
                    HoverBorderColor: =Self.BorderColor
                    HoverFill: =RGBA(243, 242, 241, 1)
                    Items: |-
                        =If(ddlNodeConditionSource_2.Selected.Value = 'Business Approval Condition Source Data'.'Request Data',
                            LookUp(_operands, ddlNodeSourceData_2.Selected.'Data Type' in type).operands,
                                [ 'Business Approval Condition Operand'.'Equals (=)' ]
                        )
                    OnChange: |-
                        =If(Self.Selected.Value = 'Business Approval Condition Operand'.'Is Blank' || 
                        Self.Selected.Value = 'Business Approval Condition Operand'.'Is Not Blank', 
                            Patch(_conditions, First(_conditions), { StaticValue: ""})
                        )
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =Self.HoverFill
                    SelectionColor: =Self.Color
                    SelectionFill: =RGBA(243, 242, 241, 1)
                    Size: =10
                    Visible: =lblNodeOperand_2.Visible
                    Width: =txtNodeName_5.Width
                    X: =ddlNodeCondition_2.X
                    Y: =lblNodeOperand_2.Y
                    ZIndex: =16

                btnResetNodeConditions_2 As button:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    Fill: =RGBA(105, 121, 126, 1)
                    FocusedBorderColor: =ColorFade(Self.Fill, -75%)
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                    HoverColor: =RGBA(255, 255, 255, 1)
                    HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
                    OnSelect: |-
                        =If(Self.Text = "Edit",
                            //saves current condition in memory
                            ClearCollect(_savedConditions, _conditions);
                            UpdateContext({ allowUpdateConditionType: true, isCleared: true }),
                        
                            //restore saved conditions back from memory
                            ClearCollect(_conditions, _savedConditions);
                            Clear(_savedConditions);
                            Reset(ddlNodeCondition_2);
                            UpdateContext({ allowUpdateConditionType: false, isCleared: false })
                        )
                    PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
                    PressedColor: =RGBA(255, 255, 255, 1)
                    PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10
                    Text: =If(isCleared, "Reset", "Edit")
                    Visible: =(!allowUpdateConditionType || isCleared) && _currentNodeIndex > 1
                    Width: =90
                    X: =ddlNodeCondition_2.X + ddlNodeCondition_2.Width + 20
                    Y: =ddlNodeCondition_2.Y
                    ZIndex: =17

                lblResetConditions_5 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Lighter
                    Height: =30
                    PaddingLeft: =0
                    Size: =10
                    Text: ="Currently editing a node with Conditions defined. To change condition type, click 'Edit' to change existing definitions. You can 'Reset' to undo."
                    Visible: =btnResetNodeConditions_2.Visible
                    Width: =Parent.Width - Self.X - 20
                    X: =txtNodeName_5.X
                    Y: =lblNodeConditionHeader_2.Y
                    ZIndex: =18

            ConfirmDialog_12 As ConfirmDialog:
                ConfirmText: ="Deleting node - " & _selectedNode.Name & ". This cannot be undone. Are you sure?"
                Height: =Parent.Height
                OnClick: |-
                    =If(IsConfirmed,
                        UpdateContext({ busyMessage: "Deleting node - " & _selectedNode.Name });
                        Set(_isBusy, true);
                        
                        Concurrent(
                            //remove the node 
                            Remove('Business Approval Nodes', _selectedNode),
                    
                            //remove any conditions
                            RemoveIf('Business Approval Conditions', Node.'Business Approval Node' = _selectedNode.'Business Approval Node')
                        );
                        
                        Set(_selectedNode, Blank());
                        Set(_isBusy, false);
                        Set(_showConfirm, false);
                        Back(),
                        Set(_showConfirm, false)
                    )
                Visible: =_showConfirm
                Width: =Parent.Width
                ZIndex: =10

            BusyScreen_12 As BusyScreen:
                BusyMessage: =busyMessage
                Fill: =RGBA(255, 255, 255, 0.8)
                Height: =Parent.Height
                Visible: =_isBusy
                Width: =Parent.Width
                ZIndex: =11

            PanelFooter_2 As groupContainer.horizontalAutoLayoutContainer:
                Height: =35
                LayoutGap: =8
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =10
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Width: =Parent.Width
                X: =Parent.X
                Y: =Parent.Height - Self.Height
                ZIndex: =12

                btnSaveNode_1 As Button:
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =0
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |
                        =UpdateContext({busyMessage: "Saving node - " & txtNodeName_5.Text});
                        Set(
                            _isBusy,
                            true
                        );
                                //save rule-based node ("Go to Stage...")
                        Set(
                            _selectedNode,
                            Patch(
                                'Business Approval Nodes',
                                Coalesce(
                                    _selectedNode,
                                    Defaults('Business Approval Nodes')
                                ),
                                {
                                    Name: txtNodeName_5.Text,
                                    Description: txtNodeDesc_5.Text,
                                    Stage: _selectedStage,
                                    Process: _selectedProcess,
                                    'Node Type': radNodeType_5.Selected.Value,
                                    'Go To Stage': If(
                                        ddlGoToStageNone_2.Visible,
                                        ddlGoToStageNone_2.Selected,
                                        Blank()
                                    ),
                                    'Node Condition': ddlNodeCondition_2.Selected.Value,
                                    Operand: If(
                                        ddlNodeOperand_2.Visible,
                                        ddlNodeOperand_2.Selected.Value,
                                        ddlNodeCondition_2.Selected.Value = 'Business Approval Stage Condition'.Switch,
                                        'Business Approval Condition Operand'.'Equals (=)',
                                        Blank()
                                    ),
                                    'Source Data': If(
                                        ddlNodeSourceData_2.Visible && ddlNodeConditionSource_2.Selected.Value = 'Business Approval Condition Source Data'.'Request Data',
                                        ddlNodeSourceData_2.Selected,
                                        Blank()
                                    ),
                                    'Source Data Type': If(
                                        ddlNodeConditionSource_2.Visible,
                                        ddlNodeConditionSource_2.Selected.Value,
                                        Blank()
                                    ),
                                    'Go To Paths': radSwitchNodePaths_2.Selected.Value,
                                    'Path Index': _currentPathIndex,
                                    'Row Index': _currentNodeIndex
                                }
                            )
                        );
                                //remove any conditions that has been removed and clear the stack
                        RemoveIf(
                            'Business Approval Conditions',
                            'Business Approval Condition' in _removedConditions.ConditionId
                        );
                                //save conditions
                        Clear(_addedConditions);
                        If(
                            CountRows(_conditions) > 0,
                            UpdateContext({busyMessage: "Updating Conditions..."})
                        );
                        ForAll(
                            _conditions As conds,
                            With(
                                {conditionId: GUID(conds.ConditionId)},
                                With(
                                    {
                                        condition: LookUp(
                                            'Business Approval Conditions',
                                            'Business Approval Condition' = conditionId
                                        )
                                    },
                                    With(
                                        {
                                            addedCondition: Patch(
                                                'Business Approval Conditions',
                                                Coalesce(
                                                    condition,
                                                    Defaults('Business Approval Conditions')
                                                ),
                                                {
                                                    'Path Index': conds.Path,
                                                    'Condition Data Type': conds.Target,
                                                    Process: _selectedProcess,
                                                    'Condition Data': If(
                                                        conds.Target = 'Business Approval Condition Target Data'.'Request Data',
                                                        conds.TargetData,
                                                        Blank()
                                                    ),
                                                    'Condition Value': If(
                                                        conds.Target = 'Business Approval Condition Target Data'.'Static value',
                                                        conds.StaticValue,
                                                        Blank()
                                                    ),
                                                    Node: _selectedNode,
                                                    'Go To Stage': conds.TargetStage
                                                }
                                            )
                                        },
                                        If(
                                            IsBlank(condition),
                                                    //track newly added condition
                                            Collect(
                                                _addedConditions,
                                                {
                                                    Id: addedCondition.'Business Approval Condition',
                                                    Path: addedCondition.'Path Index'
                                                }
                                            )
                                        )
                                    )
                                )
                            )
                        );
                                //update in memory Condition for any newly added Condition Guids
                        ForAll(
                            _addedConditions As added,
                            UpdateIf(
                                _conditions,
                                Path = added.Path,
                                {ConditionId: added.Id}
                            )
                        );
                                //increment node index for any nodes after this node in this path, if exists
                        UpdateIf(
                            'Business Approval Nodes',
                            'Path Index' = _selectedNode.'Path Index' && 'Row Index' >= _selectedNode.'Row Index' && ThisRecord.'Business Approval Node' <> _selectedNode.'Business Approval Node' && Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage',
                            {'Row Index': ThisRecord.'Row Index' + 1}
                        );
                        Set(
                            _isBusy,
                            false
                        );
                        If(ToggleModernDesigner.Checked,Set(varRefreshDesigner,"Refresh"&Rand()));
                        Reset(radNodeType_5);
                        Reset(txtNodeName_5);
                        Reset(txtNodeDesc_5);
                        Reset(ddlNodeCondition_2);
                        Reset(ddlGoToStageNone_2);
                        Reset(galNodeConditions_2);
                        Reset(ddlNodeOperand_2);
                        Reset(ddlNodeSourceData_2);
                        Refresh('Business Approval Stages');
                        Refresh('Business Approval Nodes');
                    Text: ="Save"
                    Width: =96
                    X: =0
                    Y: =669
                    ZIndex: =1

                btnCancelNode_1 As Button:
                    Appearance: ='ButtonCanvas.Appearance'.Secondary
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =0
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |-
                        =UpdateContext(
                            {
                                isPanelOpen: false,
                                showNodeRuleEditorContainer: false,
                                isPanelVisible:false
                            }
                        );
                        
                        Reset(radNodeType_5);
                        Reset(txtNodeName_5);
                        Reset(txtNodeDesc_5);
                        Reset(ddlNodeCondition_2);
                        Reset(ddlGoToStageNone_2);
                        Reset(galNodeConditions_2);
                        Reset(ddlNodeOperand_2);
                        Reset(ddlNodeSourceData_2);
                    Text: ="Cancel"
                    Width: =96
                    X: =113
                    Y: =669
                    ZIndex: =2

        PublishProcessContainer As groupContainer:
            Height: =Parent.Height - Self.Y
            Visible: =showPublishProcessContainer
            Width: =Parent.Width - Self.X
            ZIndex: =4

            Gallery4_2 As gallery.galleryVertical:
                BorderColor: =RGBA(166, 166, 166, 1)
                DelayItemLoading: =true
                Height: =CountRows(Self.AllItems) * (Self.TemplateHeight + 2 * Self.TemplatePadding)
                Items: =_validationChecks
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplateSize: =40
                Width: =Parent.Width - Self.X
                Y: =Label6_5.Height
                ZIndex: =1

                Label5_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight
                    OnSelect: =Select(Parent)
                    PaddingLeft: =12
                    Size: =10
                    Text: =ThisItem.Check
                    Width: =Parent.Width / 2
                    X: =Image3_2.Width
                    ZIndex: =1

                Image3_2 As image:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =4
                    Height: =30
                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                    HoverFill: =RGBA(0, 0, 0, 0)
                    Image: ='25_black'
                    OnSelect: =Select(Parent)
                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                    PressedFill: =RGBA(0, 0, 0, 0)
                    Visible: =false//IsBlank(ThisItem.Status)
                    Width: =30
                    Y: =Parent.TemplateHeight / 2 - Self.Height / 2
                    ZIndex: =2

                Icon4_2 As icon.CheckBadge:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    Color: =If(Self.Icon = Icon.CheckBadge, Color.Green, Color.Red)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(220, 220, 220, 1)
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =4
                    Height: =30
                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                    HoverColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                    HoverFill: =RGBA(0, 0, 0, 0)
                    Icon: =If(ThisItem.Status, Icon.CheckBadge, Icon.CancelBadge)
                    OnSelect: =Select(Parent)
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                    PressedColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                    PressedFill: =RGBA(0, 0, 0, 0)
                    Visible: =!icoChecker.Visible
                    Width: =30
                    X: =Image3_2.X
                    Y: =Image3_2.Y
                    ZIndex: =3

                Rectangle4_4 As rectangle:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    DisabledFill: =RGBA(166, 166, 166, 1)
                    Fill: =RGBA(105, 121, 126, 1)
                    FocusedBorderThickness: =4
                    Height: =1
                    HoverFill: =RGBA(105, 121, 126, 1)
                    OnSelect: =Select(Parent)
                    PressedFill: =RGBA(105, 121, 126, 1)
                    Width: =Parent.TemplateWidth - 5
                    Y: =Parent.TemplateHeight - 1
                    ZIndex: =4

                icoChecker As Spinner:
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =0
                    Height: =28
                    SpinnerSize: ='Spinner.SpinnerSize'.Tiny
                    Visible: =IsBlank(ThisItem.Status)
                    Width: =28
                    X: =5
                    Y: =5
                    ZIndex: =5

            Label6_5 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Size: =10
                Text: ="Validating process - " & _selectedProcess.Name
                Visible: =false
                Width: =Parent.Width - Self.X
                X: =Image4_5.X + Image4_5.Width + 4
                ZIndex: =2

            btnPublish_2 As button:
                BorderColor: =RGBA(0, 0, 0, 0)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =If(isPublishReady && Sum(_validationChecks, Status) = 4, DisplayMode.Edit, DisplayMode.Disabled)
                Fill: =RGBA(105, 121, 126, 1)
                FocusedBorderColor: =ColorFade(Self.Fill, -75%)
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =30
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
                OnSelect: |
                    =With({ 
                        publishedVersions: 
                            SortByColumns(
                                Filter('Business Approval Versions', Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'),
                                "cat_version", SortOrder.Descending
                            )
                        },
                        UpdateContext({ lastPublished: First(publishedVersions) })
                    );
                    UpdateContext({ busyMessage: "Publishing Process " & _selectedProcess.Name, _isBusy: true });
                    
                    Patch(
                        'Business Approval Versions', 
                        Defaults('Business Approval Versions'), 
                        { 
                            Process: _selectedProcess, Name: _selectedProcess.Name,
                            Version: If(IsBlank(lastPublished), 1, lastPublished.Version + 1),
                            'Business Owner': _selectedProcess.'Business Owner', 'Business Owner Email': _selectedProcess.'Business Owner Email',
                            'Secondary Owner': _selectedProcess.'Secondary Owner', 'Secondary Owner Email': _selectedProcess.'Secondary Owner Email',
                            'Default Approver': _selectedProcess.'Default Approver', Category: _selectedProcess.Category,
                            'Publishing Status': 'Business Approval Publishing Status'.Pending,
                            'Activate On Publish': 
                                If(tggActivate_3.Value, 'Activate On Publish (Business Approval Versions)'.Yes, 'Activate On Publish (Business Approval Versions)'.No)
                        }
                    );
                    
                    Navigate(scrProcessVersion);
                    UpdateContext({ _isBusy: false })
                PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
                PressedColor: =RGBA(255, 255, 255, 1)
                PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: ="Publish"
                Visible: =false
                Width: =120
                X: =20
                Y: =Parent.Height - Self.Height - 20
                ZIndex: =3

            lblPublishedVersionInfo_2 As label:
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Size: =10
                Text: |-
                    =If(IsBlank(lastPublished), 
                        "This is the first time this process is being published.", 
                        "Last version: " & lastPublished.Version & ", published on: " & Text(lastPublished.'Created On', "dd mmm yyyy hh:mm AM/PM") & 
                        ". Publishing new version: " & lastPublished.Version + 1
                    )
                Visible: =btnPublish_2.DisplayMode = DisplayMode.Edit
                Width: =Parent.Width - Self.X - 20
                X: =btnPublish_2.X + btnPublish_2.Width + 20
                Y: =btnPublish_2.Y
                ZIndex: =4

            lblActivateOnPublish_2 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                Size: =10
                Text: |-
                    ="Activate process when published: "
                Visible: =btnPublish_2.DisplayMode = DisplayMode.Edit
                Width: =215
                X: =btnPublish_2.X
                Y: =btnPublish_2.Y - Self.Height - 80
                ZIndex: =5

            tggActivate_3 As toggleSwitch:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                Color: =RGBA(51, 51, 51, 1)
                Default: =true
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FalseFill: =RGBA(102, 102, 102, 1)
                FalseHoverFill: =RGBA(33, 33, 33, 1)
                FalseText: ="No"
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                HandleFill: =RGBA(255, 255, 255, 1)
                Height: =30
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                Size: =10
                TrueFill: =RGBA(105, 121, 126, 1)
                TrueHoverFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                TrueText: ="Yes"
                Visible: =btnPublish_2.DisplayMode = DisplayMode.Edit
                Width: =90
                X: =lblActivateOnPublish_2.X + lblActivateOnPublish_2.Width + 5
                Y: =lblActivateOnPublish_2.Y + lblActivateOnPublish_2.Height / 2 - Self.Height / 2
                ZIndex: =6

            Label9_2 As label:
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =45
                Size: =10
                Text: ="Activating this version will automatically de-activate all previous versions if exist. De-activated processes will continue to run but will not be available for new workflow instances."
                Visible: =btnPublish_2.DisplayMode = DisplayMode.Edit
                Width: =2 * (Parent.Width / 3)
                X: =btnPublish_2.X
                Y: =lblActivateOnPublish_2.Y + lblActivateOnPublish_2.Height + 5
                ZIndex: =7

            busyPublish_2 As BusyScreen:
                BusyMessage: =busyMessage
                Fill: =RGBA(255, 255, 255, 0.8)
                Height: =Parent.Height
                Visible: =false
                Width: =Parent.Width
                ZIndex: =8

            Image4_5 As image:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderThickness: =4
                Height: =30
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: ='25_black'
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedFill: =RGBA(0, 0, 0, 0)
                Visible: =false//!isPublishReady
                Width: =30
                X: =10
                Y: =5
                ZIndex: =9

            btnPublishWorkflow As Button:
                BasePaletteColor: =
                DisplayMode: =If(isPublishReady && Sum(_validationChecks, Status) = 4, DisplayMode.Edit, DisplayMode.Disabled)
                FontSize: =0
                Height: =32
                OnSelect: |
                    =With(
                        {
                            publishedVersions: SortByColumns(
                                Filter(
                                    'Business Approval Versions',
                                    Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                                ),
                                "cat_version",
                                SortOrder.Descending
                            )
                        },
                        UpdateContext({lastPublished: First(publishedVersions)})
                    );
                    UpdateContext(
                        {
                            busyMessage: "Publishing Process " & _selectedProcess.Name,
                            _isBusy: true
                        }
                    );
                    Patch(
                        'Business Approval Versions',
                        Defaults('Business Approval Versions'),
                        {
                            Process: _selectedProcess,
                            Name: _selectedProcess.Name,
                            Version: If(
                                IsBlank(lastPublished),
                                1,
                                lastPublished.Version + 1
                            ),
                            'Business Owner': _selectedProcess.'Business Owner',
                            'Business Owner Email': _selectedProcess.'Business Owner Email',
                            'Secondary Owner': _selectedProcess.'Secondary Owner',
                            'Secondary Owner Email': _selectedProcess.'Secondary Owner Email',
                            'Default Approver': _selectedProcess.'Default Approver',
                            Category: _selectedProcess.Category,
                            'Publishing Status': 'Business Approval Publishing Status'.Pending,
                            'Activate On Publish': If(
                                tggActivate_3.Value,
                                'Activate On Publish (Business Approval Versions)'.Yes,
                                'Activate On Publish (Business Approval Versions)'.No
                            )
                        }
                    );
                    Refresh('Business Approval Versions');
                    ClearCollect(_colPublishedVersions, 
                        Filter(
                            Filter('Business Approval Versions', 'Business Approval Versions (Views)'.'All Versions'),
                            Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                        )
                    );
                    UpdateContext(
                        {
                            _isBusy: false,
                            showPublishProcessContainer: false,
                            showProcessVersionContainer: true
                        }
                    );
                Text: ="Publish"
                Width: =96
                X: =20
                Y: =Parent.Height - Self.Height - 20
                ZIndex: =10

            "ProgressIndicator1 As 'Fluent Progress Indicator (1.0.22) Preview'":
                DisplayMode: =DisplayMode.Edit
                Height: =55
                Label: ="Validating process - " & _selectedProcess.Name
                Theme: =AppThemeJson
                TypeofIndicator: ='PowerCAT.ProgressIndicator.TypeofIndicator'.IndeterminateIndicator
                Visible: =!isPublishReady
                Width: =Parent.Width
                X: =0
                Y: =Gallery4_2.Y + Gallery4_2.Height + 30
                ZIndex: =12

        ProcessVersionContainer As groupContainer:
            Height: =Parent.Height - Self.Y
            Visible: =showProcessVersionContainer
            Width: =Parent.Width - Self.X
            ZIndex: =5

            "CommandBar2_15 As 'Fluent Command Bar (1.0.22)'.pcfdataset":
                DisplayMode: =DisplayMode.Edit
                Height: =40
                Items: |-
                    =/*Table(
                        {
                            ItemKey: "back",
                            ItemDisplayName: "Back",
                            ItemIconName: "NavigateBack"
                        },{
                            ItemKey: "process",
                            ItemDisplayName: "Process",
                            ItemIconName: "Flowchart"
                        },{
                            ItemKey: "workflow",
                            ItemDisplayName: "Workflow",
                            ItemIconName: "WorkFlow"
                        },{
                            ItemKey: "refresh",
                            ItemDisplayName: "Refresh",
                            ItemIconName: "Refresh"
                        }
                    )*/
                    Table({
                            ItemKey: "refresh",
                            ItemDisplayName: "Refresh",
                            ItemIconName: "Refresh"
                        }
                    )
                OnSelect: |-
                    =Switch(Self.Selected.ItemKey, 
                        "back",
                            Back(),
                        "workflow",
                            Navigate(scrWorkflowEditor),
                        "process",
                            Navigate(scrProcessEditor),
                        "refresh",
                            Refresh('Business Approval Versions');
                            ClearCollect(_colPublishedVersions, 
                            Filter(
                                Filter('Business Approval Versions', 'Business Approval Versions (Views)'.'All Versions'),
                                Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                            )
                        )
                    )
                Theme: =AppThemeJson
                Width: =Parent.Width
                X: =0
                Y: =0
                ZIndex: =1

            galProcessVersion_2 As gallery.galleryVertical:
                BorderColor: =RGBA(166, 166, 166, 1)
                DelayItemLoading: =true
                Height: =CountRows(Self.AllItems) * (Self.TemplateHeight + 2 * Self.TemplatePadding)
                Items: =_colPublishedVersions
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplateSize: =40
                Visible: =CountRows(Self.AllItems) > 0
                Width: =VersionTableHeader.Width
                X: =VersionTableHeader.X
                Y: =VersionTableHeader.Y + VersionTableHeader.Height
                ZIndex: =2

                Rectangle4_5 As rectangle:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =RGBA(230, 230, 230, 1)
                    FocusedBorderThickness: =4
                    Height: =1
                    HoverFill: =RGBA(105, 121, 126, 1)
                    OnSelect: =Select(Parent)
                    PressedFill: =RGBA(105, 121, 126, 1)
                    Width: =Parent.TemplateWidth - 5
                    Y: =Parent.TemplateHeight - 1
                    ZIndex: =1

                lblVersionNo_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight
                    OnSelect: =Select(Parent)
                    PaddingLeft: =12
                    Size: =10
                    Text: =ThisItem.Version
                    Width: =60
                    ZIndex: =2

                lblVersionCreatedBy_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight
                    OnSelect: =Select(Parent)
                    PaddingLeft: =12
                    Size: =10
                    Text: =ThisItem.'Created By'.'Full Name'
                    Width: =250
                    Wrap: =false
                    X: =92
                    ZIndex: =3

                lblVersionCreated_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight
                    OnSelect: =Select(Parent)
                    PaddingLeft: =12
                    Size: =10
                    Text: |-
                        =Text(ThisItem.'Created On', "dd mmm yyyy hh:mm AM/PM")
                    Width: =200
                    Wrap: =false
                    X: =lblVersionCreatedBy_2.X + lblVersionCreatedBy_2.Width
                    ZIndex: =4

                lblVersionPubStatus_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight
                    OnSelect: =Select(Parent)
                    PaddingLeft: =12
                    Size: =10
                    Text: =ThisItem.'Publishing Status'
                    Wrap: =false
                    X: =lblVersionCreated_2.X + lblVersionCreated_2.Width
                    ZIndex: =5

                lblVersionStatus_2 As label:
                    Align: =Align.Center
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =If(ThisItem.Status = 'Status (Business Approval Versions)'.Active, RGBA(255, 255, 255, 1), RGBA(0, 0, 0, 1))
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Fill: =If(ThisItem.Status = 'Status (Business Approval Versions)'.Active, RGBA(54, 176, 75, 1), RGBA(54, 176, 75, 0))
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    Height: =Parent.TemplateHeight - 10
                    OnSelect: =Select(Parent)
                    Size: =10
                    Text: =ThisItem.Status
                    Visible: =icoViewRuntimeProcess_2.Visible
                    Width: =90
                    Wrap: =false
                    X: =lblVersionPubStatus_2.X + lblVersionPubStatus_2.Width + 10
                    Y: =Parent.TemplateHeight / 2 - Self.Height / 2
                    ZIndex: =6

                icoRefreshPubStatus_2 As icon.Edit:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    Color: =RGBA(105, 121, 126, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(220, 220, 220, 1)
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =4
                    Height: =Parent.TemplateHeight
                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                    HoverColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                    HoverFill: =RGBA(0, 0, 0, 0)
                    Icon: =Icon.Reload
                    OnSelect: =Refresh('Business Approval Versions')
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                    PressedColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                    PressedFill: =RGBA(0, 0, 0, 0)
                    Width: =Self.Height
                    X: =lblVersionStatus_2.X + lblVersionStatus_2.Width + 5
                    ZIndex: =7

                icoViewRuntimeProcess_2 As icon.DetailList:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    Color: =RGBA(105, 121, 126, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(220, 220, 220, 1)
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =4
                    Height: =icoRefreshPubStatus_2.Height
                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                    HoverColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                    HoverFill: =RGBA(0, 0, 0, 0)
                    Icon: =Icon.Information
                    OnSelect: =Set(_selectedProcessVersion, ThisItem);Navigate(scrRuntimeProcessView)
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                    PressedColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                    PressedFill: =RGBA(0, 0, 0, 0)
                    Visible: =ThisItem.'Publishing Status' = 'Business Approval Publishing Status'.Published
                    Width: =icoRefreshPubStatus_2.Width
                    X: =icoRefreshPubStatus_2.X+ icoRefreshPubStatus_2.Width
                    Y: =icoRefreshPubStatus_2.Y
                    ZIndex: =8

                icoViewApprovalVersion_2 As icon.DetailList:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    Color: =RGBA(105, 121, 126, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(220, 220, 220, 1)
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =4
                    Height: =icoRefreshPubStatus_2.Height
                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                    HoverColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                    HoverFill: =RGBA(0, 0, 0, 0)
                    Icon: =Icon.LevelsLayersItems
                    OnSelect: =Set(_selectedProcessVersion, ThisItem);//Navigate(scrRuntimeWorkflowView)
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                    PressedColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                    PressedFill: =RGBA(0, 0, 0, 0)
                    Visible: =ThisItem.'Publishing Status' = 'Business Approval Publishing Status'.Published
                    Width: =icoRefreshPubStatus_2.Width
                    X: =icoViewRuntimeProcess_2.X+ icoViewRuntimeProcess_2.Width
                    Y: =icoRefreshPubStatus_2.Y
                    ZIndex: =9

                btnActivate_2 As button:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    Fill: =RGBA(105, 121, 126, 1)
                    FocusedBorderColor: =ColorFade(Self.Fill, -75%)
                    Font: =Font.'Segoe UI'
                    Height: =30
                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                    HoverColor: =RGBA(255, 255, 255, 1)
                    HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
                    OnSelect: |-
                        =//deactivate all other versions and activate current selection
                        ForAll(_colPublishedVersions, 
                            UpdateIf('Business Approval Versions', 'Business Approval Version' = ThisRecord.'Business Approval Version',
                                { Status: 
                                    If('Business Approval Version' = ThisItem.'Business Approval Version', 
                                    'Status (Business Approval Versions)'.Active, 'Status (Business Approval Versions)'.Inactive)
                                }
                            )
                        );
                        Select(btnRefreshPublishedVersions_2)
                    PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
                    PressedColor: =RGBA(255, 255, 255, 1)
                    PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10
                    Text: ="Activate"
                    Visible: =ThisItem.Status = 'Status (Business Approval Versions)'.Inactive
                    Width: =100
                    X: =icoViewApprovalVersion_2.X + icoViewApprovalVersion_2.Width + 10
                    Y: =lblVersionStatus_2.Y
                    ZIndex: =10

            "'Publish version title' As label":
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                PaddingLeft: =12
                Size: =10
                Text: ="Published versions for " & _selectedProcess.Name
                Width: =Parent.Width
                Y: =CommandBar2_15.Height
                ZIndex: =3

            btnRefreshPublishedVersions_2 As button:
                BorderColor: =RGBA(0, 0, 0, 0)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: =RGBA(105, 121, 126, 1)
                FocusedBorderColor: =ColorFade(Self.Fill, -75%)
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =1
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
                OnSelect: |-
                    =Refresh('Business Approval Versions');
                    ClearCollect(_colPublishedVersions, 
                        Filter(
                            Filter('Business Approval Versions', 'Business Approval Versions (Views)'.'All Versions'),
                            Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                        )
                    )
                PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
                PressedColor: =RGBA(255, 255, 255, 1)
                PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =15
                Text: =""
                Visible: =false
                Width: =1
                ZIndex: =4

            VersionTableHeader As TableHeader:
                ColumnOnClick: ="Text"
                Columns: |-
                    =Table(
                        { Index: 1, Text: "Version", Column: "cat_version", Width: 60, Offset: 0, EnableSort: false },    
                        { Index: 2, Text: "Created By", Column: "Createdby", Width: 250, Offset: -150, EnableSort: false },
                        { Index: 3, Text: "Created On", Column: "Createdon", Width: 250, Offset: -150, EnableSort: true },
                        { Index: 4, Text: "Publishing Status", Column: "cat_publishingstatus", Width: 120, Offset: -202, EnableSort: false },
                        { Index: 5, Text: "Activation Status", Column: "status", Width: 120, Offset: -305, EnableSort: false }
                    )
                EnableSort: =false
                Width: =Parent.Width - 50
                X: =20
                Y: ='Publish version title'.Y + 'Publish version title'.Height
                ZIndex: =5

            lblNoPublishversion As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Size: =10
                Text: ="No published version found."
                Visible: =!galProcessVersion_2.Visible
                Width: =Parent.Width - Self.X
                X: =galProcessVersion_2.X
                Y: =galProcessVersion_2.Y
                ZIndex: =6

        VariableContainer As groupContainer:
            Height: =Parent.Height - Self.Y
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            Visible: =showVariableContainer
            Width: =Parent.Width - Self.X
            X: =40
            Y: =40
            ZIndex: =6

            lblAppDataHeader_3 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =30
                PaddingLeft: =0
                Size: =10
                Text: ="Variables (Application Data)"
                Width: =Parent.Width - Self.X - 20
                Wrap: =false
                X: =30
                Y: =10
                ZIndex: =1

            lblProcessNotSaved_2 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(255, 0, 0, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =If(Self.Visible, 30, 0)
                PaddingLeft: =0
                Size: =10
                Text: ="Click 'Save' to save the new process before adding Variables(Application Data definitions)."
                Visible: =IsBlank(_selectedProcess)
                Width: =lblAppDataHeader_3.Width
                Wrap: =false
                X: =lblAppDataHeader_3.X
                Y: =lblAppDataHeader_3.Y + lblAppDataHeader_3.Height
                ZIndex: =2

            lblAppDataDescription_3 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =0
                Size: =10
                Text: ="Define input data from consuming application that will be used for approval conditions."
                Width: =lblAppDataHeader_3.Width
                Wrap: =false
                X: =lblProcessNotSaved_2.X
                Y: =lblProcessNotSaved_2.Y + lblProcessNotSaved_2.Height
                ZIndex: =3

            TableHeader_8 As TableHeader_7:
                ColumnOnClick: ="Text"
                Columns: |-
                    =Table(
                        { Index: 1, Text: "Field Name", Column: "cat_name", Width: 250, Offset: 0, EnableSort: true },    
                        { Index: 2, Text: "Data Type", Column: "cat_datatype", Width: 180, Offset: 0, EnableSort: true },
                        { Index: 3, Text: "Default Value", Column: "cat_defaultvalue", Width: 180, Offset: -70, EnableSort: false },
                        { Index: 3, Text: "Description", Column: "cat_description", Width: 250, Offset: -140, EnableSort: false }
                    )
                Width: =Max(Parent.Width - Self.X - 30, 920)
                X: =lblAppDataHeader_3.X
                Y: =lblAppDataDescription_3.Y + lblAppDataDescription_3.Height
                ZIndex: =4

            txtAppDataName_2 As text:
                BorderColor: =RGBA(166, 166, 166, 1)
                Color: =RGBA(51, 51, 51, 1)
                Default: =varAppDataItem.Name
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =If(lblProcessNotSaved_2.Visible, DisplayMode.Disabled, DisplayMode.Edit)
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =30
                HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                HoverColor: =RGBA(51, 51, 51, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                OnChange: =Set(variableExist,If(CountIf(galAppRequestData_3.AllItems, Name = Self.Text) > 0,true,false))
                OnSelect: =
                PaddingLeft: =5
                PressedBorderColor: =RGBA(0, 120, 212, 1)
                PressedColor: =RGBA(51, 51, 51, 1)
                PressedFill: =RGBA(255, 255, 255, 1)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Width: =246
                X: =lblAppDataHeader_3.X
                Y: =TableHeader_8.Y + TableHeader_8.Height + 2
                ZIndex: =5

            ddlDataType_2 As dropdown:
                BorderColor: =RGBA(166, 166, 166, 1)
                BorderThickness: =1
                ChevronBackground: =RGBA(255, 255, 255, 1)
                ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                ChevronFill: =RGBA(33, 33, 33, 1)
                ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                ChevronHoverFill: =RGBA(33, 33, 33, 1)
                Color: =RGBA(51, 51, 51, 1)
                Default: =varAppDataItem.'Data Type'
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =txtAppDataName_2.DisplayMode
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =30
                HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                HoverColor: =RGBA(51, 51, 51, 1)
                HoverFill: =RGBA(212, 212, 212, 1)
                Items: =Choices('Business Approval Data Type')
                PaddingBottom: =5
                PaddingLeft: =12
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                PressedColor: =RGBA(255, 255, 255, 1)
                PressedFill: =RGBA(0, 120, 212, 1)
                SelectionFill: =RGBA(0, 120, 212, 1)
                Size: =10
                Visible: =false
                Width: =178
                X: =txtAppDataName_2.X + txtAppDataName_2.Width + 6
                Y: =txtAppDataName_2.Y
                ZIndex: =6

            "ddlDataType_3 As 'Combo box'.pcfdataset":
                DefaultSelectedItems: =If(!IsBlankOrError(varAppDataItem.'Data Type'),[LookUp(Choices('Business Approval Data Type'),Value = varAppDataItem.'Data Type')])
                DisplayMode: =txtAppDataName_2.DisplayMode
                Height: =30
                Items: =Choices('Business Approval Data Type')
                Width: =178
                X: =txtAppDataName_2.X + txtAppDataName_2.Width + 6
                Y: =txtAppDataName_2.Y
                ZIndex: =7

                Value1_4 As pcfDataField.textualColumn:
                    FieldDisplayName: ="Value"
                    FieldName: ="Value"
                    FieldType: ="l"
                    FieldVariantName: ="textualColumn"
                    Order: =1
                    ZIndex: =23

            txtAppDataDefault_2 As text:
                BorderColor: =RGBA(166, 166, 166, 1)
                Color: =RGBA(51, 51, 51, 1)
                Default: =varAppDataItem.'Default Value'
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =txtAppDataName_2.DisplayMode
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Format: =If(ddlDataType_2.Selected.Value = 'Business Approval Data Type'.Number, TextFormat.Number, TextFormat.Text)
                Height: =30
                HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                HoverColor: =RGBA(51, 51, 51, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                PaddingLeft: =5
                PressedBorderColor: =RGBA(0, 120, 212, 1)
                PressedColor: =RGBA(51, 51, 51, 1)
                PressedFill: =RGBA(255, 255, 255, 1)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Width: =178
                X: =ddlDataType_2.X + ddlDataType_2.Width + 6
                Y: =TableHeader_8.Y + TableHeader_8.Height + 2
                ZIndex: =8

            dtAppDataDefault_2 As datepicker:
                BorderColor: =RGBA(166, 166, 166, 1)
                BorderThickness: =1
                CalendarHeaderFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                Color: =RGBA(51, 51, 51, 1)
                DefaultDate: =If(isDefaultDataClear, Blank(), varAppDataItem.'Default Value')
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Format: ="dd mmm yyyy"
                Height: =txtAppDataDefault_2.Height
                HoverDateFill: =RGBA(200, 200, 200, 1)
                IconBackground: =RGBA(105, 121, 126, 1)
                PaddingTop: =5
                SelectedDateFill: =RGBA(105, 121, 126, 1)
                Size: =10
                Visible: =false
                Width: =txtAppDataDefault_2.Width - If(!IsBlank(varAppDataItem.'Default Value'), 30, 0)
                X: =txtAppDataDefault_2.X
                Y: =txtAppDataDefault_2.Y
                ZIndex: =9

            "dtAppDataDefault_3 As 'Date picker'":
                DisplayMode: =txtAppDataName_2.DisplayMode
                FillColor: =
                Height: =32
                IconFill: =ColorValue(AppTheme.palette.themePrimary)
                TextColor: =
                Value: =If(isDefaultDataClear, Blank(), varAppDataItem.'Default Value')
                Visible: =ddlDataType_3.Selected.Value = 'Business Approval Data Type'.Date
                Width: =178
                X: =466
                Y: =txtAppDataDefault_2.Y
                ZIndex: =10

            ddlAppDataDefault_2 As dropdown:
                AllowEmptySelection: =true
                BorderColor: =RGBA(166, 166, 166, 1)
                BorderThickness: =1
                ChevronBackground: =RGBA(255, 255, 255, 1)
                ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                ChevronFill: =RGBA(33, 33, 33, 1)
                ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                ChevronHoverFill: =RGBA(33, 33, 33, 1)
                Color: =RGBA(51, 51, 51, 1)
                Default: =varAppDataItem.'Default Value'
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =txtAppDataDefault_2.Height
                HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                HoverColor: =RGBA(51, 51, 51, 1)
                HoverFill: =RGBA(212, 212, 212, 1)
                Items: =[ "", "True", "False" ]
                PaddingBottom: =5
                PaddingLeft: =12
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                PressedColor: =RGBA(255, 255, 255, 1)
                PressedFill: =RGBA(105, 121, 126, 1)
                SelectionFill: =RGBA(105, 121, 126, 1)
                Size: =10
                Visible: =ddlDataType_2.Selected.Value = 'Business Approval Data Type'.Boolean
                Width: =txtAppDataDefault_2.Width
                X: =txtAppDataDefault_2.X
                Y: =txtAppDataDefault_2.Y
                ZIndex: =11

            icoClearDefault_2 As icon.Cancel:
                BorderColor: =RGBA(166, 166, 166, 1)
                Color: =RGBA(105, 121, 126, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(220, 220, 220, 1)
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderThickness: =4
                Height: =dtAppDataDefault_2.Height
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                HoverFill: =RGBA(0, 0, 0, 0)
                Icon: =Icon.Cancel
                OnSelect: |-
                    =UpdateContext({ isDefaultDataClear: true })
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =8
                PaddingTop: =8
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                PressedFill: =RGBA(0, 0, 0, 0)
                Tooltip: ="Clear default"
                Visible: =dtAppDataDefault_2.Visible && !IsBlank(varAppDataItem)
                Width: =Self.Height
                X: =txtAppDataDefault_2.X + txtAppDataDefault_2.Width - Self.Width
                Y: =dtAppDataDefault_2.Y
                ZIndex: =12

            txtAppDataDesc_2 As text:
                BorderColor: =RGBA(166, 166, 166, 1)
                Color: =RGBA(51, 51, 51, 1)
                Default: =varAppDataItem.Description
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =txtAppDataName_2.DisplayMode
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =30
                HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                HoverColor: =RGBA(51, 51, 51, 1)
                HoverFill: =RGBA(255, 255, 255, 1)
                PaddingLeft: =5
                PressedBorderColor: =RGBA(0, 120, 212, 1)
                PressedColor: =RGBA(51, 51, 51, 1)
                PressedFill: =RGBA(255, 255, 255, 1)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Width: =248
                X: =txtAppDataDefault_2.X + txtAppDataDefault_2.Width + 6
                Y: =TableHeader_8.Y + TableHeader_8.Height + 2
                ZIndex: =13

            btnCancelEditData_3 As Button:
                BorderColor: =ColorValue(AppTheme.palette.neutralPrimary)
                BorderRadius: =2
                BorderStyle: =BorderStyle.Solid
                BorderThickness: =1
                ButtonType: ='Button.ButtonType'.Standard
                DisabledBorderColor: =
                DisabledFillColor: =
                DisabledTextColor: =
                DisplayMode: =DisplayMode.Edit
                FillColor: =ColorValue(AppTheme.palette.white)
                FontWeight: =FontWeight.Semibold
                Height: =30
                HoverBorderColor: =
                HoverFillColor: =
                HoverTextColor: =
                OnChange: =false
                OnSelect: =Back()
                PressedBorderColor: =
                PressedFillColor: =
                PressedTextColor: =
                Text: ="Cancel"
                TextColor: =
                Visible: =!IsBlank(varAppDataItem)
                Width: =80
                X: =btnSaveAppData_3.X + btnSaveAppData_3.Width + 8
                Y: =txtAppDataName_2.Y
                ZIndex: =14

            btnSaveAppData_2 As button:
                BorderColor: =RGBA(225, 223, 221, 1)
                BorderThickness: =1
                Color: =RGBA(0, 0, 0, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =If(IsBlank(txtAppDataName_2.Text), DisplayMode.Disabled, DisplayMode.Edit)
                Fill: =RGBA(243, 242, 241, 1)
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =30
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverFill: =RGBA(225, 223, 221, 1)
                OnSelect: |-
                    =Patch(
                        'Business Approval Data', 
                        If(IsBlank(varAppDataItem), Defaults('Business Approval Data'), varAppDataItem),
                        { 
                            Name: txtAppDataName_2.Text, 'Data Type': ddlDataType_2.Selected.Value, 
                            'Default Value': 
                                Switch(ddlDataType_2.Selected.Value,
                                    'Business Approval Data Type'.Boolean, ddlAppDataDefault_2.Selected.Value,
                                    'Business Approval Data Type'.Date, Text(dtAppDataDefault_3.Value, "dd mmm yyyy"), 
                                    txtAppDataDefault_2.Text
                                ), 
                            Description: txtAppDataDesc_2.Text,
                            Process: _selectedProcess
                        }
                    );
                    
                    UpdateContext({ varAppDataItem: Blank(), isDefaultDataClear: false });
                    Reset(txtAppDataName_2);Reset(ddlDataType_2);Reset(txtAppDataDefault_2);Reset(txtAppDataDesc_2)
                PressedBorderColor: =Self.BorderColor
                PressedColor: =Self.Color
                PressedFill: =Self.HoverFill
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: =If(IsBlank(varAppDataItem), "+ Add", "Update")
                Visible: =false
                Width: =80
                X: =txtAppDataDesc_2.X + txtAppDataDesc_2.Width + 8
                Y: =txtAppDataName_2.Y
                ZIndex: =15

            btnCancelEditData_2 As button:
                BorderColor: =RGBA(225, 223, 221, 1)
                BorderThickness: =1
                Color: =RGBA(0, 0, 0, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: =RGBA(243, 242, 241, 1)
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =30
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverFill: =RGBA(225, 223, 221, 1)
                OnSelect: |-
                    =UpdateContext({ varAppDataItem: Blank(), isDefaultDataClear: false })
                PressedBorderColor: =Self.BorderColor
                PressedColor: =Self.Color
                PressedFill: =Self.HoverFill
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: ="Cancel"
                Tooltip: ="Cancel update"
                Visible: =false
                Width: =80
                X: =btnSaveAppData_2.X + btnSaveAppData_2.Width + 8
                Y: =txtAppDataName_2.Y
                ZIndex: =16

            btnSaveAppData_3 As Button:
                BorderColor: =
                BorderRadius: =2
                ButtonType: ='Button.ButtonType'.Primary
                DisabledBorderColor: =
                DisabledFillColor: =
                DisabledTextColor: =
                DisplayMode: |+
                    =If(!IsBlank(_selectedProcess) && !IsBlank(txtAppDataName_2.Text) && !IsBlank(ddlDataType_3.Selected.Value),DisplayMode.Edit,DisplayMode.Disabled)
                    
                FillColor: =ColorValue(AppTheme.palette.themePrimary)
                FontWeight: =FontWeight.Semibold
                Height: =30
                HoverBorderColor: =
                HoverFillColor: =ColorFade(ColorValue(AppTheme.palette.themePrimary),10%)
                HoverTextColor: =
                OnChange: =false
                OnSelect: |
                    =If(
                        variableExist, Notify(txtAppDataName_2.Text & " variable already exist. Please select another name.",NotificationType.Error),
                        Patch(
                            'Business Approval Data',
                            If(
                                IsBlank(varAppDataItem),
                                Defaults('Business Approval Data'),
                                varAppDataItem
                            ),
                            {
                                Name: txtAppDataName_2.Text,
                                'Data Type': ddlDataType_3.Selected.Value,
                                'Default Value': Switch(
                                    ddlDataType_3.Selected.Value,
                                    'Business Approval Data Type'.Boolean,
                                    ddlAppDataDefault_2.Selected.Value,
                                    'Business Approval Data Type'.Date,
                                    Text(
                                        dtAppDataDefault_3.Value,
                                        "dd mmm yyyy"
                                    ),
                                    txtAppDataDefault_2.Text
                                ),
                                Description: txtAppDataDesc_2.Text,
                                Process: _selectedProcess
                            }
                        );
                        UpdateContext(
                            {
                                varAppDataItem: Blank(),
                                isDefaultDataClear: false
                            }
                        );
                        Reset(txtAppDataName_2);
                        Reset(ddlDataType_3);
                        Reset(txtAppDataDefault_2);
                        Reset(txtAppDataDesc_2)
                    );
                PressedBorderColor: =
                PressedFillColor: =
                PressedTextColor: =
                Text: =If(IsBlank(varAppDataItem), "+ Add", "Update")
                TextColor: =
                Tooltip: =If(Self.DisplayMode = DisplayMode.Disabled,"Enter the Field Name and Date Type")
                Visible: =true
                Width: =80
                X: =txtAppDataDesc_2.X + txtAppDataDesc_2.Width + 8
                Y: =txtAppDataName_2.Y
                ZIndex: =17

            galAppRequestData_3 As gallery.galleryVertical:
                BorderColor: =RGBA(166, 166, 166, 1)
                Height: =Parent.Height - Self.Y - 20
                Items: |-
                    =Filter(
                        Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                        Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                    )
                Layout: =Layout.Vertical
                TemplatePadding: =0
                TemplateSize: =32
                Width: =TableHeader_8.Width
                X: =txtAppDataName_2.X
                Y: =txtAppDataName_2.Y + txtAppDataName_2.Height + 4
                ZIndex: =18

                lblAppDataName_3 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Fill: =RGBA(243, 242, 241, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =10
                    Text: =ThisItem.Name
                    Width: =246
                    ZIndex: =1

                lblAppDataType_3 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Fill: =RGBA(243, 242, 241, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =30
                    OnSelect: =Select(Parent)
                    PaddingLeft: =12
                    Size: =10
                    Text: =ThisItem.'Data Type'
                    Width: =178
                    X: =lblAppDataName_3.X + lblAppDataName_3.Width + 6
                    ZIndex: =2

                lblAppDataDefault_3 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Fill: =RGBA(243, 242, 241, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =10
                    Text: =ThisItem.'Default Value'
                    Width: =178
                    X: =lblAppDataType_3.X + lblAppDataType_3.Width + 6
                    ZIndex: =3

                lblAppDataDesc_3 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Fill: =RGBA(243, 242, 241, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =10
                    Text: =ThisItem.Description
                    Width: =248
                    X: =lblAppDataDefault_3.X + lblAppDataDefault_3.Width + 6
                    ZIndex: =4

                icoAppDataEdit_2 As icon.Edit:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(220, 220, 220, 1)
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =4
                    Height: =30
                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                    HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    HoverFill: =RGBA(0, 0, 0, 0)
                    Icon: =Icon.Edit
                    OnSelect: |-
                        =UpdateContext({ varAppDataItem: ThisItem })
                    PaddingBottom: =6
                    PaddingLeft: =6
                    PaddingRight: =6
                    PaddingTop: =6
                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                    PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =RGBA(0, 0, 0, 0)
                    Visible: =false
                    Width: =30
                    X: =890
                    Y: =2
                    ZIndex: =5

                icoAppDataDelete_2 As icon.Edit:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(220, 220, 220, 1)
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =4
                    Height: =30
                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                    HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    HoverFill: =RGBA(0, 0, 0, 0)
                    Icon: =Icon.Trash
                    OnSelect: |-
                        =Reset(ConfirmDialog_7);
                        UpdateContext({ busyMessage: "Checking dependencies..."});
                        Set(_isBusy, true);
                        Concurrent(
                            ClearCollect(_stDeps,
                                ShowColumns(Filter('Business Approval Stages', 'Source Data'.'Business Approval Data' = ThisItem.'Business Approval Data'), "cat_name")
                            ),
                            ClearCollect(_ndDeps, 
                                ShowColumns(Filter('Business Approval Nodes', 'Source Data'.'Business Approval Data' = ThisItem.'Business Approval Data'), "cat_name")
                            ),
                            UpdateContext({cdDeps: 
                                ShowColumns(
                                    Filter('Business Approval Conditions', 'Condition Data'.'Business Approval Data' = ThisItem.'Business Approval Data'),
                                    "cat_stagenamevalue", "cat_nodenamevalue"
                                )
                            })
                        );
                        With({ countSt: CountRows(_stDeps), countNd: CountRows(_ndDeps), countCd: CountRows(cdDeps) },
                            If(countSt + countNd + countCd = 0,
                                //confirm deletion
                                UpdateContext({ 
                                    varAppDataItem: ThisItem, confirmMode: "DeleteAppData",
                                    confirmMessage: "This will delete Application Data field '" & ThisItem.Name & "'. Are you sure?" 
                                }),
                        
                                //show dependencies    
                                ForAll(cdDeps, 
                                    If(!IsBlank(cat_stagenamevalue), 
                                        Collect(_stDeps, { cat_name: cat_stagenamevalue }), 
                                        If(!IsBlank(cat_nodenamevalue), Collect(_ndDeps, { cat_name: cat_nodenamevalue }))
                                    )
                                );    
                                UpdateContext({ 
                                    confirmMode: "AckDeps",
                                    confirmMessage: "This field cannot be deleted because of the following dependencies: " & Char(10) &
                                        If(!IsEmpty(_stDeps), Char(10) & "Stages: " & Concat(_stDeps, cat_name, ", ")) &
                                        If(!IsEmpty(_ndDeps), Char(10) & "Nodes: " & Concat(_ndDeps, cat_name, ", "))
                                })
                            )
                        );
                        Set(_isBusy, false); Set(_showConfirm, true)
                    PaddingBottom: =6
                    PaddingLeft: =6
                    PaddingRight: =6
                    PaddingTop: =6
                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                    PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =RGBA(0, 0, 0, 0)
                    Visible: =false
                    Width: =30
                    X: =890
                    Y: =2
                    ZIndex: =6

                "icoApplicationDataEdit As 'Fluent Icon (1.0.22)'":
                    DisplayMode: =DisplayMode.Edit
                    Height: =32
                    IconName: ="Edit"
                    OnChange: |-
                        =UpdateContext({ varAppDataItem: ThisItem })
                    Theme: =AppThemeJson
                    Tooltip: ="Edit " &ThisItem.Name
                    Width: =32
                    X: =879
                    Y: =0
                    ZIndex: =7

                "iconApplicationDataDelete As 'Fluent Icon (1.0.22)'":
                    DisplayMode: =DisplayMode.Edit
                    Height: =32
                    IconName: ="Delete"
                    OnChange: |-
                        =Reset(ConfirmDialog_7);
                        Set(confirmAction,"deleteAppData");
                        UpdateContext({ busyMessage: "Checking dependencies..."});
                        UpdateContext({confirmMode:"DeleteAppData"});
                        Set(_isBusy, true);
                        Concurrent(
                            ClearCollect(_stDeps,
                                ShowColumns(Filter('Business Approval Stages', 'Source Data'.'Business Approval Data' = ThisItem.'Business Approval Data'), "cat_name")
                            ),
                            ClearCollect(_ndDeps, 
                                ShowColumns(Filter('Business Approval Nodes', 'Source Data'.'Business Approval Data' = ThisItem.'Business Approval Data'), "cat_name")
                            ),
                            UpdateContext({cdDeps: 
                                ShowColumns(
                                    Filter('Business Approval Conditions', 'Condition Data'.'Business Approval Data' = ThisItem.'Business Approval Data'),
                                    "cat_stagenamevalue", "cat_nodenamevalue"
                                )
                            })
                        );
                        With({ countSt: CountRows(_stDeps), countNd: CountRows(_ndDeps), countCd: CountRows(cdDeps) },
                            If(countSt + countNd + countCd = 0,
                                //confirm deletion
                                UpdateContext({ 
                                    varAppDataItem: ThisItem, confirmAction: "DeleteAppData",
                                    confirmMessage: "This will delete Application Data field '" & ThisItem.Name & "'. Are you sure?" 
                                }),
                        
                                //show dependencies    
                                ForAll(cdDeps, 
                                    If(!IsBlank(cat_stagenamevalue), 
                                        Collect(_stDeps, { cat_name: cat_stagenamevalue }), 
                                        If(!IsBlank(cat_nodenamevalue), Collect(_ndDeps, { cat_name: cat_nodenamevalue }))
                                    )
                                );    
                                UpdateContext({ 
                                    confirmAction: "AckDeps",
                                    confirmMessage: "This field cannot be deleted because of the following dependencies: " & Char(10) &
                                        If(!IsEmpty(_stDeps), Char(10) & "Stages: " & Concat(_stDeps, cat_name, ", ")) &
                                        If(!IsEmpty(_ndDeps), Char(10) & "Nodes: " & Concat(_ndDeps, cat_name, ", "))
                                })
                            )
                        );
                        Set(_isBusy, false); 
                        Set(_showConfirm, true)
                    Theme: =AppThemeJson
                    Tooltip: ="Delete " &ThisItem.Name
                    Width: =32
                    X: =920
                    Y: =0
                    ZIndex: =8

            BusyScreen_7 As BusyScreen_6:
                BusyMessage: =busyMessage
                Fill: =RGBA(255, 255, 255, 0.8)
                Height: =Parent.Height
                Visible: =false
                Width: =Parent.Width
                ZIndex: =19

            ConfirmDialog_7 As ConfirmDialog_6:
                ConfirmText: =confirmMessage
                Height: =Parent.Height
                OkOnly: =confirmMode = "AckDeps"
                OnClick: |-
                    =If(IsConfirmed,
                        Switch(confirmMode,
                            "Deactivate",
                                UpdateContext({ busyMessage: "Deactivating process " & _selectedProcess.Name });
                                Set(_isBusy, true);
                                Patch('Business Approval Processes', _selectedProcess, { Status: 'Status (Business Approval Processes)'.Inactive });   
                                Set(_selectedProcess, Blank()); 
                                Set(_isBusy, false);
                                Navigate('Business Approval Processes (Views)'.'Active Business Approval Processes'),
                    
                            "DeleteAppData",
                                UpdateContext({ busyMessage: "Deleting app data field " & varAppDataItem.Name });
                                Set(_isBusy, true);
                                Remove('Business Approval Data', varAppDataItem);
                                UpdateContext({ varAppDataItem: Blank() });
                                Set(_isBusy, false),
                            
                            "AckDeps",
                                //clear all placeholder collections
                                Clear(_stDeps);Clear(_ndDeps)
                        )
                    );
                    Set(_showConfirm, false);
                Visible: =false
                Width: =Parent.Width
                ZIndex: =23

    ConfirmDialogDelete As ConfirmDialog:
        ConfirmText: =confirmMessageDeteleStage
        Height: =Parent.Height
        OnClick: |-
            =If(
                IsConfirmed,
                Switch(
                    confirmActionDelete,
                    "Deactivate",
                    UpdateContext({busyMessage: "Deactivating process " & _selectedProcess.Name});
                    Set(
                        _isBusy,
                        true
                    );
                    Patch(
                        'Business Approval Processes',
                        _selectedProcess,
                        {Status: 'Status (Business Approval Processes)'.Inactive}
                    );
                    Set(
                        _selectedProcess,
                        Blank()
                    );
                    Set(
                        _isBusy,
                        false
                    );
                    Navigate('Business Approval Processes (Views)'.'Active Business Approval Processes'),
                    "DeleteAppData",
                    UpdateContext({busyMessage: "Deleting app data field " & varAppDataItem.Name});
                    Set(
                        _isBusy,
                        true
                    );
                    Remove(
                        'Business Approval Data',
                        varAppDataItem
                    );
                    UpdateContext({varAppDataItem: Blank()});
                    Set(
                        _isBusy,
                        false
                    ),
                    "AckDeps",
                        //clear all placeholder collections
                    Clear(_stDeps);
                    Clear(_ndDeps),
                    "delete",
                    UpdateContext({busyMessage: "Deleting Stage - " & _selectedStage.Name});
                    Set(
                        _isBusy,
                        true
                    );
                    Concurrent(
                    //remove stage
                        Remove(
                            'Business Approval Stages',
                            _selectedStage
                        ),
                    //remove nodes
                        RemoveIf(
                            'Business Approval Nodes',
                            Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage'
                        ),
                    //remove node conditions
                        RemoveIf(
                            'Business Approval Conditions',
                            Node.'Business Approval Node' in _selectedStage.'Business Approval Nodes (cat_BusinessApprovalNode_Stage_cat_Busine)'.'Business Approval Node'
                        );
                    //remove stage conditions
            RemoveIf(
                            'Business Approval Conditions',
                            Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage'
                        )
                    );
                    Set(
                        _selectedStage,
                        Blank()
                    );
                    Set(
                        _isBusy,
                        false
                    );
                    Set(
                        _showConfirmDeleteStage,
                        false
                    );
                ),
                Set(
                    _showConfirmDeleteStage,
                    false
                )
            )
        Visible: =_showConfirmDeleteStage
        Width: =Parent.Width
        ZIndex: =4

    ConfirmDialogNode As ConfirmDialog:
        ConfirmText: =confirmMessageNodeDelete
        Height: =Parent.Height
        OnClick: |-
            =If(IsConfirmed,
                UpdateContext({ busyMessage: "Deleting node - " & _selectedNode.Name });
                Set(_isBusy, true);
                Concurrent(
                    //update other nodes after this node on the same path to move up by 1 position
                    UpdateIf('Business Approval Nodes', 
                            Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage' && 
                            'Path Index' = _currentPathIndex && 'Row Index' > _currentNodeIndex,
                            { 'Row Index': 'Row Index' - 1}            
                    );
                    //remove the node 
                    Remove('Business Approval Nodes', _selectedNode),
            
                    //remove any conditions
                    RemoveIf('Business Approval Conditions', Node.'Business Approval Node' = _selectedNode.'Business Approval Node')
                );
            
                Set(_selectedNode, Blank());
                Set(_isBusy, false);
                Set(_showConfirmNode, false),
                Set(_showConfirmNode, false)
            );
        Visible: =_showConfirmNode
        Width: =Parent.Width
        ZIndex: =5

    ConfirmDialogAppDataDelete As ConfirmDialog:
        ConfirmText: =confirmMessage
        Height: =Parent.Height
        OnClick: |-
            =If(IsConfirmed,
                Switch(confirmMode,
                    "Deactivate",
                        UpdateContext({ busyMessage: "Deactivating process " & _selectedProcess.Name });
                        Set(_isBusy, true);
                        Patch('Business Approval Processes', _selectedProcess, { Status: 'Status (Business Approval Processes)'.Inactive });   
                        Set(_selectedProcess, Blank()); 
                        Set(_isBusy, false);
                        Navigate('Business Approval Processes (Views)'.'Active Business Approval Processes'),
            
                    "DeleteAppData",
                        UpdateContext({ busyMessage: "Deleting app data field " & varAppDataItem.Name });
                        Set(_isBusy, true);
                        Remove('Business Approval Data', varAppDataItem);
                        UpdateContext({ varAppDataItem: Blank() });
                        Set(_isBusy, false),
                    
                    "AckDeps",
                        //clear all placeholder collections
                        Clear(_stDeps);Clear(_ndDeps)
                )
            );
            Set(_showConfirm, false);
        Visible: =_showConfirm
        Width: =Parent.Width
        ZIndex: =6

    BusyScreen_10 As BusyScreen:
        BusyMessage: =busyMessage
        Fill: =RGBA(255, 255, 255, 0.8)
        Height: =Parent.Height
        Visible: =_isBusy
        Width: =Parent.Width
        ZIndex: =7

    ToggleModernDesigner As Toggle:
        BasePaletteColor: =
        Checked: =true
        DisplayMode: =DisplayMode.Edit
        Height: =35
        Label: ="Modern Process Designer"
        OnCheck: =false
        OnUncheck: =false
        Visible: =!BusyScreen_10.Visible && !FluentPanel.Visible
        Width: =235
        X: =DesignerContainer.Width - Self.Width
        Y: =DesignerContainer.Y 
        ZIndex: =8

