scrNodeRule As screen:
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
    OnVisible: |-
        =//cache operands if not already available
        If(IsEmpty(_operands),
            ClearCollect(_operands, 
                { 
                    operands: [
                        'Business Approval Condition Operand'.'Equals (=)', 'Business Approval Condition Operand'.'Not Equal (<>)',
                        'Business Approval Condition Operand'.'Starts With', 'Business Approval Condition Operand'.'Ends With',
                        'Business Approval Condition Operand'.Contains, 'Business Approval Condition Operand'.'Is Blank',
                        'Business Approval Condition Operand'.'Is Not Blank'
                    ],
                    type: [ 'Business Approval Data Type'.Text, 'Business Approval Data Type'.'User (Email)' ]
                },
                { 
                    operands: [
                        'Business Approval Condition Operand'.'Equals (=)', 'Business Approval Condition Operand'.'Less Than (<)',
                        'Business Approval Condition Operand'.'Less Than or Equals (<=)', 'Business Approval Condition Operand'.'Greater Than (>)',
                        'Business Approval Condition Operand'.'Greater Than or Equals (>=)', 'Business Approval Condition Operand'.'Not Equal (<>)',
                        'Business Approval Condition Operand'.'Is Blank', 'Business Approval Condition Operand'.'Is Not Blank'
                    ],
                    type: [ 'Business Approval Data Type'.Number, 'Business Approval Data Type'.'Date/Time' ]
                },
                { 
                    operands: [
                        'Business Approval Condition Operand'.'Equals (=)', 'Business Approval Condition Operand'.'Not Equal (<>)',
                        'Business Approval Condition Operand'.'Is Blank', 'Business Approval Condition Operand'.'Is Not Blank'
                    ],
                    type: [ 'Business Approval Data Type'.Boolean ]
                }
            )
        );
        
        //load conditions if exists
        If(!IsBlank(_selectedNode),
            ForAll(
                Filter(
                    Filter('Business Approval Conditions','Business Approval Conditions (Views)'.'Active Node Conditions'),
                    Node.'Business Approval Node' = _selectedNode.'Business Approval Node'
                ),
                Collect(_conditions, 
                { 
                    ConditionId: ThisRecord.'Business Approval Condition', Path: ThisRecord.'Path Index', 
                    Target: ThisRecord.'Condition Data Type', TargetData: ThisRecord.'Condition Data', 
                    TargetStage: ThisRecord.'Go To Stage', StaticValue: ThisRecord.'Condition Value' 
                })
            )
        );
        
        //allow change of condition type if there are no existing conditions defined
        //isCleared - tracks if the user clicked on "Clear" (may not yet proceed to change condition, as they can undo it)
        UpdateContext({ allowUpdateConditionType: CountRows(_conditions) = 0, isCleared: false });
        SetFocus(txtNodeName_1)

    Container1_9 As groupContainer:
        Height: =Parent.Height - Self.Y
        Width: =Parent.Width - Self.X
        ZIndex: =1

        "CommandBar2_2 As 'Fluent Command Bar (1.0.22)'.pcfdataset":
            DisplayMode: =DisplayMode.Edit
            Height: =40
            Items: |-
                =Table(
                    {
                        ItemKey: "back",
                        ItemDisplayName: "Back",
                        ItemIconName: "NavigateBack"
                    },{
                        ItemKey: "save",
                        ItemDisplayName: "Save",
                        ItemIconName: "Save"
                    },{
                        ItemKey: "saveback",
                        ItemDisplayName: "Save & Back",
                        ItemIconName: "SaveAndClose"
                    },{
                        ItemKey: "message",
                        ItemDisplayName: "Message",
                        ItemIconName: "TextDocument"
                    },{
                        ItemKey: "delete",
                        ItemDisplayName: "Delete",
                        ItemIconName: "Delete"
                    }
                )
            OnSelect: |-
                =If(Self.Selected.ItemKey = "back",Back(),
                    If(Self.Selected.ItemKey = "delete",
                        Set(_showConfirm, true),
                        
                        UpdateContext({ busyMessage: "Saving node - " & txtNodeName_1.Text });
                        Set(_isBusy, true);
                
                        //save rule-based node ("Go to Stage...")
                        Set(_selectedNode, Patch('Business Approval Nodes', Coalesce(_selectedNode, Defaults('Business Approval Nodes')),
                            {
                                Name: txtNodeName_1.Text, Description: txtNodeDesc_1.Text, Stage: _selectedStage, Process: _selectedProcess,
                                'Node Type': radNodeType_1.Selected.Value, 'Go To Stage': If(ddlGoToStageNone.Visible, ddlGoToStageNone.Selected, Blank()),
                                'Node Condition': ddlNodeCondition.Selected.Value, 
                                Operand: 
                                    If(ddlNodeOperand.Visible, ddlNodeOperand.Selected.Value, 
                                    ddlNodeCondition.Selected.Value = 'Business Approval Stage Condition'.Switch, 
                                    'Business Approval Condition Operand'.'Equals (=)',Blank()),
                                'Source Data': If(ddlNodeSourceData.Visible && 
                                    ddlNodeConditionSource.Selected.Value = 'Business Approval Condition Source Data'.'Request Data', 
                                    ddlNodeSourceData.Selected, Blank()),
                                'Source Data Type': If(ddlNodeConditionSource.Visible, ddlNodeConditionSource.Selected.Value, Blank()),
                                'Go To Paths': radSwitchNodePaths.Selected.Value,
                                'Path Index': _currentPathIndex, 'Row Index': _currentNodeIndex
                            })
                        );
                        
                        //remove any conditions that has been removed and clear the stack
                        RemoveIf('Business Approval Conditions', 'Business Approval Condition' in _removedConditions.ConditionId);
                
                        //save conditions
                        Clear(_addedConditions);
                        If(CountRows(_conditions) > 0, UpdateContext({ busyMessage: "Updating Conditions..." }));
                        ForAll(_conditions As conds,
                            With({ conditionId: GUID(conds.ConditionId)},
                                With({ condition:  LookUp('Business Approval Conditions', 'Business Approval Condition' = conditionId) },
                                    With({ addedCondition: 
                                        Patch('Business Approval Conditions', 
                                            Coalesce(condition, Defaults('Business Approval Conditions')),
                                            {
                                                'Path Index': conds.Path, 'Condition Data Type': conds.Target, Process: _selectedProcess,
                                                'Condition Data': 
                                                    If(conds.Target = 'Business Approval Condition Target Data'.'Request Data', conds.TargetData, Blank()),
                                                'Condition Value': 
                                                    If(conds.Target = 'Business Approval Condition Target Data'.'Static value', conds.StaticValue, Blank()), 
                                                Node: _selectedNode,
                                                'Go To Stage': conds.TargetStage
                                            }
                                        )},
                                        If(IsBlank(condition), 
                                            //track newly added condition
                                            Collect(_addedConditions, { Id: addedCondition.'Business Approval Condition', Path: addedCondition.'Path Index'})
                                        )
                                    )
                                )
                            )
                        );
                
                        //update in memory Condition for any newly added Condition Guids
                        ForAll(_addedConditions As added, UpdateIf(_conditions, Path = added.Path, { ConditionId: added.Id }));
                
                        //increment node index for any nodes after this node in this path, if exists
                        UpdateIf('Business Approval Nodes', 
                            'Path Index' = _selectedNode.'Path Index' && 'Row Index' >= _selectedNode.'Row Index' &&
                            ThisRecord.'Business Approval Node' <> _selectedNode.'Business Approval Node' &&
                            Stage.'Business Approval Stage' = _selectedStage.'Business Approval Stage', 
                            { 'Row Index': ThisRecord.'Row Index' + 1 }
                        );
                    
                        Set(_isBusy, false);
                        If(Self.Selected.ItemKey = "saveback", Navigate(scrWorkflowEditor))
                    )
                );
            Theme: =AppThemeJson
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

        bcProcessStage_2 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =30
            PaddingLeft: =0
            Size: =10
            Text: =_selectedProcess.Name & " > " & _selectedStage.Name & " > " & Coalesce(_selectedNode.Name, "(New node)")
            Width: =Parent.Width - Self.X - 20
            Wrap: =false
            X: =20
            Y: =CommandBar2_2.Y + CommandBar2_2.Height
            ZIndex: =2

        lblNodeType_1 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =30
            PaddingLeft: =12
            Size: =10
            Text: ="Node Type"
            Width: =120
            X: =bcProcessStage_2.X
            Y: =bcProcessStage_2.Y + bcProcessStage_2.Height + 10
            ZIndex: =3

        radNodeType_1 As radio:
            BorderColor: =RGBA(51, 51, 51, 1)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            Default: ="Go to Stage"
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisplayMode: =If(_currentNodeIndex > 0 && IsBlank(_selectedNode), DisplayMode.Edit, DisplayMode.Disabled)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =38
            HoverColor: =RGBA(51, 51, 51, 1)
            HoverFill: =RGBA(0, 0, 0, 0)
            Items: =Choices('Business Approval Node Type')
            Layout: =Layout.Horizontal
            OnChange: =
            OnSelect: =If(Self.Selected.Value = 'Business Approval Node Type'.Approval, Navigate(scrNodeEditor))
            PaddingBottom: =5
            PaddingTop: =5
            PressedColor: =RGBA(51, 51, 51, 1)
            PressedFill: =RGBA(0, 0, 0, 0)
            RadioBorderColor: =RGBA(51, 51, 51, 1)
            RadioSelectionFill: =RGBA(0, 120, 212, 1)
            RadioSize: =25
            Size: =10
            Width: =500
            X: =lblNodeType_1.X + lblNodeType_1.Width
            Y: =lblNodeType_1.Y
            ZIndex: =4

        lblNodeNameCondition As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =30
            PaddingLeft: =12
            Size: =10
            Text: ="Name"
            Width: =120
            X: =bcProcessStage_2.X
            Y: =bcProcessStage_2.Y + bcProcessStage_2.Height + 50
            ZIndex: =5

        txtNodeName_1 As text:
            BorderColor: =RGBA(166, 166, 166, 1)
            Clear: =true
            Color: =RGBA(51, 51, 51, 1)
            Default: =_selectedNode.Name
            DelayOutput: =true
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            FocusedBorderThickness: =1
            Font: =Font.'Segoe UI'
            Height: =30
            HoverBorderColor: =Self.BorderColor
            HoverColor: =RGBA(51, 51, 51, 1)
            HoverFill: =RGBA(255, 255, 255, 1)
            MaxLength: =100
            OnChange: =
            PaddingLeft: =5
            PressedBorderColor: =Self.BorderColor
            PressedColor: =RGBA(51, 51, 51, 1)
            PressedFill: =RGBA(255, 255, 255, 1)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Width: =(Parent.Width - Self.X) / 2
            X: =radNodeType_1.X
            Y: =lblNodeNameCondition.Y
            ZIndex: =6

        lblStageDesc_2 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =30
            PaddingLeft: =12
            Size: =10
            Text: ="Description"
            Width: =120
            X: =lblNodeNameCondition.X
            Y: =lblNodeNameCondition.Y + lblNodeNameCondition.Height + 5
            ZIndex: =7

        txtNodeDesc_1 As text:
            BorderColor: =RGBA(166, 166, 166, 1)
            Clear: =true
            Color: =RGBA(51, 51, 51, 1)
            Default: =_selectedNode.Description
            DelayOutput: =true
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            FocusedBorderThickness: =1
            Font: =Font.'Segoe UI'
            Height: =60
            HoverBorderColor: =Self.BorderColor
            HoverColor: =RGBA(51, 51, 51, 1)
            HoverFill: =RGBA(255, 255, 255, 1)
            MaxLength: =100
            Mode: =TextMode.MultiLine
            OnChange: =
            PaddingLeft: =5
            PressedBorderColor: =Self.BorderColor
            PressedColor: =RGBA(51, 51, 51, 1)
            PressedFill: =RGBA(255, 255, 255, 1)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Width: =(Parent.Width - Self.X) / 2
            X: =txtNodeName_1.X
            Y: =lblStageDesc_2.Y
            ZIndex: =8

        conNodeCondition As groupContainer:
            Height: =Parent.Height - Self.Y
            Width: =Parent.Width
            Y: =txtNodeDesc_1.Y + txtNodeDesc_1.Height + 10
            ZIndex: =9

            lblNodeConditionHeader As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =30
                PaddingLeft: =0
                Size: =10
                Text: ="Conditions"
                Width: =txtNodeName_1.X - Self.X
                Wrap: =false
                X: =bcProcessStage_2.X
                ZIndex: =1

            lblGoToStageNone As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Go to Stage"
                Visible: |-
                    =ddlNodeCondition.Selected.Value = 'Business Approval Stage Condition'.None || 
                    (
                        ddlNodeOperand.Visible && 
                        (
                            ddlNodeOperand.Selected.Value = 'Business Approval Condition Operand'.'Is Blank' || 
                            ddlNodeOperand.Selected.Value = 'Business Approval Condition Operand'.'Is Not Blank'
                        )
                    )
                Width: =120
                X: =lblNodeNameCondition.X
                Y: =If(ddlNodeOperand.Visible, ddlNodeOperand.Y, lblNodeCondition.Y) + lblNodeCondition.Height + 10
                ZIndex: =2

            ddlGoToStageNone As dropdown:
                BorderColor: =RGBA(166, 166, 166, 1)
                BorderThickness: =1
                ChevronBackground: =RGBA(255, 255, 255, 1)
                ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                ChevronFill: =RGBA(33, 33, 33, 1)
                ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                ChevronHoverFill: =RGBA(33, 33, 33, 1)
                Color: =RGBA(51, 51, 51, 1)
                Default: =_selectedNode.'Go To Stage'.Name
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =30
                HoverBorderColor: =Self.BorderColor
                HoverFill: =RGBA(243, 242, 241, 1)
                Items: =Filter('Business Approval Stages', Process.'Business Approval Process' = _selectedProcess.'Business Approval Process' && Order > _selectedStage.Order)
                OnChange: =
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                PressedFill: =Self.HoverFill
                SelectionColor: =Self.Color
                SelectionFill: =RGBA(243, 242, 241, 1)
                Size: =10
                Visible: =lblGoToStageNone.Visible
                Width: =txtNodeName_1.Width
                X: =lblGoToStageNone.X + lblGoToStageNone.Width
                Y: =lblGoToStageNone.Y
                ZIndex: =3

            lblNodeCondition As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Condition"
                Width: =120
                X: =lblNodeNameCondition.X
                Y: =lblNodeConditionHeader.Y + lblNodeConditionHeader.Height + 10
                ZIndex: =4

            ddlNodeCondition As dropdown:
                BorderColor: =RGBA(166, 166, 166, 1)
                BorderThickness: =1
                ChevronBackground: =RGBA(255, 255, 255, 1)
                ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                ChevronFill: =RGBA(33, 33, 33, 1)
                ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                ChevronHoverFill: =RGBA(33, 33, 33, 1)
                Color: =RGBA(51, 51, 51, 1)
                Default: =_selectedNode.'Node Condition'
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =If(allowUpdateConditionType, DisplayMode.Edit, DisplayMode.Disabled)
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =30
                HoverBorderColor: =Self.BorderColor
                HoverFill: =RGBA(243, 242, 241, 1)
                Items: =['Business Approval Stage Condition'.None, 'Business Approval Stage Condition'.'If/Else'] //Choices('Business Approval Stage Condition')
                OnChange: |-
                    =UpdateContext({ conditionsCount: CountRows(_conditions)});
                    Switch(Self.Selected.Value,
                        'Business Approval Stage Condition'.'If/Else', 
                        //if there are existing conditions, remove all except the first condition
                        Collect(_removedConditions, 
                            ShowColumns(Filter(_conditions, Path > 1), "ConditionId", "Path", "Target", "TargetData", "StaticValue", "TargetStage")
                        );
                        RemoveIf(_conditions, Path > 1);
                        If(conditionsCount = 0, 
                            ClearCollect(_conditions,
                            { 
                                ConditionId: "", Path: 1, Target: 'Business Approval Condition Target Data'.'Static value', 
                                TargetData: Blank(), StaticValue: "", TargetStage: Defaults('Business Approval Stages')
                            })
                        );
                        Reset(radSwitchNodePaths),
                        
                        'Business Approval Stage Condition'.Switch, 
                        Collect(_conditions, 
                            ForAll(Sequence(radSwitchNodePaths.Selected.Value - conditionsCount, conditionsCount + 1), 
                            { 
                                ConditionId: "", Path: Value, Target: 'Business Approval Condition Target Data'.'Static value', 
                                TargetData: Blank(), StaticValue: "", TargetStage: Blank()
                            })
                        ),
                    
                        'Business Approval Stage Condition'.None, 
                        //if there are any existing conditions, add them to the remove list
                        If(conditionsCount > 0, 
                            Collect(_removedConditions, ShowColumns(_conditions,  "ConditionId", "Path", "Target", "TargetData", "StaticValue", "TargetStage"));    
                            Clear(_conditions)
                        )
                    );
                    Reset(ddlStageOperand)
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                PressedFill: =Self.HoverFill
                SelectionColor: =Self.Color
                SelectionFill: =RGBA(243, 242, 241, 1)
                Size: =10
                Width: =txtNodeDesc_1.Width
                X: =txtNodeName_1.X
                Y: =lblNodeCondition.Y
                ZIndex: =5

            imgWorkflowDiagram_1 As image:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderThickness: =4
                Height: =If(Self.Visible, 70, 0)
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: |
                    ="data:image/svg+xml;utf8, " & 
                    Switch(radSwitchNodePaths.Selected.Value,
                        3, EncodeUrl("<svg width='657' height='382' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' overflow='hidden'><defs><clipPath id='clip0'><rect x='1718' y='254' width='657' height='382'/></clipPath></defs><g clip-path='url(#clip0)' transform='translate(-1718 -254)'><path d='M1911.5 324 2048.5 257.5 2185.5 324 2048.5 390.5Z' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='1720.5' y='516.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><rect x='1950.5' y='514.5' width='192' height='118' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M2048.52 390 2048.52 452.736 1816 452.736 1816 515.471' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><path d='M2048.01 390 2048.01 451.787 2046 451.787 2046 513.575' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='2181.5' y='514.5' width='191' height='118' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M0 0 61.7874 0 61.7874 228.498 123.575 228.498' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 2048 390)'/></g></svg>"),
                        4, EncodeUrl("<svg width='907' height='384' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' overflow='hidden'><defs><clipPath id='clip0'><rect x='551' y='760' width='907' height='384'/></clipPath></defs><g clip-path='url(#clip0)' transform='translate(-551 -760)'><path d='M870.5 830 1007.5 763.5 1144.5 830 1007.5 896.5Z' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='553.5' y='1024.5' width='192' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><rect x='790.5' y='1024.5' width='192' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M1006.71 896 1006.71 959.73 649 959.73 649 1023.46' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><path d='M1006.89 896 1006.89 959.729 886 959.729 886 1023.46' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='1027.5' y='1024.5' width='192' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><rect x='1264.5' y='1024.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M0 0 63.7293 0 63.7293 352.731 127.459 352.731' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 1007 896)'/><path d='M0 0 63.7293 0 63.7293 115.918 127.459 115.918' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 1007 896)'/></g></svg>"),
                        5, EncodeUrl("<svg width='1144' height='374' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' overflow='hidden'><defs><clipPath id='clip0'><rect x='1589' y='770' width='1144' height='374'/></clipPath></defs><g clip-path='url(#clip0)' transform='translate(-1589 -770)'><path d='M2024.5 840 2161 773.5 2297.5 840 2161 906.5Z' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='1591.5' y='1024.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><rect x='1828.5' y='1024.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M2160.14 906 2160.14 964.793 1686 964.793 1686 1023.59' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><path d='M2160.07 906 2160.07 964.793 1923 964.793 1923 1023.59' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='2065.5' y='1024.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><rect x='2302.5' y='1024.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M0 0 58.7933 0 58.7933 237.069 117.587 237.069' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 2161 906)'/><path d='M0 0 58.7933 0 58.7933 0.000360892 117.586 0.000360892' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 2161 906)'/><rect x='2539.5' y='1024.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M0 0 58.7934 0 58.7934 474.138 117.587 474.138' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 2161 906)'/></g></svg>"),
                        EncodeUrl("<svg width='522' height='386' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' overflow='hidden'><defs><clipPath id='clip0'><rect x='752' y='250' width='522' height='386'/></clipPath></defs><g clip-path='url(#clip0)' transform='translate(-752 -250)'><path d='M870.5 320.5 1007.5 253.5 1144.5 320.5 1007.5 387.5Z' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><rect x='754.5' y='516.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><rect x='1080.5' y='516.5' width='191' height='117' stroke='#000000' stroke-width='4.58333' stroke-miterlimit='8' fill='none'/><path d='M1007.36 387 1007.36 451.678 850 451.678 850 516.356' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd'/><path d='M0 0 64.6777 0 64.6777 168.735 129.355 168.735' stroke='#000000' stroke-width='2.29167' stroke-miterlimit='8' fill='none' fill-rule='evenodd' transform='matrix(1.83697e-16 1 1 -1.83697e-16 1007 387)'/></g></svg>"))
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedFill: =RGBA(0, 0, 0, 0)
                Visible: =ddlNodeCondition.Selected.Value <> 'Business Approval Stage Condition'.None
                Width: =300
                X: =radSwitchNodePaths.X
                Y: =radSwitchNodePaths.Y + radSwitchNodePaths.Height + 2
                ZIndex: =6

            radSwitchNodePaths As radio:
                BorderColor: =RGBA(51, 51, 51, 1)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                Default: =If(Self.Visible, _selectedNode.'Go To Paths')
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisplayMode: =ddlNodeCondition.DisplayMode
                FocusedBorderThickness: =0
                Font: =Font.'Segoe UI'
                Height: =If(Self.Visible, 30, 0)
                HoverColor: =RGBA(51, 51, 51, 1)
                HoverFill: =RGBA(0, 0, 0, 0)
                Items: =[ 2, 3, 4, 5]
                Layout: =Layout.Horizontal
                OnChange: |
                    =With({ count: CountRows(_conditions), newCount: radSwitchNodePaths.Selected.Value },
                        If(count > newCount, 
                            //new paths is less than current - remove last n conditions
                            //push paths that are to be removed into temp stack then remove
                            Collect(_removedConditions, 
                                ShowColumns(Filter(_conditions, Path > newCount), "ConditionId", "Path", "Target", "TargetData", "StaticValue", "TargetStage")
                            );
                            RemoveIf(_conditions, Path > newCount),
                    
                            //new paths is more than current - add conditions
                            Collect(_conditions,
                                ForAll(Sequence(newCount - count, count + 1),                 
                                    Coalesce(
                                        LookUp(_removedConditions, Path = Value),
                                        { 
                                            ConditionId: Blank(), TargetData: Blank(), StaticValue: "", TargetStage: Blank(),
                                            Path: Value, Text: "Path " & Value, Target: 'Business Approval Condition Target Data'.'Static value'
                                        }
                                    )
                                )
                            );
                    
                            //pop from temp stack for any conditions that has been restored back
                            RemoveIf(_removedConditions, Path <= newCount);
                        )
                    );
                PaddingBottom: =0
                PaddingTop: =2
                PressedColor: =RGBA(51, 51, 51, 1)
                PressedFill: =RGBA(0, 0, 0, 0)
                RadioBorderColor: =RGBA(51, 51, 51, 1)
                RadioSelectionFill: =RGBA(0, 120, 212, 1)
                RadioSize: =25
                Size: =10
                Visible: =lblSwitchPaths_1.Visible
                Width: =ddlNodeCondition.Width - 200
                X: =txtNodeName_1.X
                Y: =lblSwitchPaths_1.Y
                ZIndex: =7

            lblSwitchPaths_1 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Paths"
                Visible: =ddlNodeCondition.Selected.Value = 'Business Approval Stage Condition'.Switch
                Width: =120
                X: =lblNodeCondition.X
                Y: =lblNodeCondition.Y + lblNodeCondition.Height + 10
                ZIndex: =8

            lblNodeConditionSource As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =30
                PaddingLeft: =12
                Size: =10
                Text: ="Source"
                Visible: =ddlNodeCondition.Selected.Value <> 'Business Approval Stage Condition'.None && ddlNodeCondition.Visible
                Width: =120
                X: =lblNodeNameCondition.X
                Y: =imgWorkflowDiagram_1.Y + imgWorkflowDiagram_1.Height + 10
                ZIndex: =9

            ddlNodeConditionSource As dropdown:
                BorderColor: =RGBA(166, 166, 166, 1)
                BorderThickness: =1
                ChevronBackground: =RGBA(255, 255, 255, 1)
                ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                ChevronFill: =RGBA(33, 33, 33, 1)
                ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                ChevronHoverFill: =RGBA(33, 33, 33, 1)
                Color: =RGBA(51, 51, 51, 1)
                Default: =_selectedNode.'Source Data Type'
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =30
                HoverBorderColor: =Self.BorderColor
                HoverFill: =RGBA(243, 242, 241, 1)
                Items: =Choices('Business Approval Condition Source Data')
                OnChange: =Reset(ddlNodeOperand)
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                PressedFill: =Self.HoverFill
                SelectionColor: =Self.Color
                SelectionFill: =RGBA(243, 242, 241, 1)
                Size: =10
                Visible: =lblNodeConditionSource.Visible
                Width: =txtNodeName_1.Width
                X: =ddlNodeCondition.X
                Y: =lblNodeConditionSource.Y
                ZIndex: =10

            lblRequestDataCondition_1 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =If(Self.Visible, 30, 0)
                PaddingLeft: =12
                Size: =10
                Text: ="Request Data"
                Visible: =ddlNodeConditionSource.Selected.Value = 'Business Approval Condition Source Data'.'Request Data' && ddlNodeConditionSource.Visible
                Width: =120
                X: =lblNodeNameCondition.X
                Y: =lblNodeConditionSource.Y + lblNodeConditionSource.Height + If(Self.Visible, 10, 0)
                ZIndex: =11

            ddlNodeSourceData As dropdown:
                BorderColor: =RGBA(166, 166, 166, 1)
                BorderThickness: =1
                ChevronBackground: =RGBA(255, 255, 255, 1)
                ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                ChevronFill: =RGBA(33, 33, 33, 1)
                ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                ChevronHoverFill: =RGBA(33, 33, 33, 1)
                Color: =RGBA(51, 51, 51, 1)
                Default: =_selectedNode.'Source Data'.Name
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =lblRequestDataCondition_1.Height
                HoverBorderColor: =Self.BorderColor
                HoverFill: =RGBA(243, 242, 241, 1)
                Items: |-
                    =Filter(
                        Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                        Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                    )
                OnChange: |-
                    =UpdateIf(_conditions, true, { TargetData: Blank() }) //clear all target data value if exists
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                PressedFill: =Self.HoverFill
                SelectionColor: =Self.Color
                SelectionFill: =RGBA(243, 242, 241, 1)
                Size: =10
                Visible: =lblRequestDataCondition_1.Visible
                Width: =txtNodeName_1.Width
                X: =ddlNodeCondition.X
                Y: =lblRequestDataCondition_1.Y
                ZIndex: =12

            lblNodeRequestDataIsEmpty As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(255, 0, 0, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Fill: =RGBA(255, 255, 255, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =ddlNodeSourceData.Height
                Size: =10
                Text: ="No request data available. Create new request data in the process edit screen."
                Visible: |-
                    =IsEmpty(
                        Filter(
                            Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                            Process.'Business Approval Process' = _selectedProcess.'Business Approval Process'
                        )
                    ) && ddlNodeConditionSource.Visible && 
                    ddlNodeConditionSource.Selected.Value = 'Business Approval Condition Source Data'.'Request Data'
                Width: =ddlNodeSourceData.Width
                X: =ddlNodeSourceData.X
                Y: =ddlNodeSourceData.Y
                ZIndex: =13

            galNodeConditions As gallery.galleryVertical:
                BorderColor: =RGBA(166, 166, 166, 1)
                Height: =150
                Items: =SortByColumns(_conditions, "Path", SortOrder.Ascending)
                Layout: =Layout.Vertical
                TemplatePadding: =0
                TemplateSize: =150
                Visible: =CountRows(Self.AllItems) > 0 && ddlNodeOperand.Selected.Value <> 'Business Approval Condition Operand'.'Is Blank' && ddlNodeOperand.Selected.Value <> 'Business Approval Condition Operand'.'Is Not Blank'
                Width: |-
                    =If(ddlNodeCondition.Selected.Value = 'Business Approval Stage Condition'.'If/Else',
                        txtNodeName_1.Width,
                        Parent.Width - Self.X - 20
                    )
                WrapCount: =CountRows(Self.AllItems)
                X: =If(ddlNodeCondition.Selected.Value = 'Business Approval Stage Condition'.'If/Else', txtNodeName_1.X, lblNodeNameCondition.X)
                Y: =lblNodeOperand.Y + lblNodeOperand.Height + 10
                ZIndex: =14

                Rectangle3_1 As rectangle:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =RGBA(230, 230, 230, 1)
                    FocusedBorderThickness: =4
                    Height: =Parent.TemplateHeight
                    HoverFill: =RGBA(105, 121, 126, 1)
                    OnSelect: =Select(Parent)
                    PressedFill: =RGBA(105, 121, 126, 1)
                    Width: =Parent.TemplateWidth - 2
                    ZIndex: =1

                lblGoToStage As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =30
                    Size: =9
                    Text: ="Go to Stage"
                    Visible: =!lblNodeTargetRequestDataNotFound.Visible
                    Width: =80
                    X: =txtTargetStatic_1.X
                    Y: =txtTargetStatic_1.Y + txtTargetStatic_1.Height + 5
                    ZIndex: =2

                ddlTargetStage As dropdown:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =ThisItem.TargetStage.Name
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =30
                    HoverBorderColor: =Self.BorderColor
                    HoverFill: =RGBA(243, 242, 241, 1)
                    Items: =Filter('Business Approval Stages', Process.'Business Approval Process' = _selectedProcess.'Business Approval Process' && Order > _selectedStage.Order)
                    OnChange: |-
                        =Patch(_conditions, ThisItem, { TargetStage: ddlTargetStage.Selected })
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =Self.HoverFill
                    SelectionColor: =Self.Color
                    SelectionFill: =RGBA(243, 242, 241, 1)
                    Size: =10
                    Visible: =!lblNodeTargetRequestDataNotFound.Visible
                    Width: =ddlConditionTarget_1.Width - lblGoToStage.Width
                    X: =lblGoToStage.X + lblGoToStage.Width
                    Y: =lblGoToStage.Y
                    ZIndex: =3

                lblConditionTarget_2 As label:
                    Align: =Align.Center
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =30
                    PaddingLeft: =12
                    Size: =9
                    Text: |-
                        ="If " & 
                            If(ddlNodeSourceData.Visible, ddlNodeSourceData.Selected.Name, ddlNodeConditionSource.Selected.Value) & " " &
                            ddlNodeOperand.Selected.Value
                    Width: =Parent.TemplateWidth
                    X: =Parent.TemplateWidth / 2 - Self.Width / 2
                    Y: =5
                    ZIndex: =4

                ddlConditionTarget_1 As dropdown:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =ThisItem.Target
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =30
                    HoverBorderColor: =Self.BorderColor
                    HoverFill: =RGBA(243, 242, 241, 1)
                    Items: =Choices('Business Approval Condition Target Data')
                    OnChange: |
                        =If(Self.Selected.Value = 'Business Approval Condition Target Data'.'Request Data',
                            Patch(_conditions, ThisItem, 
                                { Target: Self.Selected.Value, TargetData: ddlNodeTargetRequestData.Selected, TargetStage: ddlTargetStage.Selected, StaticValue: Blank() }
                            ),
                            Patch(_conditions, ThisItem,
                                { Target: Self.Selected.Value, TargetData: Blank(), TargetStage: ddlTargetStage.Selected }
                            )
                        )
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =Self.HoverFill
                    SelectionColor: =Self.Color
                    SelectionFill: =RGBA(243, 242, 241, 1)
                    Size: =10
                    Width: =Min(txtNodeName_1.Width, Parent.TemplateWidth - 20)
                    X: =Parent.TemplateWidth / 2 - Self.Width / 2
                    Y: =lblConditionTarget_2.Y + lblConditionTarget_2.Height
                    ZIndex: =5

                ddlNodeTargetRequestData As dropdown:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderThickness: =1
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                    ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                    ChevronFill: =RGBA(33, 33, 33, 1)
                    ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                    ChevronHoverFill: =RGBA(33, 33, 33, 1)
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =ThisItem.TargetData.Name
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =If(Self.Visible, 30, 0)
                    HoverBorderColor: =Self.BorderColor
                    HoverFill: =RGBA(243, 242, 241, 1)
                    Items: |-
                        =Filter(
                            Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                            Process.'Business Approval Process' = _selectedProcess.'Business Approval Process' && 
                            'Business Approval Data' <> ddlNodeSourceData.Selected.'Business Approval Data' &&
                            'Data Type' = ddlNodeSourceData.Selected.'Data Type'
                        )
                    OnChange: |-
                        =Patch(_conditions, ThisItem, { TargetData: Self.Selected, StaticValue: Blank(), TargetStage: ddlTargetStage.Selected })
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                    PressedFill: =Self.HoverFill
                    SelectionColor: =Self.Color
                    SelectionFill: =RGBA(243, 242, 241, 1)
                    Size: =10
                    Visible: =ddlConditionTarget_1.Selected.Value = 'Business Approval Condition Target Data'.'Request Data'
                    Width: =ddlConditionTarget_1.Width
                    X: =ddlConditionTarget_1.X
                    Y: =ddlConditionTarget_1.Y + ddlConditionTarget_1.Height + 10
                    ZIndex: =6

                lblNodeTargetRequestDataNotFound As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =RGBA(51, 51, 51, 1)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    Fill: =RGBA(230, 230, 230, 1)
                    FocusedBorderThickness: =4
                    Font: =Font.'Segoe UI'
                    Height: =ddlNodeTargetRequestData.Height
                    OnSelect: =Select(Parent)
                    Size: =10
                    Text: ="No other data field found of similar data type for " & ddlNodeSourceData.Selected.Name & " (" & ddlNodeSourceData.Selected.'Data Type' & ")"
                    Visible: |-
                        =With({ conditionData: Filter(
                            Filter('Business Approval Data', 'Business Approval Data (Views)'.'Active Business Approval Data'),
                            Process.'Business Approval Process' = _selectedProcess.'Business Approval Process' && 
                            'Business Approval Data' <> ddlNodeSourceData.Selected.'Business Approval Data' &&
                            'Data Type' = ddlNodeSourceData.Selected.'Data Type'
                        )},
                            ddlNodeTargetRequestData.Visible && IsEmpty(conditionData)
                        )
                    Width: =ddlNodeTargetRequestData.Width
                    X: =ddlNodeTargetRequestData.X
                    Y: =ddlNodeTargetRequestData.Y
                    ZIndex: =7

                txtTargetStatic_1 As text:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    Clear: =true
                    Color: =RGBA(51, 51, 51, 1)
                    Default: =ThisItem.StaticValue
                    DelayOutput: =true
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(166, 166, 166, 1)
                    DisabledFill: =RGBA(244, 244, 244, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Format: =If(ddlNodeSourceData.Selected.'Data Type' = 'Business Approval Data Type'.Number, TextFormat.Number, TextFormat.Text)
                    Height: =30
                    HoverBorderColor: =Self.BorderColor
                    HoverColor: =RGBA(51, 51, 51, 1)
                    HoverFill: =RGBA(255, 255, 255, 1)
                    MaxLength: =100
                    OnChange: |-
                        =Patch(_conditions, ThisItem, { StaticValue: Self.Text, TargetData: Blank(), TargetStage: ddlTargetStage.Selected })
                    PaddingLeft: =5
                    PressedBorderColor: =Self.BorderColor
                    PressedColor: =RGBA(51, 51, 51, 1)
                    PressedFill: =RGBA(255, 255, 255, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10
                    Visible: =!ddlNodeTargetRequestData.Visible
                    Width: =ddlConditionTarget_1.Width
                    X: =ddlConditionTarget_1.X
                    Y: =ddlConditionTarget_1.Y + ddlConditionTarget_1.Height + 10
                    ZIndex: =8

            lblNodeOperand As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =If(Self.Visible, 30, 0)
                PaddingLeft: =12
                Size: =10
                Text: ="Operand"
                Visible: =lblNodeConditionSource.Visible && ddlNodeCondition.Selected.Value = 'Business Approval Stage Condition'.'If/Else'
                Width: =120
                X: =lblNodeNameCondition.X
                Y: =lblRequestDataCondition_1.Y + lblRequestDataCondition_1.Height + 10
                ZIndex: =15

            ddlNodeOperand As dropdown:
                BorderColor: =RGBA(166, 166, 166, 1)
                BorderThickness: =1
                ChevronBackground: =RGBA(255, 255, 255, 1)
                ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                ChevronFill: =RGBA(33, 33, 33, 1)
                ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                ChevronHoverFill: =RGBA(33, 33, 33, 1)
                Color: =RGBA(51, 51, 51, 1)
                Default: |-
                    =If(IsBlank(_selectedNode.Operand) || ddlNodeCondition.Selected.Value = 'Business Approval Stage Condition'.Switch || ddlNodeConditionSource.Selected.Value = 'Business Approval Condition Source Data'.'Previous Node Outcome',
                        'Business Approval Condition Operand'.'Equals (=)', 
                        _selectedNode.Operand
                    )
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: |-
                    =If(
                        ddlNodeCondition.Selected.Value = 'Business Approval Stage Condition'.Switch ||
                        ddlNodeConditionSource.Selected.Value = 'Business Approval Condition Source Data'.'Previous Node Outcome' ||
                        lblNodeRequestDataIsEmpty.Visible, 
                        DisplayMode.Disabled, DisplayMode.Edit
                    )
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =If(Self.Visible, 30, 0)
                HoverBorderColor: =Self.BorderColor
                HoverFill: =RGBA(243, 242, 241, 1)
                Items: |-
                    =If(ddlNodeConditionSource.Selected.Value = 'Business Approval Condition Source Data'.'Request Data',
                        LookUp(_operands, ddlNodeSourceData.Selected.'Data Type' in type).operands,
                            [ 'Business Approval Condition Operand'.'Equals (=)' ]
                    )
                OnChange: |-
                    =If(Self.Selected.Value = 'Business Approval Condition Operand'.'Is Blank' || 
                    Self.Selected.Value = 'Business Approval Condition Operand'.'Is Not Blank', 
                        Patch(_conditions, First(_conditions), { StaticValue: ""})
                    )
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                PressedFill: =Self.HoverFill
                SelectionColor: =Self.Color
                SelectionFill: =RGBA(243, 242, 241, 1)
                Size: =10
                Visible: =lblNodeOperand.Visible
                Width: =txtNodeName_1.Width
                X: =ddlNodeCondition.X
                Y: =lblNodeOperand.Y
                ZIndex: =16

            btnResetNodeConditions As button:
                BorderColor: =RGBA(0, 0, 0, 0)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: =RGBA(105, 121, 126, 1)
                FocusedBorderColor: =ColorFade(Self.Fill, -75%)
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =30
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
                OnSelect: |-
                    =If(Self.Text = "Edit",
                        //saves current condition in memory
                        ClearCollect(_savedConditions, _conditions);
                        UpdateContext({ allowUpdateConditionType: true, isCleared: true }),
                    
                        //restore saved conditions back from memory
                        ClearCollect(_conditions, _savedConditions);
                        Clear(_savedConditions);
                        Reset(ddlNodeCondition);
                        UpdateContext({ allowUpdateConditionType: false, isCleared: false })
                    )
                PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
                PressedColor: =RGBA(255, 255, 255, 1)
                PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: =If(isCleared, "Reset", "Edit")
                Visible: =(!allowUpdateConditionType || isCleared) && _currentNodeIndex > 1
                Width: =90
                X: =ddlNodeCondition.X + ddlNodeCondition.Width + 20
                Y: =ddlNodeCondition.Y
                ZIndex: =17

            lblResetConditions_1 As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(51, 51, 51, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Lighter
                Height: =30
                PaddingLeft: =0
                Size: =10
                Text: ="Currently editing a node with Conditions defined. To change condition type, click 'Edit' to change existing definitions. You can 'Reset' to undo."
                Visible: =btnResetNodeConditions.Visible
                Width: =Parent.Width - Self.X - 20
                X: =txtNodeName_1.X
                Y: =lblNodeConditionHeader.Y
                ZIndex: =18

        ConfirmDialog_4 As ConfirmDialog:
            ConfirmText: ="Deleting node - " & _selectedNode.Name & ". This cannot be undone. Are you sure?"
            Height: =Parent.Height
            OnClick: |-
                =If(IsConfirmed,
                    UpdateContext({ busyMessage: "Deleting node - " & _selectedNode.Name });
                    Set(_isBusy, true);
                    
                    Concurrent(
                        //remove the node 
                        Remove('Business Approval Nodes', _selectedNode),
                
                        //remove any conditions
                        RemoveIf('Business Approval Conditions', Node.'Business Approval Node' = _selectedNode.'Business Approval Node')
                    );
                    
                    Set(_selectedNode, Blank());
                    Set(_isBusy, false);
                    Set(_showConfirm, false);
                    Back(),
                    Set(_showConfirm, false)
                )
            Visible: =_showConfirm
            Width: =Parent.Width
            ZIndex: =10

        BusyScreen_4 As BusyScreen:
            BusyMessage: =busyMessage
            Fill: =RGBA(255, 255, 255, 0.8)
            Height: =Parent.Height
            Visible: =_isBusy
            Width: =Parent.Width
            ZIndex: =11

